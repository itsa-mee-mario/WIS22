(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='WolframDesktop 13.0' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       161,          7]
NotebookDataLength[    366207,       7832]
NotebookOptionsPosition[    364092,       7787]
NotebookOutlinePosition[    364486,       7803]
CellTagsIndexPosition[    364443,       7800]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{

Cell[CellGroupData[{
Cell[BoxData[
 RowBox[{"secondnet", "=", " ", 
  RowBox[{"net", "[", 
   RowBox[{"1", ",", " ", "1", ",", "10", ",", "2"}], "]"}]}]], "Input",
 CellChangeTimes->{{3.85089231577518*^9, 3.850892337564269*^9}, 
   3.850892460601984*^9},
 CellLabel->
  "In[135]:=",ExpressionUUID->"43da8242-a768-4fb2-bfd5-98d985cf1448"],

Cell[BoxData[
 TagBox[
  TemplateBox[{
    RowBox[{
      StyleBox[
       TagBox["NetChain", "SummaryHead"], "NonInterpretableSummary"], 
      StyleBox["[", "NonInterpretableSummary"], 
      DynamicModuleBox[{Typeset`open = True}, 
       PanelBox[
        PaneSelectorBox[{False -> GridBox[{{
              PaneBox[
               ButtonBox[
                DynamicBox[
                 FEPrivate`FrontEndResource[
                 "FEBitmaps", "SquarePlusIconMedium"], 
                 ImageSizeCache -> {12., {0., 12.}}], Appearance -> None, 
                ButtonFunction :> (Typeset`open = True), Evaluator -> 
                Automatic, Method -> "Preemptive"], 
               Alignment -> {Center, Center}, ImageSize -> {Automatic, 24}], 
              StyleBox[
               OverlayBox[{
                 GraphicsBox[{
                   Thickness[0.014925373134328358`], {
                    GrayLevel[0.6], 
                    Thickness[0.018686567164179105`], 
                    Opacity[1.], 
                    JoinForm[{
                    Style[
                    "Miter", 
                    NeuralNetworks`Private`FormattingCommon`foreground], 
                    10.}], 
                    
                    JoinedCurveBox[{{{0, 2, 0}}}, {{{23., 91.5}, {30., 
                    91.5}}}, CurveClosed -> {0}]}, {
                    GrayLevel[0.6], 
                    Thickness[0.018686567164179105`], 
                    Opacity[1.], 
                    JoinForm[{
                    Style[
                    "Miter", 
                    NeuralNetworks`Private`FormattingCommon`foreground], 
                    10.}], 
                    
                    JoinedCurveBox[{{{0, 2, 0}}}, {{{37., 91.5}, {44., 
                    91.5}}}, CurveClosed -> {0}]}, {
                    FaceForm[{
                    RGBColor[0.84, 0.84, 0.84], 
                    Opacity[1.]}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
                    15.5, 103.5}, {23.5, 103.5}, {23.5, 79.5}, {15.5, 
                    79.5}}}]}, {
                    FaceForm[{
                    GrayLevel[0.6], 
                    Opacity[1.]}], 
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2,
                     0}, {0, 1, 0}, {0, 1, 0}}}, {{{24., 104.}, {15., 104.}, {
                    15., 79.}, {24., 79.}}, {{23., 80.}, {16., 80.}, {16., 
                    103.}, {23., 103.}}}]}, {
                    FaceForm[{
                    RGBColor[0.84, 0.84, 0.84], 
                    Opacity[1.]}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
                    29.5, 103.5}, {37.5, 103.5}, {37.5, 79.5}, {29.5, 
                    79.5}}}]}, {
                    FaceForm[{
                    GrayLevel[0.6], 
                    Opacity[1.]}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2,
                     0}, {0, 1, 0}, {0, 1, 0}}}, {{{38., 104.}, {29., 104.}, {
                    29., 79.}, {38., 79.}}, {{37., 80.}, {30., 80.}, {30., 
                    103.}, {37., 103.}}}]}, {
                    FaceForm[{
                    RGBColor[0.84, 0.84, 0.84], 
                    Opacity[1.]}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
                    43.5, 103.5}, {51.5, 103.5}, {51.5, 79.5}, {43.5, 
                    79.5}}}]}, {
                    FaceForm[{
                    GrayLevel[0.6], 
                    Opacity[1.]}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2,
                     0}, {0, 1, 0}, {0, 1, 0}}}, {{{52., 104.}, {43., 104.}, {
                    43., 79.}, {52., 79.}}, {{51., 80.}, {44., 80.}, {44., 
                    103.}, {51., 103.}}}]}, {
                    FaceForm[{
                    GrayLevel[0.6], 
                    Opacity[1.]}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}}}, {{{28., 91.5}, {
                    25., 95.}, {25., 88.}}}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}}}, {{{42., 91.5}, {
                    39., 95.}, {39., 88.}}}]}}, ImageMargins -> 0, 
                  ImageSize -> {36, Automatic}, PlotRangePadding -> 0], 
                 StyleBox[
                 "uninitialized", LineColor -> RGBColor[0.66, 0, 0], 
                  FrontFaceColor -> RGBColor[0.66, 0, 0], BackFaceColor -> 
                  RGBColor[0.66, 0, 0], GraphicsColor -> RGBColor[0.66, 0, 0],
                   FontFamily -> "Roboto", FontSize -> 8, FontColor -> 
                  RGBColor[0.66, 0, 0], Background -> GrayLevel[1, 0.65]]}, 
                Alignment -> {Center, 
                  Scaled[0.0001]}], CacheGraphics -> False], 
              GridBox[{{
                 StyleBox[
                  TemplateBox[{
                    TemplateBox[{"\[ThinSpace]", "\" \"", 
                    StyleBox["\"Input\"", 
                    GrayLevel[0], StripOnInput -> False], "\"port\""}, 
                    "RowWithSeparators"], "\":\""}, "RowDefault"], 
                  "SummaryItemAnnotation"], 
                 StyleBox[
                  TemplateBox[{"\[ThinSpace]", "\" \"", "\"vector\"", 
                    StyleBox[
                    "\"(\[VeryThinSpace]size: 1\[VeryThinSpace])\"", 
                    GrayLevel[0.5], StripOnInput -> False]}, 
                   "RowWithSeparators"], "SummaryItem"]}, {
                 StyleBox[
                  TemplateBox[{
                    TemplateBox[{"\[ThinSpace]", "\" \"", 
                    StyleBox["\"Output\"", 
                    GrayLevel[0], StripOnInput -> False], "\"port\""}, 
                    "RowWithSeparators"], "\":\""}, "RowDefault"], 
                  "SummaryItemAnnotation"], 
                 StyleBox[
                  TemplateBox[{"\[ThinSpace]", "\" \"", "\"vector\"", 
                    StyleBox[
                    "\"(\[VeryThinSpace]size: 1\[VeryThinSpace])\"", 
                    GrayLevel[0.5], StripOnInput -> False]}, 
                   "RowWithSeparators"], "SummaryItem"]}}, BaselinePosition -> 
               Automatic, 
               GridBoxAlignment -> {
                "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
               GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
               GridBoxSpacings -> {
                "Columns" -> {{2}}, "Rows" -> {{Automatic}}}]}}, 
            BaselinePosition -> {1, 3}, 
            GridBoxAlignment -> {"Rows" -> {{Top}}}, 
            GridBoxItemSize -> {
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
            GridBoxSpacings -> {"Columns" -> {
                Offset[0.], {
                 Offset[0.5599999999999999]}, 
                Offset[0.]}, "Rows" -> {
                Offset[0.], {
                 Offset[0.4]}, 
                Offset[0.]}}], True -> GridBox[{{
              PaneBox[
               ButtonBox[
                DynamicBox[
                 FEPrivate`FrontEndResource[
                 "FEBitmaps", "SquareMinusIconMedium"], 
                 ImageSizeCache -> {12., {0., 12.}}], Appearance -> None, 
                ButtonFunction :> (Typeset`open = False), Evaluator -> 
                Automatic, Method -> "Preemptive"], 
               Alignment -> {Center, Center}, ImageSize -> {Automatic, 24}], 
              StyleBox[
               OverlayBox[{
                 GraphicsBox[{
                   Thickness[0.014925373134328358`], {
                    GrayLevel[0.6], 
                    Thickness[0.018686567164179105`], 
                    Opacity[1.], 
                    JoinForm[{
                    Style[
                    "Miter", 
                    NeuralNetworks`Private`FormattingCommon`foreground], 
                    10.}], 
                    
                    JoinedCurveBox[{{{0, 2, 0}}}, {{{23., 91.5}, {30., 
                    91.5}}}, CurveClosed -> {0}]}, {
                    GrayLevel[0.6], 
                    Thickness[0.018686567164179105`], 
                    Opacity[1.], 
                    JoinForm[{
                    Style[
                    "Miter", 
                    NeuralNetworks`Private`FormattingCommon`foreground], 
                    10.}], 
                    
                    JoinedCurveBox[{{{0, 2, 0}}}, {{{37., 91.5}, {44., 
                    91.5}}}, CurveClosed -> {0}]}, {
                    FaceForm[{
                    RGBColor[0.84, 0.84, 0.84], 
                    Opacity[1.]}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
                    15.5, 103.5}, {23.5, 103.5}, {23.5, 79.5}, {15.5, 
                    79.5}}}]}, {
                    FaceForm[{
                    GrayLevel[0.6], 
                    Opacity[1.]}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2,
                     0}, {0, 1, 0}, {0, 1, 0}}}, {{{24., 104.}, {15., 104.}, {
                    15., 79.}, {24., 79.}}, {{23., 80.}, {16., 80.}, {16., 
                    103.}, {23., 103.}}}]}, {
                    FaceForm[{
                    RGBColor[0.84, 0.84, 0.84], 
                    Opacity[1.]}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
                    29.5, 103.5}, {37.5, 103.5}, {37.5, 79.5}, {29.5, 
                    79.5}}}]}, {
                    FaceForm[{
                    GrayLevel[0.6], 
                    Opacity[1.]}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2,
                     0}, {0, 1, 0}, {0, 1, 0}}}, {{{38., 104.}, {29., 104.}, {
                    29., 79.}, {38., 79.}}, {{37., 80.}, {30., 80.}, {30., 
                    103.}, {37., 103.}}}]}, {
                    FaceForm[{
                    RGBColor[0.84, 0.84, 0.84], 
                    Opacity[1.]}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
                    43.5, 103.5}, {51.5, 103.5}, {51.5, 79.5}, {43.5, 
                    79.5}}}]}, {
                    FaceForm[{
                    GrayLevel[0.6], 
                    Opacity[1.]}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2,
                     0}, {0, 1, 0}, {0, 1, 0}}}, {{{52., 104.}, {43., 104.}, {
                    43., 79.}, {52., 79.}}, {{51., 80.}, {44., 80.}, {44., 
                    103.}, {51., 103.}}}]}, {
                    FaceForm[{
                    GrayLevel[0.6], 
                    Opacity[1.]}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}}}, {{{28., 91.5}, {
                    25., 95.}, {25., 88.}}}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}}}, {{{42., 91.5}, {
                    39., 95.}, {39., 88.}}}]}}, ImageMargins -> 0, 
                  ImageSize -> {36, Automatic}, PlotRangePadding -> 0], 
                 StyleBox[
                 "uninitialized", LineColor -> RGBColor[0.66, 0, 0], 
                  FrontFaceColor -> RGBColor[0.66, 0, 0], BackFaceColor -> 
                  RGBColor[0.66, 0, 0], GraphicsColor -> RGBColor[0.66, 0, 0],
                   FontFamily -> "Roboto", FontSize -> 8, FontColor -> 
                  RGBColor[0.66, 0, 0], Background -> GrayLevel[1, 0.65]]}, 
                Alignment -> {Center, 
                  Scaled[0.0001]}], CacheGraphics -> False], 
              GridBox[{{
                 
                 DynamicModuleBox[{
                  NeuralNetworks`Private`NetChain`assoc3 = <|
                    "Type" -> "Chain", 
                    "Nodes" -> <|
                    "1" -> <|
                    "Type" -> "Linear", 
                    "Arrays" -> <|
                    "Weights" -> 
                    NeuralNetworks`TensorT[{10, 1}, NeuralNetworks`RealT], 
                    "Biases" -> NeuralNetworks`Nullable[
                    NeuralNetworks`TensorT[{10}, NeuralNetworks`RealT]]|>, 
                    "Parameters" -> <|
                    "OutputDimensions" -> {10}, "$OutputSize" -> 10, 
                    "$InputSize" -> 1, "$InputDimensions" -> {1}|>, 
                    "Inputs" -> <|
                    "Input" -> 
                    NeuralNetworks`TensorT[{1}, NeuralNetworks`AtomT]|>, 
                    "Outputs" -> <|
                    "Output" -> 
                    NeuralNetworks`TensorT[{10}, NeuralNetworks`RealT]|>|>, 
                    "2" -> <|
                    "Type" -> "Function", "Arrays" -> <||>, 
                    "Parameters" -> <|
                    "Function" -> Tanh, 
                    "Net" -> <|
                    "Type" -> "Elementwise", "Arrays" -> <||>, 
                    "Parameters" -> <|
                    "Function" -> NeuralNetworks`ValidatedParameter[Tanh], 
                    "$Dimensions" -> {10}|>, 
                    "Inputs" -> <|
                    "Input" -> NeuralNetworks`TensorT[{10}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{10}, 
                    NeuralNetworks`RealT]|>|>, "$InputNames" -> {"Input"}, 
                    "$OutputNames" -> {"Output"}|>, 
                    "Inputs" -> <|
                    "Input" -> 
                    NeuralNetworks`TensorT[{10}, NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|
                    "Output" -> 
                    NeuralNetworks`TensorT[{10}, NeuralNetworks`RealT]|>|>, 
                    "3" -> <|
                    "Type" -> "Chain", 
                    "Nodes" -> <|
                    "1" -> <|"Type" -> "Chain", 
                    "Nodes" -> <|
                    "1" -> <|"Type" -> "Linear", 
                    "Arrays" -> <|"Weights" -> 
                    NeuralNetworks`TensorT[{10, 10}, NeuralNetworks`RealT], 
                    "Biases" -> NeuralNetworks`Nullable[
                    NeuralNetworks`TensorT[{10}, NeuralNetworks`RealT]]|>, 
                    "Parameters" -> <|
                    "OutputDimensions" -> {10}, "$OutputSize" -> 10, 
                    "$InputSize" -> 10, "$InputDimensions" -> {10}|>, 
                    "Inputs" -> <|"Input" -> 
                    NeuralNetworks`TensorT[{10}, NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> 
                    NeuralNetworks`TensorT[{10}, NeuralNetworks`RealT]|>|>, 
                    "2" -> <|"Type" -> "Elementwise", "Arrays" -> <||>, 
                    "Parameters" -> <|
                    "Function" -> NeuralNetworks`ValidatedParameter[Tanh], 
                    "$Dimensions" -> {10}|>, 
                    "Inputs" -> <|"Input" -> 
                    NeuralNetworks`TensorT[{10}, NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> 
                    NeuralNetworks`TensorT[{10}, NeuralNetworks`RealT]|>|>|>, 
                    "Edges" -> {
                    NeuralNetworks`NetPath["Nodes", "1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Nodes", "2", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "1", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "2", "Outputs", "Output"]}, 
                    "Inputs" -> <|
                    "Input" -> NeuralNetworks`TensorT[{10}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{10}, 
                    NeuralNetworks`RealT]|>|>, 
                    "2" -> <|"Type" -> "Chain", 
                    "Nodes" -> <|
                    "1" -> <|"Type" -> "Linear", 
                    "Arrays" -> <|"Weights" -> 
                    NeuralNetworks`TensorT[{10, 10}, NeuralNetworks`RealT], 
                    "Biases" -> NeuralNetworks`Nullable[
                    NeuralNetworks`TensorT[{10}, NeuralNetworks`RealT]]|>, 
                    "Parameters" -> <|
                    "OutputDimensions" -> {10}, "$OutputSize" -> 10, 
                    "$InputSize" -> 10, "$InputDimensions" -> {10}|>, 
                    "Inputs" -> <|"Input" -> 
                    NeuralNetworks`TensorT[{10}, NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> 
                    NeuralNetworks`TensorT[{10}, NeuralNetworks`RealT]|>|>, 
                    "2" -> <|"Type" -> "Elementwise", "Arrays" -> <||>, 
                    "Parameters" -> <|
                    "Function" -> NeuralNetworks`ValidatedParameter[Tanh], 
                    "$Dimensions" -> {10}|>, 
                    "Inputs" -> <|"Input" -> 
                    NeuralNetworks`TensorT[{10}, NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> 
                    NeuralNetworks`TensorT[{10}, NeuralNetworks`RealT]|>|>|>, 
                    "Edges" -> {
                    NeuralNetworks`NetPath["Nodes", "1", "Inputs", "Input"] -> N\
euralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Nodes", "2", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "1", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "2", "Outputs", "Output"]}, 
                    "Inputs" -> <|
                    "Input" -> NeuralNetworks`TensorT[{10}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{10}, 
                    NeuralNetworks`RealT]|>|>|>, 
                    "Edges" -> {
                    NeuralNetworks`NetPath["Nodes", "1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Nodes", "2", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "1", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "2", "Outputs", "Output"]}, 
                    "Inputs" -> <|
                    "Input" -> 
                    NeuralNetworks`TensorT[{10}, NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|
                    "Output" -> 
                    NeuralNetworks`TensorT[{10}, NeuralNetworks`RealT]|>|>, 
                    "4" -> <|
                    "Type" -> "Linear", 
                    "Arrays" -> <|
                    "Weights" -> 
                    NeuralNetworks`TensorT[{1, 10}, NeuralNetworks`RealT], 
                    "Biases" -> NeuralNetworks`Nullable[
                    NeuralNetworks`TensorT[{1}, NeuralNetworks`RealT]]|>, 
                    "Parameters" -> <|
                    "OutputDimensions" -> {1}, "$OutputSize" -> 1, 
                    "$InputSize" -> 10, "$InputDimensions" -> {10}|>, 
                    "Inputs" -> <|
                    "Input" -> 
                    NeuralNetworks`TensorT[{10}, NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|
                    "Output" -> 
                    NeuralNetworks`TensorT[{1}, NeuralNetworks`RealT]|>|>|>, 
                    "Edges" -> {
                    NeuralNetworks`NetPath["Nodes", "1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Nodes", "2", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "1", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "3", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "2", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "4", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "3", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "4", "Outputs", "Output"]}, 
                    "Inputs" -> <|
                    "Input" -> 
                    NeuralNetworks`TensorT[{1}, NeuralNetworks`AtomT]|>, 
                    "Outputs" -> <|
                    "Output" -> 
                    NeuralNetworks`TensorT[{1}, NeuralNetworks`RealT]|>|>, 
                   NeuralNetworks`Private`NetChain`opart, 
                   NeuralNetworks`Private`NetChain`part, 
                   NeuralNetworks`Private`NetChain`selected = Null}, 
                  DynamicBox[
                   GridBox[{{
                    TagBox[
                    TagBox[
                    GridBox[{{
                    TagBox[
                    TagBox[
                    "\"\"", Annotation[#, {"Inputs", "Input"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    "\"Input\"", 
                    Annotation[#, {"Inputs", "Input"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    TemplateBox[{"\[ThinSpace]", "\" \"", "\"vector\"", 
                    StyleBox[
                    "\"(\[VeryThinSpace]size: 1\[VeryThinSpace])\"", 
                    GrayLevel[0.5], StripOnInput -> False]}, 
                    "RowWithSeparators"], 
                    Annotation[#, {"Inputs", "Input"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}, {
                    TagBox[
                    TagBox[
                    StyleBox["\"1\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "1"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    StyleBox["LinearLayer", 
                    RGBColor[0.66, 0, 0], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "1"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    TemplateBox[{"\[ThinSpace]", "\" \"", "\"vector\"", 
                    StyleBox["\"(\[VeryThinSpace]size: 10\[VeryThinSpace])\"", 
                    GrayLevel[0.5], StripOnInput -> False]}, 
                    "RowWithSeparators"], 
                    Annotation[#, {"Nodes", "1"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}, {
                    TagBox[
                    TagBox[
                    StyleBox["\"2\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "2"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    StyleBox[
                    TagBox[
                    RowBox[{"FunctionLayer", "[", "Tanh", "]"}], HoldForm], 
                    GrayLevel[0], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "2"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    TemplateBox[{"\[ThinSpace]", "\" \"", "\"vector\"", 
                    StyleBox["\"(\[VeryThinSpace]size: 10\[VeryThinSpace])\"", 
                    GrayLevel[0.5], StripOnInput -> False]}, 
                    "RowWithSeparators"], 
                    Annotation[#, {"Nodes", "2"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}, {
                    TagBox[
                    TagBox[
                    StyleBox["\"3\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "3"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    StyleBox[
                    TemplateBox[{"NetChain", "\" \"", 
                    
                    TemplateBox[{"\"(\"", "2", "\" nodes)\""}, "Row", 
                    DisplayFunction -> (RowBox[{
                    TemplateSlotSequence[1, "\[InvisibleSpace]"]}]& ), 
                    InterpretationFunction -> (RowBox[{"Row", "[", 
                    RowBox[{
                    RowBox[{"{", 
                    TemplateSlotSequence[1, ","], "}"}], ",", 
                    RowBox[{"BaseStyle", "\[Rule]", 
                    RowBox[{"GrayLevel", "[", "0.5`", "]"}]}]}], "]"}]& ), 
                    BaseStyle -> GrayLevel[0.5]]}, "RowDefault"], 
                    RGBColor[0.66, 0, 0], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "3"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    TemplateBox[{"\[ThinSpace]", "\" \"", "\"vector\"", 
                    StyleBox["\"(\[VeryThinSpace]size: 10\[VeryThinSpace])\"", 
                    GrayLevel[0.5], StripOnInput -> False]}, 
                    "RowWithSeparators"], 
                    Annotation[#, {"Nodes", "3"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}, {
                    TagBox[
                    TagBox[
                    StyleBox["\"4\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "4"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    StyleBox["LinearLayer", 
                    RGBColor[0.66, 0, 0], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "4"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    TemplateBox[{"\[ThinSpace]", "\" \"", "\"vector\"", 
                    StyleBox[
                    "\"(\[VeryThinSpace]size: 1\[VeryThinSpace])\"", 
                    GrayLevel[0.5], StripOnInput -> False]}, 
                    "RowWithSeparators"], 
                    Annotation[#, {"Nodes", "4"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}, {
                    TagBox[
                    TagBox["\"\"", 
                    Annotation[#, {"Outputs", "Output"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    "\"Output\"", 
                    Annotation[#, {"Outputs", "Output"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    TemplateBox[{"\[ThinSpace]", "\" \"", "\"vector\"", 
                    StyleBox[
                    "\"(\[VeryThinSpace]size: 1\[VeryThinSpace])\"", 
                    GrayLevel[0.5], StripOnInput -> False]}, 
                    "RowWithSeparators"], 
                    Annotation[#, {"Outputs", "Output"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {"Columns" -> {{1.1}}}], "Grid"], 
                    EventHandlerTag[{"MouseClicked" :> If[
                    ListQ[
                    NeuralNetworks`Private`NetChain`part = MouseAnnotation[]],
                     If[NeuralNetworks`Private`NetChain`opart === 
                    NeuralNetworks`Private`NetChain`part, 
                    NeuralNetworks`Private`NetChain`selected = Null; 
                    NeuralNetworks`Private`NetChain`opart = Null, 
                    NeuralNetworks`Private`NetChain`selected = 
                    Part[NeuralNetworks`Private`NetChain`assoc3, 
                    Apply[Sequence, NeuralNetworks`Private`NetChain`part]]; 
                    NeuralNetworks`Private`NetChain`opart = 
                    NeuralNetworks`Private`NetChain`part; Null]; Null], 
                    Method -> "Preemptive", PassEventsDown -> Automatic, 
                    PassEventsUp -> True}]]}, 
                    NeuralNetworks`FormatSelectedParameterChain[
                    NeuralNetworks`Private`NetChain`selected, 
                    NeuralNetworks`Private`NetChain`part, <||>, {}]}, 
                    GridBoxSpacings -> {"Columns" -> {{1}}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    GridFrameMargins -> {{0, 0}, {0, 0}}], 
                   ImageSizeCache -> {173., {33.4921875, 38.5078125}}, 
                   TrackedSymbols :> {
                    NeuralNetworks`Private`NetChain`selected}], 
                  Initialization :> {NetChain}]}}, BaselinePosition -> 
               Automatic, 
               GridBoxAlignment -> {
                "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
               GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
               GridBoxSpacings -> {
                "Columns" -> {{2}}, "Rows" -> {{Automatic}}}]}}, 
            BaselinePosition -> {1, 1}, 
            GridBoxAlignment -> {"Rows" -> {{Top}}}, 
            GridBoxItemSize -> {
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
            GridBoxSpacings -> {"Columns" -> {
                Offset[0.], {
                 Offset[0.5599999999999999]}, 
                Offset[0.]}, "Rows" -> {
                Offset[0.], {
                 Offset[0.4]}, 
                Offset[0.]}}]}, 
         Dynamic[Typeset`open], ImageSize -> Automatic], 
        BaseStyle -> {
         ShowStringCharacters -> False, NumberMarks -> False, PrintPrecision -> 
          3, ShowSyntaxStyles -> False}, BaselinePosition -> Baseline]], 
      StyleBox["]", "NonInterpretableSummary"]}]},
   "CopyTag",
   DisplayFunction->(#& ),
   InterpretationFunction->("NetChain[<>]"& )],
  False,
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",
 CellChangeTimes->{{3.8508923169794188`*^9, 3.850892338455365*^9}, 
   3.850892428612255*^9, 3.8508924610908957`*^9},
 CellLabel->
  "Out[135]=",ExpressionUUID->"5bde502d-a13f-488f-9ff0-ea89f9e6ea2b"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"data", "=", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"x", ",", 
       RowBox[{"oscillator", "[", 
        RowBox[{"2", ",", "20", ",", "x"}], "]"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"x", ",", "0", ",", "0.5", ",", "0.05"}], "}"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"traindata", " ", "=", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{"data", "[", 
         RowBox[{"[", "i", "]"}], "]"}], "[", 
        RowBox[{"[", "1", "]"}], "]"}], "}"}], "->", " ", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"data", "[", 
         RowBox[{"[", "i", "]"}], "]"}], "[", 
        RowBox[{"[", "2", "]"}], "]"}], "}"}]}], ",", " ", 
     RowBox[{"{", 
      RowBox[{"i", ",", " ", "1", ",", " ", 
       RowBox[{"Length", "[", "data", "]"}]}], "}"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"traindata", " ", "=", " ", 
  RowBox[{"RandomChoice", "[", 
   RowBox[{"traindata", ",", " ", 
    RowBox[{"Length", "[", "traindata", "]"}]}], "]"}]}]}], "Input",
 CellChangeTimes->{{3.850892477300193*^9, 3.850892506093739*^9}, {
  3.850892635612173*^9, 3.850892706636537*^9}},
 CellLabel->"In[11]:=",ExpressionUUID->"82aa4030-f925-4563-9700-d8e26c5b3bf6"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{
    RowBox[{"{", "0.15000000000000002`", "}"}], "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"-", "0.7228973850189276`"}], "}"}]}], ",", 
   RowBox[{
    RowBox[{"{", "0.25`", "}"}], "\[Rule]", 
    RowBox[{"{", "0.11359510730582656`", "}"}]}], ",", 
   RowBox[{
    RowBox[{"{", "0.30000000000000004`", "}"}], "\[Rule]", 
    RowBox[{"{", "0.5115407251517651`", "}"}]}], ",", 
   RowBox[{
    RowBox[{"{", "0.5`", "}"}], "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"-", "0.3287914073491855`"}], "}"}]}], ",", 
   RowBox[{
    RowBox[{"{", "0.1`", "}"}], "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"-", "0.26589018605833553`"}], "}"}]}], ",", 
   RowBox[{
    RowBox[{"{", "0.2`", "}"}], "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"-", "0.48913597868707465`"}], "}"}]}], ",", 
   RowBox[{
    RowBox[{"{", "0.`", "}"}], "\[Rule]", 
    RowBox[{"{", "1.`", "}"}]}], ",", 
   RowBox[{
    RowBox[{"{", "0.45`", "}"}], "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"-", "0.35359802227280923`"}], "}"}]}], ",", 
   RowBox[{
    RowBox[{"{", "0.35000000000000003`", "}"}], "\[Rule]", 
    RowBox[{"{", "0.4071661276405342`", "}"}]}], ",", 
   RowBox[{
    RowBox[{"{", "0.5`", "}"}], "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"-", "0.3287914073491855`"}], "}"}]}], ",", 
   RowBox[{
    RowBox[{"{", "0.05`", "}"}], "\[Rule]", 
    RowBox[{"{", "0.5654087631745865`", "}"}]}]}], "}"}]], "Output",
 CellChangeTimes->{{3.85089241228533*^9, 3.850892430038413*^9}, {
   3.850892462826499*^9, 3.85089250668342*^9}, {3.850892652716632*^9, 
   3.850892676990718*^9}, 3.850892707159691*^9, 3.8508929800316963`*^9, 
   3.850893065861189*^9, 3.850895470584696*^9},
 CellLabel->"Out[13]=",ExpressionUUID->"e78c12a3-d86b-41be-a543-6bd41d770e3b"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"xData", "=", " ", 
  RowBox[{
   RowBox[{
    RowBox[{"#", "[", 
     RowBox[{"[", "1", "]"}], "]"}], "&"}], "/@", "traindata"}]}]], "Input",
 CellChangeTimes->{{3.8508929824809723`*^9, 3.850892983254991*^9}, {
  3.850893030032411*^9, 3.850893055605196*^9}, {3.8508931373515663`*^9, 
  3.850893142106175*^9}},
 CellLabel->"In[18]:=",ExpressionUUID->"0d93859e-8a84-4a09-8930-68f5d6729a2d"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", "0.15000000000000002`", "}"}], ",", 
   RowBox[{"{", "0.25`", "}"}], ",", 
   RowBox[{"{", "0.30000000000000004`", "}"}], ",", 
   RowBox[{"{", "0.5`", "}"}], ",", 
   RowBox[{"{", "0.1`", "}"}], ",", 
   RowBox[{"{", "0.2`", "}"}], ",", 
   RowBox[{"{", "0.`", "}"}], ",", 
   RowBox[{"{", "0.45`", "}"}], ",", 
   RowBox[{"{", "0.35000000000000003`", "}"}], ",", 
   RowBox[{"{", "0.5`", "}"}], ",", 
   RowBox[{"{", "0.05`", "}"}]}], "}"}]], "Output",
 CellChangeTimes->{
  3.8508929836760893`*^9, {3.850893057148222*^9, 3.8508930672395144`*^9}, 
   3.850893142861487*^9, 3.85089549442304*^9},
 CellLabel->"Out[18]=",ExpressionUUID->"022c3877-0606-4569-bf57-5abbe4735456"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Targets", " ", "=", " ", 
  RowBox[{
   RowBox[{
    RowBox[{"#", "[", 
     RowBox[{"[", "2", "]"}], "]"}], "&"}], "/@", "traindata"}]}]], "Input",
 CellChangeTimes->{{3.850893149046051*^9, 3.850893154612159*^9}},
 CellLabel->"In[19]:=",ExpressionUUID->"992be216-a291-4935-bbc7-ce757a17437e"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"-", "0.7228973850189276`"}], "}"}], ",", 
   RowBox[{"{", "0.11359510730582656`", "}"}], ",", 
   RowBox[{"{", "0.5115407251517651`", "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"-", "0.3287914073491855`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"-", "0.26589018605833553`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"-", "0.48913597868707465`"}], "}"}], ",", 
   RowBox[{"{", "1.`", "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"-", "0.35359802227280923`"}], "}"}], ",", 
   RowBox[{"{", "0.4071661276405342`", "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"-", "0.3287914073491855`"}], "}"}], ",", 
   RowBox[{"{", "0.5654087631745865`", "}"}]}], "}"}]], "Output",
 CellChangeTimes->{3.8508931549916267`*^9, 3.850895497036544*^9},
 CellLabel->"Out[19]=",ExpressionUUID->"c88cc542-e05d-43b8-82d0-004d43a7f536"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{" ", 
  RowBox[{
   RowBox[{"secondnet", " ", "=", " ", 
    RowBox[{"NetTrain", "[", 
     RowBox[{"secondnet", ",", "traindata", ",", 
      RowBox[{"{", 
       RowBox[{"\"\<TrainedNet\>\"", ",", " ", "\"\<ResultsObject\>\""}], 
       "}"}]}], " ", "]"}]}], "\[IndentingNewLine]"}]}]], "Input",
 CellChangeTimes->{{3.850892357196723*^9, 3.850892393987583*^9}, {
  3.85089265719144*^9, 3.850892662788748*^9}, {3.850892760707354*^9, 
  3.850892763042418*^9}},
 CellLabel->
  "In[162]:=",ExpressionUUID->"ffd41f8a-7a8f-4c58-bb73-dbb5e098938c"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   TagBox[
    TemplateBox[{
      RowBox[{
        StyleBox[
         TagBox["NetChain", "SummaryHead"], "NonInterpretableSummary"], 
        StyleBox["[", "NonInterpretableSummary"], 
        DynamicModuleBox[{Typeset`open = False}, 
         PanelBox[
          PaneSelectorBox[{False -> GridBox[{{
                PaneBox[
                 ButtonBox[
                  DynamicBox[
                   FEPrivate`FrontEndResource[
                   "FEBitmaps", "SquarePlusIconMedium"]], 
                  ButtonFunction :> (Typeset`open = True), Appearance -> None,
                   Evaluator -> Automatic, Method -> "Preemptive"], 
                 Alignment -> {Center, Center}, ImageSize -> {Automatic, 24}], 
                StyleBox[
                 GraphicsBox[{
                   Thickness[0.014925373134328358`], {
                    RGBColor[0.729, 0.729, 0.729], 
                    Thickness[0.018686567164179105`], 
                    Opacity[1.], 
                    JoinForm[{"Miter", 10.}], 
                    
                    JoinedCurveBox[{{{0, 2, 0}}}, {{{23., 91.5}, {30., 
                    91.5}}}, CurveClosed -> {0}]}, {
                    RGBColor[0.729, 0.729, 0.729], 
                    Thickness[0.018686567164179105`], 
                    Opacity[1.], 
                    JoinForm[{"Miter", 10.}], 
                    
                    JoinedCurveBox[{{{0, 2, 0}}}, {{{37., 91.5}, {44., 
                    91.5}}}, CurveClosed -> {0}]}, {
                    FaceForm[{
                    RGBColor[0.631, 0.8160000000000001, 0.498], 
                    Opacity[1.]}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
                    15.5, 103.5}, {23.5, 103.5}, {23.5, 79.5}, {15.5, 
                    79.5}}}]}, {
                    FaceForm[{
                    RGBColor[0.40800000000000003`, 0.627, 0.196], 
                    Opacity[1.]}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2,
                     0}, {0, 1, 0}, {0, 1, 0}}}, {{{24., 104.}, {15., 104.}, {
                    15., 79.}, {24., 79.}}, {{23., 80.}, {16., 80.}, {16., 
                    103.}, {23., 103.}}}]}, {
                    FaceForm[{
                    RGBColor[0.38, 0.753, 0.89], 
                    Opacity[1.]}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
                    29.5, 103.5}, {37.5, 103.5}, {37.5, 79.5}, {29.5, 
                    79.5}}}]}, {
                    FaceForm[{
                    RGBColor[0.24300000000000002`, 0.608, 0.71], 
                    Opacity[1.]}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2,
                     0}, {0, 1, 0}, {0, 1, 0}}}, {{{38., 104.}, {29., 104.}, {
                    29., 79.}, {38., 79.}}, {{37., 80.}, {30., 80.}, {30., 
                    103.}, {37., 103.}}}]}, {
                    FaceForm[{
                    RGBColor[0.584, 0.51, 0.8390000000000001], 
                    Opacity[1.]}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
                    43.5, 103.5}, {51.5, 103.5}, {51.5, 79.5}, {43.5, 
                    79.5}}}]}, {
                    FaceForm[{
                    RGBColor[0.4, 0.396, 0.659], 
                    Opacity[1.]}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2,
                     0}, {0, 1, 0}, {0, 1, 0}}}, {{{52., 104.}, {43., 104.}, {
                    43., 79.}, {52., 79.}}, {{51., 80.}, {44., 80.}, {44., 
                    103.}, {51., 103.}}}]}, {
                    FaceForm[{
                    RGBColor[0.549, 0.549, 0.549], 
                    Opacity[1.]}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}}}, {{{28., 91.5}, {
                    25., 95.}, {25., 88.}}}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}}}, {{{42., 91.5}, {
                    39., 95.}, {39., 88.}}}]}}, ImageMargins -> 0, 
                  ImageSize -> {36, Automatic}, PlotRangePadding -> 0], 
                 CacheGraphics -> False], 
                GridBox[{{
                   StyleBox[
                    TemplateBox[{
                    TemplateBox[{"\[ThinSpace]", "\" \"", 
                    StyleBox["\"Input\"", 
                    GrayLevel[0], StripOnInput -> False], "\"port\""}, 
                    "RowWithSeparators"], "\":\""}, "RowDefault"], 
                    "SummaryItemAnnotation"], 
                   StyleBox[
                    TemplateBox[{"\[ThinSpace]", "\" \"", "\"vector\"", 
                    StyleBox[
                    "\"(\[VeryThinSpace]size: 1\[VeryThinSpace])\"", 
                    GrayLevel[0.5], StripOnInput -> False]}, 
                    "RowWithSeparators"], "SummaryItem"]}, {
                   StyleBox[
                    TemplateBox[{
                    TemplateBox[{"\[ThinSpace]", "\" \"", 
                    StyleBox["\"Output\"", 
                    GrayLevel[0], StripOnInput -> False], "\"port\""}, 
                    "RowWithSeparators"], "\":\""}, "RowDefault"], 
                    "SummaryItemAnnotation"], 
                   StyleBox[
                    TemplateBox[{"\[ThinSpace]", "\" \"", "\"vector\"", 
                    StyleBox[
                    "\"(\[VeryThinSpace]size: 1\[VeryThinSpace])\"", 
                    GrayLevel[0.5], StripOnInput -> False]}, 
                    "RowWithSeparators"], "SummaryItem"]}}, BaselinePosition -> 
                 Automatic, 
                 GridBoxAlignment -> {
                  "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
                 GridBoxItemSize -> {
                  "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                 GridBoxSpacings -> {
                  "Columns" -> {{2}}, "Rows" -> {{Automatic}}}]}}, 
              GridBoxAlignment -> {"Rows" -> {{Top}}}, 
              GridBoxItemSize -> {
               "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
              GridFrameMargins -> {{0, 0}, {0, 0}}, 
              BaselinePosition -> {1, 3}], True -> GridBox[{{
                PaneBox[
                 ButtonBox[
                  DynamicBox[
                   FEPrivate`FrontEndResource[
                   "FEBitmaps", "SquareMinusIconMedium"]], 
                  ButtonFunction :> (Typeset`open = False), Appearance -> 
                  None, Evaluator -> Automatic, Method -> "Preemptive"], 
                 Alignment -> {Center, Center}, ImageSize -> {Automatic, 24}], 
                StyleBox[
                 GraphicsBox[{
                   Thickness[0.014925373134328358`], {
                    RGBColor[0.729, 0.729, 0.729], 
                    Thickness[0.018686567164179105`], 
                    Opacity[1.], 
                    JoinForm[{"Miter", 10.}], 
                    
                    JoinedCurveBox[{{{0, 2, 0}}}, {{{23., 91.5}, {30., 
                    91.5}}}, CurveClosed -> {0}]}, {
                    RGBColor[0.729, 0.729, 0.729], 
                    Thickness[0.018686567164179105`], 
                    Opacity[1.], 
                    JoinForm[{"Miter", 10.}], 
                    
                    JoinedCurveBox[{{{0, 2, 0}}}, {{{37., 91.5}, {44., 
                    91.5}}}, CurveClosed -> {0}]}, {
                    FaceForm[{
                    RGBColor[0.631, 0.8160000000000001, 0.498], 
                    Opacity[1.]}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
                    15.5, 103.5}, {23.5, 103.5}, {23.5, 79.5}, {15.5, 
                    79.5}}}]}, {
                    FaceForm[{
                    RGBColor[0.40800000000000003`, 0.627, 0.196], 
                    Opacity[1.]}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2,
                     0}, {0, 1, 0}, {0, 1, 0}}}, {{{24., 104.}, {15., 104.}, {
                    15., 79.}, {24., 79.}}, {{23., 80.}, {16., 80.}, {16., 
                    103.}, {23., 103.}}}]}, {
                    FaceForm[{
                    RGBColor[0.38, 0.753, 0.89], 
                    Opacity[1.]}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
                    29.5, 103.5}, {37.5, 103.5}, {37.5, 79.5}, {29.5, 
                    79.5}}}]}, {
                    FaceForm[{
                    RGBColor[0.24300000000000002`, 0.608, 0.71], 
                    Opacity[1.]}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2,
                     0}, {0, 1, 0}, {0, 1, 0}}}, {{{38., 104.}, {29., 104.}, {
                    29., 79.}, {38., 79.}}, {{37., 80.}, {30., 80.}, {30., 
                    103.}, {37., 103.}}}]}, {
                    FaceForm[{
                    RGBColor[0.584, 0.51, 0.8390000000000001], 
                    Opacity[1.]}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
                    43.5, 103.5}, {51.5, 103.5}, {51.5, 79.5}, {43.5, 
                    79.5}}}]}, {
                    FaceForm[{
                    RGBColor[0.4, 0.396, 0.659], 
                    Opacity[1.]}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2,
                     0}, {0, 1, 0}, {0, 1, 0}}}, {{{52., 104.}, {43., 104.}, {
                    43., 79.}, {52., 79.}}, {{51., 80.}, {44., 80.}, {44., 
                    103.}, {51., 103.}}}]}, {
                    FaceForm[{
                    RGBColor[0.549, 0.549, 0.549], 
                    Opacity[1.]}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}}}, {{{28., 91.5}, {
                    25., 95.}, {25., 88.}}}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}}}, {{{42., 91.5}, {
                    39., 95.}, {39., 88.}}}]}}, ImageMargins -> 0, 
                  ImageSize -> {36, Automatic}, PlotRangePadding -> 0], 
                 CacheGraphics -> False], 
                GridBox[{{
                   
                   DynamicModuleBox[{
                    NeuralNetworks`Private`NetChain`assoc3 = <|
                    "Type" -> "Chain", 
                    "Nodes" -> <|
                    "1" -> <|
                    "Type" -> "Linear", 
                    "Arrays" -> <|
                    "Weights" -> NeuralNetworks`Private`DummyArray[{10, 1}], 
                    "Biases" -> NeuralNetworks`Private`DummyArray[{10}]|>, 
                    "Parameters" -> <|
                    "OutputDimensions" -> {10}, "$OutputSize" -> 10, 
                    "$InputSize" -> 1, "$InputDimensions" -> {1}|>, 
                    "Inputs" -> <|
                    "Input" -> NeuralNetworks`TensorT[{1}, 
                    NeuralNetworks`AtomT]|>, 
                    "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{10}, 
                    NeuralNetworks`RealT]|>|>, 
                    "2" -> <|
                    "Type" -> "Function", "Arrays" -> <||>, 
                    "Parameters" -> <|
                    "Function" -> Tanh, 
                    "Net" -> <|"Type" -> "Elementwise", "Arrays" -> <||>, 
                    "Parameters" -> <|
                    "Function" -> NeuralNetworks`ValidatedParameter[Tanh], 
                    "$Dimensions" -> {10}|>, 
                    "Inputs" -> <|"Input" -> 
                    NeuralNetworks`TensorT[{10}, NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{10}, 
                    NeuralNetworks`RealT]|>|>, "$InputNames" -> {"Input"}, 
                    "$OutputNames" -> {"Output"}|>, 
                    "Inputs" -> <|
                    "Input" -> NeuralNetworks`TensorT[{10}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{10}, 
                    NeuralNetworks`RealT]|>|>, 
                    "3" -> <|
                    "Type" -> "Chain", 
                    "Nodes" -> <|
                    "1" -> <|"Type" -> "Chain", 
                    "Nodes" -> <|"1" -> <|
                    "Type" -> "Linear", 
                    "Arrays" -> <|"Weights" -> 
                    NeuralNetworks`Private`DummyArray[{10, 10}], "Biases" -> 
                    NeuralNetworks`Private`DummyArray[{10}]|>, 
                    "Parameters" -> <|
                    "OutputDimensions" -> {10}, "$OutputSize" -> 10, 
                    "$InputSize" -> 10, "$InputDimensions" -> {10}|>, 
                    "Inputs" -> <|"Input" -> 
                    NeuralNetworks`TensorT[{10}, NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> 
                    NeuralNetworks`TensorT[{10}, NeuralNetworks`RealT]|>|>, 
                    "2" -> <|"Type" -> "Elementwise", "Arrays" -> <||>, 
                    "Parameters" -> <|
                    "Function" -> NeuralNetworks`ValidatedParameter[Tanh], 
                    "$Dimensions" -> {10}|>, 
                    "Inputs" -> <|"Input" -> 
                    NeuralNetworks`TensorT[{10}, NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> 
                    NeuralNetworks`TensorT[{10}, NeuralNetworks`RealT]|>|>|>, 
                    "Edges" -> {NeuralNetworks`NetPath[
                    "Nodes", "1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Nodes", "2", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "1", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "2", "Outputs", "Output"]}, 
                    "Inputs" -> <|
                    "Input" -> NeuralNetworks`TensorT[{10}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{10}, 
                    NeuralNetworks`RealT]|>|>, 
                    "2" -> <|"Type" -> "Chain", 
                    "Nodes" -> <|"1" -> <|
                    "Type" -> "Linear", 
                    "Arrays" -> <|"Weights" -> 
                    NeuralNetworks`Private`DummyArray[{10, 10}], "Biases" -> 
                    NeuralNetworks`Private`DummyArray[{10}]|>, 
                    "Parameters" -> <|
                    "OutputDimensions" -> {10}, "$OutputSize" -> 10, 
                    "$InputSize" -> 10, "$InputDimensions" -> {10}|>, 
                    "Inputs" -> <|"Input" -> 
                    NeuralNetworks`TensorT[{10}, NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> 
                    NeuralNetworks`TensorT[{10}, NeuralNetworks`RealT]|>|>, 
                    "2" -> <|"Type" -> "Elementwise", "Arrays" -> <||>, 
                    "Parameters" -> <|
                    "Function" -> NeuralNetworks`ValidatedParameter[Tanh], 
                    "$Dimensions" -> {10}|>, 
                    "Inputs" -> <|"Input" -> 
                    NeuralNetworks`TensorT[{10}, NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> 
                    NeuralNetworks`TensorT[{10}, NeuralNetworks`RealT]|>|>|>, 
                    "Edges" -> {NeuralNetworks`NetPath[
                    "Nodes", "1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Nodes", "2", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "1", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "2", "Outputs", "Output"]}, 
                    "Inputs" -> <|
                    "Input" -> NeuralNetworks`TensorT[{10}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{10}, 
                    NeuralNetworks`RealT]|>|>|>, 
                    "Edges" -> {
                    NeuralNetworks`NetPath["Nodes", "1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Nodes", "2", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "1", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "2", "Outputs", "Output"]}, 
                    "Inputs" -> <|
                    "Input" -> NeuralNetworks`TensorT[{10}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{10}, 
                    NeuralNetworks`RealT]|>|>, 
                    "4" -> <|
                    "Type" -> "Linear", 
                    "Arrays" -> <|
                    "Weights" -> NeuralNetworks`Private`DummyArray[{1, 10}], 
                    "Biases" -> NeuralNetworks`Private`DummyArray[{1}]|>, 
                    "Parameters" -> <|
                    "OutputDimensions" -> {1}, "$OutputSize" -> 1, 
                    "$InputSize" -> 10, "$InputDimensions" -> {10}|>, 
                    "Inputs" -> <|
                    "Input" -> NeuralNetworks`TensorT[{10}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{1}, 
                    NeuralNetworks`RealT]|>|>|>, 
                    "Edges" -> {
                    NeuralNetworks`NetPath["Nodes", "1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Nodes", "2", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "1", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "3", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "2", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "4", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "3", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "4", "Outputs", "Output"]}, 
                    "Inputs" -> <|
                    "Input" -> 
                    NeuralNetworks`TensorT[{1}, NeuralNetworks`AtomT]|>, 
                    "Outputs" -> <|
                    "Output" -> 
                    NeuralNetworks`TensorT[{1}, NeuralNetworks`RealT]|>|>, 
                    NeuralNetworks`Private`NetChain`opart, 
                    NeuralNetworks`Private`NetChain`part, 
                    NeuralNetworks`Private`NetChain`selected = Null}, 
                    DynamicBox[
                    GridBox[{{
                    TagBox[
                    TagBox[
                    GridBox[{{
                    TagBox[
                    TagBox[
                    "\"\"", Annotation[#, {"Inputs", "Input"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    "\"Input\"", 
                    Annotation[#, {"Inputs", "Input"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    TemplateBox[{"\[ThinSpace]", "\" \"", "\"vector\"", 
                    StyleBox[
                    "\"(\[VeryThinSpace]size: 1\[VeryThinSpace])\"", 
                    GrayLevel[0.5], StripOnInput -> False]}, 
                    "RowWithSeparators"], 
                    Annotation[#, {"Inputs", "Input"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}, {
                    TagBox[
                    TagBox[
                    StyleBox["\"1\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "1"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    StyleBox["LinearLayer", 
                    GrayLevel[0], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "1"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    TemplateBox[{"\[ThinSpace]", "\" \"", "\"vector\"", 
                    StyleBox["\"(\[VeryThinSpace]size: 10\[VeryThinSpace])\"", 
                    GrayLevel[0.5], StripOnInput -> False]}, 
                    "RowWithSeparators"], 
                    Annotation[#, {"Nodes", "1"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}, {
                    TagBox[
                    TagBox[
                    StyleBox["\"2\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "2"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    StyleBox[
                    TagBox[
                    RowBox[{"FunctionLayer", "[", "Tanh", "]"}], HoldForm], 
                    GrayLevel[0], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "2"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    TemplateBox[{"\[ThinSpace]", "\" \"", "\"vector\"", 
                    StyleBox["\"(\[VeryThinSpace]size: 10\[VeryThinSpace])\"", 
                    GrayLevel[0.5], StripOnInput -> False]}, 
                    "RowWithSeparators"], 
                    Annotation[#, {"Nodes", "2"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}, {
                    TagBox[
                    TagBox[
                    StyleBox["\"3\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "3"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    StyleBox[
                    TemplateBox[{"NetChain", "\" \"", 
                    
                    TemplateBox[{"\"(\"", "2", "\" nodes)\""}, "Row", 
                    DisplayFunction -> (RowBox[{
                    TemplateSlotSequence[1, "\[InvisibleSpace]"]}]& ), 
                    InterpretationFunction -> (RowBox[{"Row", "[", 
                    RowBox[{
                    RowBox[{"{", 
                    TemplateSlotSequence[1, ","], "}"}], ",", 
                    RowBox[{"BaseStyle", "\[Rule]", 
                    RowBox[{"GrayLevel", "[", "0.5`", "]"}]}]}], "]"}]& ), 
                    BaseStyle -> GrayLevel[0.5]]}, "RowDefault"], 
                    GrayLevel[0], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "3"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    TemplateBox[{"\[ThinSpace]", "\" \"", "\"vector\"", 
                    StyleBox["\"(\[VeryThinSpace]size: 10\[VeryThinSpace])\"", 
                    GrayLevel[0.5], StripOnInput -> False]}, 
                    "RowWithSeparators"], 
                    Annotation[#, {"Nodes", "3"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}, {
                    TagBox[
                    TagBox[
                    StyleBox["\"4\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "4"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    StyleBox["LinearLayer", 
                    GrayLevel[0], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "4"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    TemplateBox[{"\[ThinSpace]", "\" \"", "\"vector\"", 
                    StyleBox[
                    "\"(\[VeryThinSpace]size: 1\[VeryThinSpace])\"", 
                    GrayLevel[0.5], StripOnInput -> False]}, 
                    "RowWithSeparators"], 
                    Annotation[#, {"Nodes", "4"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}, {
                    TagBox[
                    TagBox[
                    "\"\"", Annotation[#, {"Outputs", "Output"}, "Mouse"]& ], 
                    
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    "\"Output\"", 
                    Annotation[#, {"Outputs", "Output"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    TemplateBox[{"\[ThinSpace]", "\" \"", "\"vector\"", 
                    StyleBox[
                    "\"(\[VeryThinSpace]size: 1\[VeryThinSpace])\"", 
                    GrayLevel[0.5], StripOnInput -> False]}, 
                    "RowWithSeparators"], 
                    Annotation[#, {"Outputs", "Output"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {"Columns" -> {{1.1}}}], "Grid"], 
                    EventHandlerTag[{"MouseClicked" :> If[
                    ListQ[
                    NeuralNetworks`Private`NetChain`part = MouseAnnotation[]],
                     If[NeuralNetworks`Private`NetChain`opart === 
                    NeuralNetworks`Private`NetChain`part, 
                    NeuralNetworks`Private`NetChain`selected = Null; 
                    NeuralNetworks`Private`NetChain`opart = Null, 
                    NeuralNetworks`Private`NetChain`selected = 
                    Part[NeuralNetworks`Private`NetChain`assoc3, 
                    Apply[Sequence, NeuralNetworks`Private`NetChain`part]]; 
                    NeuralNetworks`Private`NetChain`opart = 
                    NeuralNetworks`Private`NetChain`part; Null]; Null], 
                    Method -> "Preemptive", PassEventsDown -> Automatic, 
                    PassEventsUp -> True}]]}, 
                    NeuralNetworks`FormatSelectedParameterChain[
                    NeuralNetworks`Private`NetChain`selected, 
                    NeuralNetworks`Private`NetChain`part, <||>, {}]}, 
                    GridBoxSpacings -> {"Columns" -> {{1}}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    GridFrameMargins -> {{0, 0}, {0, 0}}], 
                    TrackedSymbols :> {
                    NeuralNetworks`Private`NetChain`selected}], 
                    Initialization :> {NetChain}]}}, BaselinePosition -> 
                 Automatic, 
                 GridBoxAlignment -> {
                  "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
                 GridBoxItemSize -> {
                  "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                 GridBoxSpacings -> {
                  "Columns" -> {{2}}, "Rows" -> {{Automatic}}}]}}, 
              GridBoxAlignment -> {"Rows" -> {{Top}}}, 
              GridBoxItemSize -> {
               "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
              GridFrameMargins -> {{0, 0}, {0, 0}}, 
              BaselinePosition -> {1, 1}]}, 
           Dynamic[Typeset`open], ImageSize -> Automatic], BaselinePosition -> 
          Baseline, 
          BaseStyle -> {
           ShowStringCharacters -> False, NumberMarks -> False, 
            PrintPrecision -> 3, ShowSyntaxStyles -> False}]], 
        StyleBox["]", "NonInterpretableSummary"]}]},
     "CopyTag",
     DisplayFunction->(#& ),
     InterpretationFunction->("NetChain[<>]"& )],
    False,
    Editable->False,
    SelectWithContents->True,
    Selectable->False], ",", 
   RowBox[{
    StyleBox[
     TagBox["NetTrainResultsObject",
      "SummaryHead"], "NonInterpretableSummary"], 
    StyleBox["[", "NonInterpretableSummary"], 
    FrameBox[GridBox[{
       {
        ItemBox[
         FrameBox[
          StyleBox["\<\"NetTrain Results\"\>", "SuggestionsBarText",
           StripOnInput->False,
           FontSize->12],
          FrameMargins->{{10, 5}, {-4, 2}},
          FrameStyle->None,
          StripOnInput->False],
         Alignment->{Left, Bottom},
         Background->RGBColor[0.96, 0.96, 0.96],
         Frame->{{False, False}, {True, False}},
         FrameStyle->Opacity[0.1],
         ItemSize->{Automatic, 1},
         StripOnInput->False]},
       {
        ItemBox[
         TagBox[
          FrameBox[
           TagBox[GridBox[{
              {
               TemplateBox[{
                 TemplateBox[{5}, "Spacer1"], 
                 StyleBox[
                  InterpretationBox[
                   Cell["summary"], 
                   TextCell["summary"]], 
                  GrayLevel[0.4], StripOnInput -> False]},
                "RowDefault"], 
               TemplateBox[{",", "\",\"", 
                 TemplateBox[{"\[ThinSpace]", "\" \"", 
                   InterpretationBox[
                    Cell["batches:"], 
                    TextCell["batches:"]], "10000"}, "RowWithSeparators"], 
                 TemplateBox[{"\[ThinSpace]", "\" \"", 
                   InterpretationBox[
                    Cell["rounds:"], 
                    TextCell["rounds:"]], "10000"}, "RowWithSeparators"], 
                 TemplateBox[{"\[ThinSpace]", "\" \"", 
                   InterpretationBox[
                    Cell["time:"], 
                    TextCell["time:"]], 
                   InterpretationBox[
                    Cell["19s"], 
                    TextCell["19s"]]}, "RowWithSeparators"], 
                 TemplateBox[{"\[ThinSpace]", "\" \"", 
                   InterpretationBox[
                    Cell["examples/s:"], 
                    TextCell["examples/s:"]], "6059"}, "RowWithSeparators"]},
                "RowWithSeparators"]},
              {
               TemplateBox[{
                 TemplateBox[{5}, "Spacer1"], 
                 StyleBox[
                  InterpretationBox[
                   Cell["data"], 
                   TextCell["data"]], 
                  GrayLevel[0.4], StripOnInput -> False]},
                "RowDefault"], 
               TemplateBox[{",", "\",\"", 
                 TemplateBox[{"\[ThinSpace]", "\" \"", 
                   InterpretationBox[
                    Cell["training examples:"], 
                    TextCell["training examples:"]], "11"}, 
                  "RowWithSeparators"], 
                 TemplateBox[{"\[ThinSpace]", "\" \"", 
                   InterpretationBox[
                    Cell["processed examples:"], 
                    TextCell["processed examples:"]], "110000"}, 
                  "RowWithSeparators"], 
                 TemplateBox[{"\[ThinSpace]", "\" \"", 
                   InterpretationBox[
                    Cell["skipped examples:"], 
                    TextCell["skipped examples:"]], "0"}, 
                  "RowWithSeparators"]},
                "RowWithSeparators"]},
              {
               TemplateBox[{
                 TemplateBox[{5}, "Spacer1"], 
                 StyleBox[
                  InterpretationBox[
                   Cell["method"], 
                   TextCell["method"]], 
                  GrayLevel[0.4], StripOnInput -> False]},
                "RowDefault"], 
               TemplateBox[{",", "\",\"", 
                 TemplateBox[{"\[ThinSpace]", "\" \"", 
                   InterpretationBox[
                    Cell["ADAM"], 
                    TextCell["ADAM"]], 
                   InterpretationBox[
                    Cell["optimizer"], 
                    TextCell["optimizer"]]}, "RowWithSeparators"], 
                 TemplateBox[{"\[ThinSpace]", "\" \"", 
                   InterpretationBox[
                    Cell["batch size"], 
                    TextCell["batch size"]], "11"}, "RowWithSeparators"], 
                 InterpretationBox[
                  Cell["CPU"], 
                  TextCell["CPU"]]},
                "RowWithSeparators"]},
              {
               TemplateBox[{
                 TemplateBox[{5}, "Spacer1"], 
                 StyleBox[
                  InterpretationBox[
                   Cell["round"], 
                   TextCell["round"]], 
                  GrayLevel[0.4], StripOnInput -> False]},
                "RowDefault"], 
               TemplateBox[{",", "\",\"", 
                 TemplateBox[{"\[ThinSpace]", "\" \"", 
                   TagBox[
                    TooltipBox[
                    InterpretationBox[
                    Cell["loss:"], 
                    TextCell["loss:"]], 
                    TagBox[
                    GridBox[{{
                    
                    TemplateBox[{"\"Measurement: \"", "\"loss\""}, 
                    "RowDefault"]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"]], Annotation[#, 
                    Column[{
                    Row[{"Measurement: ", "loss"}]}], "Tooltip"]& ], 
                   TagBox[
                    InterpretationBox[
                    StyleBox[
                    RowBox[{"\"9.86\"", "\[Times]", 
                    SuperscriptBox["10", "\"-10\""]}], ShowStringCharacters -> 
                    False], 9.86423508532074*^-10, AutoDelete -> True], 
                    ScientificForm[#, 3]& ]}, "RowWithSeparators"]},
                "RowWithSeparators"]},
              {
               ItemBox[GridBox[{
                  {"", 
                   ItemBox["\<\"rounds\"\>",
                    DefaultBaseStyle->"LabeledLabel"]},
                  {
                   RotationBox[
                    ItemBox["\<\"loss\"\>",
                    DefaultBaseStyle->"LabeledLabel"],
                    BoxRotation->1.5708], 
                   GraphicsBox[
                    {AbsoluteThickness[1.25], {
                    {Hue[0.083, 1., 1.], LineBox[CompressedData["
1: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
/8+q4ErQ9yncPaDCx/8BzkoWWQ==
                    "]]}, {}}, {
                    {Hue[0.59, 0.7, 0.75], LineBox[{}]}, 
                    {Hue[0.59, 0.7, 0.65], AbsolutePointSize[4.5], 
                    PointBox[{}]}}},
                    AspectRatio->Full,
                    Axes->None,
                    Background->GrayLevel[1],
                    
                    BaseStyle->{
                    FontFamily -> "Verdana", FontSize -> 8, FontColor -> 
                    GrayLevel[0.5], ScriptSizeMultipliers -> 0.2, 
                    ScriptMinSize -> 6},
                    Frame->True,
                    FrameStyle->GrayLevel[0.5],
                    FrameTicks->None,
                    
                    GridLines->{{2000., 4000., 6000., 8000., 
                    10000.}, {{-15., 
                    GrayLevel[0.3001]}, {-14., 
                    GrayLevel[0.3001]}, {-13., 
                    GrayLevel[0.3001]}, {-12., 
                    GrayLevel[0.3001]}, {-11., 
                    GrayLevel[0.3001]}, {-10., 
                    GrayLevel[0.3001]}, {-9., 
                    GrayLevel[0.3001]}, {-8., 
                    GrayLevel[0.3001]}, {-7., 
                    GrayLevel[0.3001]}, {-6., 
                    GrayLevel[0.3001]}, {-5., 
                    GrayLevel[0.3001]}, {-4., 
                    GrayLevel[0.3001]}, {-3., 
                    GrayLevel[0.3001]}, {-2., 
                    GrayLevel[0.3001]}, {-1., 
                    GrayLevel[0.3001]}}},
                    ImagePadding->1,
                    ImageSize->{302, 182.},
                    PlotRange->{{0, 10000.5}, {-14.338000000000001`, -0.262}},
                    
                    PlotRangeClipping->True,
                    PlotRangePadding->None,
                    Prolog->{{
                    InsetBox[
                    FormBox["2000", TraditionalForm], 
                    Offset[{-2, -2}, {2000., -0.262}], 
                    ImageScaled[{1., 1.}]], 
                    InsetBox[
                    FormBox["4000", TraditionalForm], 
                    Offset[{-2, -2}, {4000., -0.262}], 
                    ImageScaled[{1., 1.}]], 
                    InsetBox[
                    FormBox["6000", TraditionalForm], 
                    Offset[{-2, -2}, {6000., -0.262}], 
                    ImageScaled[{1., 1.}]], 
                    InsetBox[
                    FormBox["8000", TraditionalForm], 
                    Offset[{-2, -2}, {8000., -0.262}], 
                    ImageScaled[{1., 1.}]], 
                    InsetBox[
                    FormBox["10000", TraditionalForm], 
                    Offset[{-2, -2}, {10000., -0.262}], 
                    ImageScaled[{1., 1.}]]}, {
                    InsetBox[
                    FormBox[
                    
                    TemplateBox[{"10", "\"-14\""}, "Superscript", SyntaxForm -> 
                    SuperscriptBox], TraditionalForm], 
                    Offset[{3, 0}, {0, -14.}], 
                    ImageScaled[{0, 0.}]], 
                    InsetBox[
                    FormBox[
                    
                    TemplateBox[{"10", "\"-13\""}, "Superscript", SyntaxForm -> 
                    SuperscriptBox], TraditionalForm], 
                    Offset[{3, 0}, {0, -13.}], 
                    ImageScaled[{0, 0.}]], 
                    InsetBox[
                    FormBox[
                    
                    TemplateBox[{"10", "\"-12\""}, "Superscript", SyntaxForm -> 
                    SuperscriptBox], TraditionalForm], 
                    Offset[{3, 0}, {0, -12.}], 
                    ImageScaled[{0, 0.}]], 
                    InsetBox[
                    FormBox[
                    
                    TemplateBox[{"10", "\"-11\""}, "Superscript", SyntaxForm -> 
                    SuperscriptBox], TraditionalForm], 
                    Offset[{3, 0}, {0, -11.}], 
                    ImageScaled[{0, 0.}]], 
                    InsetBox[
                    FormBox[
                    
                    TemplateBox[{"10", "\"-10\""}, "Superscript", SyntaxForm -> 
                    SuperscriptBox], TraditionalForm], 
                    Offset[{3, 0}, {0, -10.}], 
                    ImageScaled[{0, 0.}]], 
                    InsetBox[
                    FormBox[
                    
                    TemplateBox[{"10", "\"-9\""}, "Superscript", SyntaxForm -> 
                    SuperscriptBox], TraditionalForm], 
                    Offset[{3, 0}, {0, -9.}], 
                    ImageScaled[{0, 0.}]], 
                    InsetBox[
                    FormBox[
                    
                    TemplateBox[{"10", "\"-8\""}, "Superscript", SyntaxForm -> 
                    SuperscriptBox], TraditionalForm], 
                    Offset[{3, 0}, {0, -8.}], 
                    ImageScaled[{0, 0.}]], 
                    InsetBox[
                    FormBox[
                    
                    TemplateBox[{"10", "\"-7\""}, "Superscript", SyntaxForm -> 
                    SuperscriptBox], TraditionalForm], 
                    Offset[{3, 0}, {0, -7.}], 
                    ImageScaled[{0, 0.}]], 
                    InsetBox[
                    FormBox[
                    
                    TemplateBox[{"10", "\"-6\""}, "Superscript", SyntaxForm -> 
                    SuperscriptBox], TraditionalForm], 
                    Offset[{3, 0}, {0, -6.}], 
                    ImageScaled[{0, 0.}]], 
                    InsetBox[
                    FormBox[
                    
                    TemplateBox[{"10", "\"-5\""}, "Superscript", SyntaxForm -> 
                    SuperscriptBox], TraditionalForm], 
                    Offset[{3, 0}, {0, -5.}], 
                    ImageScaled[{0, 0.}]], 
                    InsetBox[
                    FormBox[
                    
                    TemplateBox[{"10", "\"-4\""}, "Superscript", SyntaxForm -> 
                    SuperscriptBox], TraditionalForm], 
                    Offset[{3, 0}, {0, -4.}], 
                    ImageScaled[{0, 0.}]], 
                    InsetBox[
                    FormBox[
                    
                    TemplateBox[{"10", "\"-3\""}, "Superscript", SyntaxForm -> 
                    SuperscriptBox], TraditionalForm], 
                    Offset[{3, 0}, {0, -3.}], 
                    ImageScaled[{0, 0.}]], 
                    InsetBox[
                    FormBox[
                    
                    TemplateBox[{"10", "\"-2\""}, "Superscript", SyntaxForm -> 
                    SuperscriptBox], TraditionalForm], 
                    Offset[{3, 0}, {0, -2.}], 
                    ImageScaled[{0, 0.}]], 
                    InsetBox[
                    FormBox[
                    
                    TemplateBox[{"10", "\"-1\""}, "Superscript", SyntaxForm -> 
                    SuperscriptBox], TraditionalForm], 
                    Offset[{3, 0}, {0, -1.}], 
                    ImageScaled[{0, 0.}]]}}]}
                 },
                 
                 BaseStyle->{
                  FontFamily -> "Verdana", FontSize -> 8, FontColor -> 
                   GrayLevel[0.4]},
                 
                 GridBoxAlignment->{
                  "Columns" -> {{Center}}, "Rows" -> {{Center}}},
                 GridBoxSpacings->{"Columns" -> {{0.5}}}],
                Alignment->Center,
                StripOnInput->False], "\[SpanFromLeft]"},
              {
               ItemBox[
                
                InterpretationBox[Cell[
                 "",ExpressionUUID->"057dda86-a41f-418e-b5b7-acfd5e1ed06f"],
                 TextCell[""]],
                Alignment->Center,
                StripOnInput->False], "\[SpanFromLeft]"}
             },
             AutoDelete->False,
             ColumnsEqual->False,
             
             GridBoxAlignment->{
              "Columns" -> {Right, {Left}}, "Rows" -> {{Baseline}}},
             GridBoxDividers->{"Columns" -> {False, {
                  Opacity[0.15]}, False}},
             GridBoxItemSize->{"Columns" -> {8, {26}}, "Rows" -> {{1.}}},
             GridBoxSpacings->{"Columns" -> {
                 Offset[0.27999999999999997`], 
                 Offset[1.1199999999999999`], {
                  Offset[1.75]}, 
                 Offset[0.27999999999999997`]}, "Rows" -> {
                 Offset[0.2], {
                  Offset[0.8]}, 
                 Offset[0.2]}}],
            "Grid"],
           FrameMargins->{{10, 10}, {10, 5}},
           FrameStyle->None,
           StripOnInput->False],
          Deploy,
          DefaultBaseStyle->"Deploy"],
         Alignment->Center,
         BaseStyle->{
          FontWeight -> "Light", FontSize -> 11, FontFamily -> 
           "Nimbus Sans [UKWN]", NumberMarks -> False, Deployed -> False},
         StripOnInput->False]}
      },
      DefaultBaseStyle->"Column",
      GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Baseline}}},
      GridBoxDividers->{"Columns" -> {{False}}, "Rows" -> {{False}}},
      GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{1.}}},
      GridBoxSpacings->{"Columns" -> {
          Offset[0.27999999999999997`], {
           Offset[0.5599999999999999]}, 
          Offset[0.27999999999999997`]}, "Rows" -> {
          Offset[0.2], 
          Offset[0.8], {
           Offset[0.4]}, 
          Offset[0.2]}}],
     Background->GrayLevel[1],
     FrameMargins->{{0, 0}, {0, 0}},
     FrameStyle->GrayLevel[0.85],
     RoundingRadius->5,
     StripOnInput->False], 
    StyleBox["]", "NonInterpretableSummary"]}]}], "}"}]], "Output",
 CellChangeTimes->{{3.850892369268063*^9, 3.850892431552721*^9}, {
   3.850892464132242*^9, 3.850892481648444*^9}, {3.850892658673958*^9, 
   3.850892679868928*^9}, 3.850892728941732*^9, 3.850892782453034*^9},
 CellLabel->
  "Out[162]=",ExpressionUUID->"ff6584d1-ee7f-455a-ba26-f865d5a73aad"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Show", "[", "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"Plot", "[", 
    RowBox[{
     RowBox[{"oscillator", "[", 
      RowBox[{"2", ",", "20", ",", "x"}], "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"x", ",", "0", ",", "1"}], "}"}], ",", " ", 
     RowBox[{"ColorFunction", "\[Rule]", "Hue"}]}], "]"}], ",", 
   "\[IndentingNewLine]", 
   RowBox[{"Plot", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"secondnet", "[", 
       RowBox[{"[", "1", "]"}], "]"}], "[", "i", "]"}], ",", " ", 
     RowBox[{"{", 
      RowBox[{"i", ",", "0", ",", "1"}], "}"}], ",", " ", 
     RowBox[{"PlotStyle", "->", "Gray"}]}], "]"}], ",", "\[IndentingNewLine]", 
   RowBox[{"Graphics", "@", 
    RowBox[{"Line", "[", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"0.5", ",", " ", 
         RowBox[{"-", "1"}]}], "}"}], ",", " ", 
       RowBox[{"{", 
        RowBox[{"0.5", ",", " ", "1"}], "}"}]}], "}"}], "]"}]}]}], 
  "\[IndentingNewLine]", "]"}]], "Input",
 CellChangeTimes->{{3.850892778508089*^9, 3.8508927795127363`*^9}},
 CellLabel->
  "In[163]:=",ExpressionUUID->"a4f569cc-d829-418d-9ce7-ecafe49bbee7"],

Cell[BoxData[
 GraphicsBox[{{GraphicsComplexBox[CompressedData["
1:eJwVl3k01O8Xx2n5Zi+SJVmihCRKlpRbKLIUpVDIXsmepCQUKikVCQmlRPZd
tgdjHdlmLGMbw4xZMDOUSKTf/P6a85wzn3Oe5973fd/3a7eL73n3DVxcXLkb
ubj+/2vqTu9rYFzUn5UV4pzmIYKndN9TyQTYWx7Cb5bKBFu7D4XzC5/A9Kji
1lgrKvD/i7A3likEAWmW6F3BYdhrxaJjnpVB0nj4xgBcHtzp1oWkxW+g0vZ6
dsQGh8TLhInc3AhaG1S/pB+dRBVTht97jjXByxu7K5rtqKjJ872U3VwzPDt4
4cD2gzT0S/H41nzvNmjX9rPNv0pBG1Zyt0ntxYJ5aoiIvvcY0vrnVHGh4Dv4
v+I+ZFiFRd8jNbtbVXrAVkPzJEnqI8i+nF3JYfVCYVD2AbHbfTC7PEEcUMcB
H89bxKaMwqeZGqzQCzzopmruHe0hgZD0FzaF0g93tbc1kuNIEHuj3CNjzyA8
8jfPDsgfhaUTuZTrYUPQpf34zufyPgg81FwmhiGA33+O1ADfbzBR0Pysb/cI
rF2w2RA8X4lWPfvfKd8bBQPjKbV3u3rR/pNb1j1qxuDMiaDURbdBZPxx97Vi
cSLwHqS9rmUR0B3pq/KT9hOwzJwXaNEdQqpzF/mHLEiQvHBLrt8Ih7Zvnedp
/sO517rhv5/FzWgTeleokDoJb3/iLwW9T0M3NWuGec2mIKmq9rn9vhrIPeOS
Ub80BVN5OPmudSz8mt25jZpIhq/rq1r3jvdB+QXjjQlGFBD4qSx6QxYHYSZR
6WVUCtzz8xLjE+6F3eOmhMyoaaDcXg57VNEGR7UjEyQPUWEyfW45ar4C7GV6
VrjxVDivcabvv/AQ9Av7fMovggYVakaO135+Q0mbHAPP76FD5VrDDjePFrSd
WP5xQzMd/MITCT/JHWhzaIS1rj8DEkO3KdZJYxFXjmPhlMgMPNA29sk51YoC
UgqfizTNwCbBE2k6fnWobv8THmGfWVC8Xb7bOukzEjYNUH0oNAcT2o4CTq3v
YOxAL/5u7RycfDW4LdO/EorSYA/FkQnql+a5eTY1gkOhlrD0OhPG9t0v+noB
A+FRHyLGvrJg1KJIWfheE+TTpd8JmbPheufeftuuOngry//r3z82bGYcP6Nj
VQwZO85Fx0hGQvsNcu9vVzZH5/cMy9fT4DXv09jo0Bk4lCf83y6er0AH8y2K
+ZPQvVVUVO1EJUz4rRnaSyFk3PhZqOteLSwfreFdEhtFzo5ZDtnEBlj6q6iY
c46CarPmbyUkYGBjrFRJhSkNjZl479h4oBUW1mMvdx2gorW4xa1uHe1wtHgH
V3bGJNp1P9q18kYniKPC+gjlAWTAeFj0n0EvyP4sNWoOa4bNze5zKK4PTG9r
PNqgNwQmC13WARM4uD2cbnA3ZgKGH2mM39XtByPzPsq1rZNgYaiW2xQ5ADfW
p48OzhPh5MWiz5twg9DYZxg3JjUE5d8qv8NuApyb93t243w7fPUzkgsMGAaJ
706nV1rMgRn7Pf5v1whwEXT3rfe2ou2DTPP2nWMgNVgYu7MEj775JxyKvTEO
SvYObb3HCWjiaoPRmWoiyN5K9XgYS0D0e1GpxmsTcDT+5cK05ADK+CsfY/GJ
BMPXf4j8k+xCVXdzmxN/TsJgT4pWb+Un4EdCxykZU5BrMhV6k9wMvSn6trjT
ZKjFvsuz9OyBAdli3jomGTRxcQUpkjjYedbD6tMbCmx6GHab4dkHvSJ0PVWt
afB81bmLx/k7qMVcqyCOcs77ZGRtxhohO1DNR1eFBiNJFXPEoTzUSrudO4mj
gYqCX8Kx9EZ0aeHpM5VAOkRcTOhOU2xHsfnvVt/vZIA6MdE7PQWLNmyf5xZq
YkD2LrpCWmY7+rb7cdo9zxl4KXz/r+ZwE5IgS3UKS8zCcZr0C8zVMrSkt5vr
gfscCHYGn351qxBOU7esFQgy4V/rk5PVXnXw376alPACJsgKxZuSnjWBz06v
jvvWLOAdLMIf4+hZrPLqi9urLNjsk9sjsdYA8pGiJluy2HDB1NXSlLsKxg8+
NnwuGQgbQ2xFCAQ2Z+4Tj8jGJoPKqxiFKY05aHk4fPm/0C/whxH+nHc7xwfU
I9Z/T5dD+UGNIcXTH9BEGzurRLsGhDKN6/ZPDCKtVJushIMNYBBSALrTU+ib
0U65EnoTqE8EysovUlGPXZREQWwLUKOejTl0UFHwaFLcE6l2uNU7nacpQUZx
RyWP3mjDwlcBG/GySQLK3v9e3HOoB3Rft5kqXvoGIl+VfmpCH/TUah8hBfdD
yuKg5J4nOBjvKPV6Th8H/cqlC81kPCjpJk7w8UyCWpFnF15zAG7FDEfGi5HA
Y+JQ9PmQQbiisOG/q4+G4VJosa117xDQhUI3JS51QZxVpGfLzmHIfzp2u+xp
DlDft8fR7oxAT2IRl15sI3os57wYjB2FnWNnfI5swKGAYYukuyLjYMnF/XJ3
0BDazr1w8e91IrBCttthxghI3TzgakLeBKTazEVcMxhE1MBaU5G7JMgNLvyV
EtKLHFMVjo63TcJedYE2b8s7ULPixr98ewpMcvHR6w6NoB9geb9dhgwH+PL2
XHLsgunN1FirJjIwz769GNHaB/TeSyq7vCkwEPeRa2SkD7LzK7z9hKYB0c7t
xTt3Q/ZhO+PGomngO17odGOiGR52rJe+X6fCJoqEU5RjBnIc5jZW/kqDtlx7
b9Hv9Wj5z88wfXM6TAbw6/FSW1Fvi9I5SzYdTvCfGbT3wKJN7Tq5mckMuMeT
u4/0oAPZT//IKtCfgZ+qZq0nc5pRS727qghzBtonpx+5/atCmzBnxLiOzsGT
7DqTN5QsEOabuyY6PQd3s26/epxUDaMuoVdLopnQKngsPWeiEahuVkxzZRao
myd1XvbFgFkaF48yngXOFk2U4J5GuK6VvMB3lw1yNx0lz/DWgFX8iOdZxRdQ
7eg6v+kTC0TcCrM/63yE+Pt3rpdH0UGenaXsmlIF6Kyr/1lnLCqsvhJEq6uD
m6r+JWeWiChW7pdo7fNGILy9v6J0Zxohnra2oBPNsDfXes+yAw3RtS+K2Ha1
Asxe4Z5xnEZhRpYv4U4HCHQLQdTaBCo6pn3RNqkXSqTZv+/Od8Lv8Y/TpqQ+
ELbik/lRPgxLzOa4Bi08qGirNm1wI0GgpZfHwbh+SOrJvUmiksBrcOFJcf8A
7BlKUDLyHYfFkN632/eMgsgqednsWydKf3bvs/jNMfi7GBd3kOPnXHyj39Ma
xuHioxRXixoCyq2PO/yGfwJE5W4f+/tvCPVaf/f6u5cEF8MuDHM145GIzeFz
lrJToLAyFX5vsQSuRFb59HVOweoEnT+cM3cuGFXNMR8yeFNmlvLieqFF9360
kiQFfrgNHFrRwoF55+1g1XrOmWoS/LSvF37fkeSjO0zDynbKIQwnd3XLOioN
XKSBVIG2vIZDGTq4xNiaskoDaiPuWX4GBpXRZN+KpdJB53KYsZViBzJ5I5Q9
e4oB39wyptsjsIjb8Ytt8AwDrv7xsjCOa0NijlKJpxNn4GD9njrqaANilP1m
rL6cgyB7Y/J8bSmENCm8PKPFhFRVh9P1dASHZn8PnB3k5NArW57+2oKB5Z7o
z3lhLMi5MtKO5cLAVE+9aJMCZ3+H/W5u29AAY31xaRvxbHC/J1V0oKEMbNyW
615LuoHWQVHZ00tsaP37Sa0flwj9Ni5j5fNzIORzPCpEOwuursrjPmhPQ29D
5S2iTjmklsR/2v4pGvZ3it7am1gNou5zJ0Y/9SODIKc3O4oQ3Pct210nPoWq
th9canjdBCG0x5e9CqnIxEU45dGxFjB9ZNgmvpGGtLhv9qQ0t0EMzW6TYRMZ
tSe77DUIwkKFcaNPYf4IOkqgB0hE9EB8aGq4tmExSEjHBLHF+uCPF6GlZx0H
BkFX1u7b40CKV/W/+h9jsGBpF8eowkO6UTiv+A8SpFGfOI4JDAD2hrvwsg0J
7u4JDFo5NwiKCdF+CRkjoHi1II34ZQj2HZFXpF3phQ0Gn7ayWARQPXVqOUai
FFyyWp+PmY/ArlTBp9GJdaixZaeJ1cdRCFQRPE/b0YfOPlcxm6eOQR8DS8la
GkT5Vk8dbU4Q4dqvbudMJgH1l9EbqiMnIPnPTnZA8yB6qs6bG+jK8WFR85xT
7n2oOH8ikKtkEm5q18VkZDxB28VfBoQ7TcFjfYVQDIcLFh3sXmD4yJAS5ny9
Wec7MIPDu9/lkeHXx5D4qid9cFakR4xgS4Far+XV7A04EF19H/36DwUMHZJ3
OZv2gBsPLu7Qu2mwK3u7wmvVCuyf1MEeOhWMkMGwLy0eqeDaRLve0CD/YDOV
erMWtf9TumeiQwexmhTK4oFW9MOKHZwzTIeRj8j+lxoWRcqPh/lEMWDO30+U
f7ADqbUp5bYrzYBt0aKI+YMWlJrH5/B6aAbkaSpW0fo1KOY/x90n98xBLLlQ
6JvfR1iSIkq39c5BPl7yGN/Wb9AaTjzZGcAE7qh+kYo7jSDPZ/SvbDsLNgrP
qr+4jgGqcF/zBsSCDUpRIjwqTRATd6U11oUNxwdtXYMCayG4PyF4TvYpyAY+
8lcXZIPvDa29XGMZUJHzyCrtKQOCw8bTTJiVcHqW+d39vxa0WhducHlXHfwk
xMQeFhlHQchC95BWI8zIBRnPzlJQ/dDo+6gZDEwnPGsqsachlxOT8QdCWyHi
o9ha0vdppO8p32sl1wGHSVRMcD8JrYiMPzzo3QvxDJ9+wql2WLfcdGNzVR94
qX4OKY4gQLrvmQBJfjxYchfJ/NpJAsWZ7g/Wbv3wW+hkpQD3JIwJbNtZnTcA
xv0pEdd1iOAX2f2GZ2UEOt3o5fesOtCwuuYK22AMXGft6mYC+9FYXWXYjjfj
MH1JV5EQRUCntiodY08RIf/u0dCPFgQk//Tx+20iJOgqFtrpxPm/+3X201u8
U9AZGPhr0SMfSj+QBy5XTEHd9w7JtKetIFl45PTQZTLcaSu9PL+vF7ryxNoD
NlJAAvYL/1bDQakAy42eQ4FMt8iHRgp94NbCpcBnOg2TtHabc6adoGd62mzL
CRpcvf7B559PMfrDKhw/TqOB+5hVnfqXJhQ1Z/1K7gkdwlmhe3IL2pHn7oE+
I3UGGKv1r9a9xaKHVWYHDAcZ0DZvdeqKXDuig1WKU/gM3BKJbuicaER+vwV+
HQuZg7f3xnrjmovBqX/H6bXdTEhIPHZyW0U97OK9XHWtiQlm+1W7fvU0waHb
dytFPVnwWraPWKSOgfuGcX3vtrLhbYVg099HDfBP5fytqFo2cP83X3zgWgW8
yBdRslJ8AFUpB2xXvrDhPP3JMc9TqbCm2j71wmkWzP+uR8g8bgDixSvlXz6S
UfXtzaaZ+hg4O/U6b2ofDV2yWkkkjLWAtzO//v6HVLQQcF67sxQHPEa1ybMt
RIiVTpBIF+qHKMAy24Qnof6u+bFO+wEwmSizWXg7ARYhXzIyfozCKfNh2vZJ
HErc6z+9QX8czjdb2uqSh9DdIluLzFdE4LIu4DtXS0Cx5NW/3v0TEBAue1e4
bAA9jjb27DpEBo+wihou324Yf21mtoVABobND/XvS30QEUc87hRBgU4//+0a
2X2guFQfpelEB9/802I2L9pQga7L3uVNDJDspOlpx2DRI++EQUI+A2QdFwaT
JTqQ6u+VYueVOdivXF1kLVgL80a7QpNTmOAZzopt0GuCr8hxlKLPyduCMnc1
OPNapKJudo7GghNZN5wqPBthh/JLNdvEV6DjRLw5rcSCDxGp86emG0F7t+Il
lYVp1KBbsnAtsRnEdDDvCs/SkM/BjpcPpduAy+7hdoVpCrLwOpF/zQUPh/cs
vzmfQYLGCt79fNX98MXoMUO0kQTu1AYriB8DyZ5bM++7B9CeS+uSSnPjsP26
57wekYCEfZZV9DQngKS6WYmROYTyhhTkJx+S4YtS2JzuXC/UtU4aEdU4+fEi
l32tBg6oT/8+88NR4Iby0tHNQb1AmZpJFSiiQ6a68aDf8w6kyGvy4PUVBlQP
PLXYaIdF4Rs3RuavM+DQ3tPfJ+ZbUWKRxkiiKRNWBlrGpB82gEnX259HZphA
Llb3GD2MgVqVhHijNyzw883L6sU0QXVwV0cEg8PTdXsNKgRLwaxrqOS9pDXU
O8vbvf/Lhj0bVXPVgt6AqI1s/U8TJpS6+u6sSPjMyVHUnpWWafjDc0HNaqoM
AlmlpwO1P0Cf+b5hx1PVEP7ATu59OB6p7vj27ZktAoW3YmZSuZNIO0TXuf1a
EzwuebyjIpqKojyGLvuItsDl2s2X+3bSkJioNVshuQ1y+fJ0EkUoyP3MlncF
Flj4NFNgJBE3ih4VvMhgX+yBa0M3vgnafYXUwaNV3zf0QWqOxs1RPRyHt957
55zGwbnesNFunzHAvuc7cD8TD2xRJ8LDKRIMckt8If3uh+H4/Xxyt0mwoS2B
ZX50ELRkRwqklUdBqDevMTN+CChKWRNFvH2gd1TTZcMwATKcEnOmDCsg42uL
gI32CMwdp+t2tFUjx6Rl/+MvRuFob2XMcEovOkZL+rS/bwx4+F7fFi4aRH/u
DrhsUiUCIfhg+v55AlJkZC50+U1AuhDq/cY1hC6/ODj62ZYEiSScs/1gH7pc
cVxE5Msk/NbPcEkNeIPQ572KLRenYJPGzU5fiTroxTuIN3KR4XOrTJ95Wif4
l1iwGz6QQUejR73NrQ82HOYXrDhLgYB4np/eIjjAfhCOz5ynQM1jE1Hnqh5o
ChDSvPlyGohv9GkOm9tAkfcKnT5OhdvlvFJtuBj0svvratozGlj2yVxMPVSD
1B8a3rFQowNr6O8m8e8taEMSTnCwmw5fJhdk6PxY1Hzu4MyFEAYUrPlXEVY7
kHiVYf6A9AzMhLWo1pJb0GMFh9u47zNQfk1qXsmuFp1Vomc5S87B3zcPW1dU
M4CxZyg4o3UOvCf0aK0GVVCzdWvp0HUmzB9ZY16ARmiwP87D4GGBlu+xVdJV
DJSa6Wayy1iwLaHsgsuFJthVW1tkYcOGn9XYy6cU6kDgl39YTWo0hFIvvKQd
ZYPM3F3X/AMZ8JW2pyRj8wxktgXb1SRWwq5MF7kYiyb0AeKz4ztr4VZndtMN
8TE0J3TPzJuvEQYIi43UdAo6DlSe5wgD2glqf7ou0lC60RdriYutcO/GNY/2
9WkkHco/P7LYDiFDB73H9CaRzHqh5DubXqCGTeaKebTCQ77yr1OZfWDUQT2Y
RhqCwKJn5FO/cNCgNWtrR54ALu1woJ3tB/8lcYNK3kkQVUp3qU8agN7h2n0N
iUQoeNIl+og8ArGNRKyuaDsK2iisMKY2BhJvsWtnd/QjrLjisGXYOJQ9vDGr
6EZAr7UDT6R2E8G7V0x93oeAzBSmj+zkIcEp0XSX6PZ+JORvsS9qfRKcuK4q
54jmwFX1u0/Tc6fA9Xn1+L+qFljcc7Sn35IMo2/IAYMTPWBFJdPf/ibD0T/l
Pkt7ceBxQOVKazoFNpe5XnQ06YOdXoEHpU5Mg3hNvNStoU4IuFptL3eEBnVy
9q9oE4XIafZ189ZxGgSeff/s754mxPLxfbH3AR0qbMOtCr3aUci1Kg//vQxQ
oy8SEt5hUdP0+7dK3xkw8XDVo961HfWqe6V6356BggxL+3GHJnR459t7Dn5z
QL1BeuPWWAQXxoU+DIgzwfGll4SGaD0IJ8UoB1YxYR9pRMe7sAl62wIaTK6y
4CIjUjHLEANnQpcLn2xmg/S76jnNxgZ4aVPqcLqYDSTLip+sI5VQwfp+hC17
Fx4L2srhmthQyNz6rZmeAr2GCVvvd85Co/n+BLsrDdBRcu3W71NkdHR8a/nX
7Rhg1Td3yG2jodcXkQ2mrAXGT7ev+HyhotbShOzl9zjwvV4ibHWZCO6epyo0
VvCwvyNv0EdoEpYSRiN7TAZgn+h6bh9lAmYsIrGxxFEw/RZ5xe4WDkWGTejr
K43D8rVPf1YLhlAr4ZOVZSgRRLdJHA7uJiCieKVaRMMEGE1nfKpfG0Aua2Y/
sUpkGBfmnjrH6ALn7xJeql1k2P/I4OMlDhdrFu3U1L9DgdPX7uiON/XBi+Dh
h7qX6NDqNq5+4FgbQmGnqhX+0CFH3tey+h5nvlOoJ+ozGUAtWDqeYtGBZLh/
Cuix5+CKS/TvuIs1QMWbsz6/ZML2Cc3wQ1ubwETEliKhyYLaS1G+D70x8MAt
SfnYOAtm32vn2KY1wtVv68XI+iXQtiva5F1ngVhf+4aIb5w5f3Nd1bpiGp34
UGvve7MZ0BdsobMtDeUejrPy/tUKD/QCdj1SmEby+Q9lEszxcJVnvxbmEQlS
Nta0p37qBw3/3L03Bzh+/u19yP6wMfgS+2WkJXQAiRR53XIdHIfPg5KGoj0E
5JhoeJAuOwFq1/Isa/BD6LGFUi4xmAyb6zVcrqBeOMlV6L5xDwVkjlKMuDj8
nfxV9+HZdgos1i7cW/3UC+bum1OEs+hAdTIO+3mlA2mf278dWTKA+CgsqMYX
ixrUL7JeLzJAoLZ6rPxkG3ryTeWI3wlOfU4LPSg/1gDH7dvdDEhMUFbp/3pT
FgOXQ5+nBsewwNNzOXyW3ARmn9XKDIhsqHKJ+XGGXgo8Uw8/XlL0gd5G/1zu
GTbo5O159q2uCaTm+Jan8VQk4Gg2nOTWAsm85FssGhVJbMpeuNSNB/HJEdHk
dQ7nda7sIMgNwPEHIeZ+OiRwOly7ULY2BmfsnY8U6AwhJ+Xjl79aE0G2XtlE
mUZAN6A0P6iSDG7c5GvmOX3wbuG13B8XCmgk7DgkN98Hk/wClPsUOrT5P5iQ
ssAio18xO57GMSDsmJbY1bwO1LuQ31t/nwmD+/2ClfMbIbLSdClchgVPO4ei
yjl6oJRW+ktnPgO8ZIYTaYQF3H679y07N8JGX937BYc5fOPXd+jBjmbY+9nQ
/8ZVGsKqbeFmyuHhE1W3TOQkCSzeS29qutsPnkMuLd6/SMByPaM48nUcrsyn
fqR8JKDf1FFtg2Ui6NftP5+pRED6uhp1w25kqJAQjjrk0Atnbp35YiFEAXbI
l9CPmjjY5Xk0Qeo1HV6Gcp98PteO7EYXjknoMcAzcxO3fBwW7bunbHzlOxOS
Otf6gplNkCAfXkAKZMFC/tFZt50Y0NRSfW6XGAHdju7zNk/YoCe0Snx3AwM2
H1jHb+jRUEnv1D2BPf3gayCSJikyCdmdG2LbLozD7sKc64MiBKT6RODM0mci
jFtfzD6XRUB2dg9UpqbIsOGpScQULw66fT4aP3xGgRTVHqXxmD54//PBS+xW
BsSNv3cdSsAiAW93XNEZFsxhrJ54c/aj6iE/Ip9wE3CpdD7L2kdFJ3Ffop0a
m8G954I8/QQNBe9f19MLxsOm85T1wm8koN+wfX6npx/iqncpTueQQGstrmGO
mwhBFZ9YbXQC0n0uuuebLgX4uUpLDqng4L5Tb/qWajo0qpWSWqs7kBjGjeHu
wQBeX1r31+NYdF7/2kPlRSaYlr65euoUBmQIKTHbMljwPSvIOjKjCZTMvSYa
FtmQPM5PylAvgcPpSamlkkZwfcfJfO9/bMBF+TJG2xJgq3P1u+O3mBDtyON+
wfAzxD4lnpYWoMK2/IxnfJVl8IKxsTFi4xf49Fw9dnVXNdCpIX875nDoo9t0
Z6sqAnaeILK5NYmWCurFzM83wd13H7Kb/ajo0/WjNa5cLaCv8arCeS8NRb83
Cbv+qA3qL6bdjtGlIM0PwwNuulhgif7dnLg+irKTnbWvnOiBHgFd/cvHssDx
8Ha7mt+9cO7PLpMFQh+ED+lnIU7uVNhdp5+qMgbaRuSQliQ8TN7xC3s1TIKA
uKudU6x+wChRuXseksBY4vPXoIODcJ7gF997cxQe8qheiH46BGXiddm0q31g
q3X/mUA3ATxLLonnD1dCg+op8wTVEQh6MFO/3+EbyuOmRh+OHAX9zPBgWfte
pClqaXWmdQzO3jj7cPuzQST3YpUyspsIfc0CF36yCejsI+6YIY8JOLE7u+SL
9BAyrDO4pX+BBCeun09hCuJQYfUcKeXDJKQc15oW3pKCdnjPh12znIJ9EzIm
w3K1UC9EGkWrU7Ao/29U9VwnHD5XFnYhlQwy2+S5Y636wN5QmefzGQqURXrv
PCWJgz23zSTzZimA+6LztoXZAz++qEZveTYN+bTdTbaObdC4fYf/bQIVZn1+
W4uZR6Im813sx9E0MOw+HVgbX43cML2/zinTYQbrH1WZ3IL49IxsvTro8Km4
nxDzuwO5edimnw5iQNXQkXoTQSyKVbdSs5eYgTvSUu/27GhFa47REQFtM0BZ
q3qlOF2L1HXzGQvb52CZIbw3QzgNXHIuKD5vnIPwVU2nnpFK0LL5MjvuygTx
D9ljfPKNIPRftcCjjSxwq0jYq30ZAynXvUWohSzIK7Js2crhFrfzzL0FVmwQ
s9vDxwiug0tRpA0KV6LgzqFXZZst2TBzWXszT346CEeGMyUMZqDqZmtF4E1O
H33eDQeyGlBgeOoV9cxaEDyKxMhvR1GW1sv+mMUGuMvNijkbTEFrATfrt33F
AFX55HS7JQ3Vn+YrFzzZCpfVDlKLxKgo9j+ucNmJdmiot09J9JlERbckp3vN
e8FOvDe9+lYLGF17btaX3AcGeoL7nF4MAbFXdZf9DA52L7xGJZUT4DVu+0Ld
qB+0979SYAtMQlE5NbrhxQAoOn9OsW4mQjefhXUDYQQi733Ts73Vhpq9/mnj
9nB45tS7g/soeNRkNB7lEzgOYtZ1fi+tCKjKLKUpgPOdzOeqixoPCMhpfvsG
2Y0kEJS7v+HlQj9yvb32S3BlEvQfqns+pGVB+bIh+WTWFCAjlUe4sy0wdbU2
Hm9GBmGFt5ZNn3tg+yPTuyo/yWAXNf3nsBwnJx83uVSeQgErvpQzS3Z9cBsK
yhX0pqFlLlCweNd3EPQMnM47SIOysZUbkg4FKP7GpqrfQzSgaj+ofz7ViOSL
1gSU7nL45YfEOWXTdhTJp1K8RY4BPWXVYmWcvOmy1mou1cYA/VLz97KR7cgo
5670ou8MBJlRxKfeNSHR/fZ1TM85CE1dFZfXL4Lvzs/ONokwoTWX6ruvsQ5i
J+Rd7pUyoeDVguaWtCaQ9Wc3T9mxwPx4Rce4GQbUU/bLhnGxwcOimv8HsQGG
mWRcVi4brHeSlAVSK8F069dj9alBIO/1eJtfNxsc/S4s+x9NgZ6J8y9P/puF
+4Enpe+caoCqJBfxnWJk9GfbG0+19SagTAdJ52ygoSIb+aqqjBa48vJURl8V
Fan3H5kUjMeBNM/Ah8PyRMBtk9kcwsKD41LYjTT+SXgtr5DTpz8AE4IB7m2b
SKBTGTDxsH8UWALX0GE9HArJS5y9Ij0OHjvOqcjHD6G5OSxe8RYR2heU/koO
EtCWEtG2mIoJkHV4Hb0oO4gstbsrOxTIsIX5RyvkUxco3Ahbq28jg8rRZ7+G
8Jx82aBz8EAABc57Fa5r9PRB0zcP7mNWdNBBLsvJwm2oXb5yU/UiHb5qGQ3v
88cit+KtS0VpDGjsibQo9+hASVG+1ftm5mAkUwNbslwNTlLTinnPmHBO6oBm
13IjvK3pp5eoscBGg7GJ6IMBt4jvSYcILIhC76p0KxuBZ6MXjXotDpKZB6/S
olnQ95v4LC2zEU7T5cdN3k4jroGTIj8vNsNN/1LPoiucvHHkR7HLZCswK/5E
Jp6cRrFdCjZfT+Jhu+Z7vjOBJNjyNV6cmtwPVwLz7B4SSWApH/ty9+0x+PuU
9HvhwgDiHVeQi+gch411LxnNLQQU+fVGcf2OCbgl0c93bmYIBT756jt+iwzr
unXM8S+9sPH9jqU3MhTYJalxg8rJmz+qbUKPYyhg/Ye192VNL4RnvZYQ/UAH
Z34DXNbJDnTiR6rDRTMGRO8pVLC9i0VOxg8yo9gM2FrxXoN+vQ1t0P8yZa/H
hF1mjxNpEhzdZDq9NxllgkqMl5ewKAayFfk+iESxYIfpu8OYH5w8o3dVOZPA
hhKcYnGCdRmoKxwvWpS9AadXYrc2zrPh90TOiePZTTCtK9uj3kRFKk4Fui8s
WyC1u+Pl/C8q533hJzIweNgq1apT/ZuTv+1OHh0RGwDNRz3MByYksHG6lYZb
GIMr4i9Lj0kMoejjrmPhpkTIMck9TJkhoP1jkvq8JWQwtCw38eH41iJ3sRTD
gQLqRIn82pU+mCkIVds+QQdjUv+1z/pYROEvw4bEMGCW2/hAUWMHMtM9zdty
hwltxpfoXa8bAe/U9menJAs2xfI7vr6JATUjxV+RzjHgtW9LScoih0veaheJ
mjfC+a/nH1/cNo3WMy/Rubma4U9AdFy8Iw1pnsvW3SiGhwq8xa0baiSoNlw6
z+/bD8V3D/q8WyXB9Esu/HL6OBTU7Vj4kUBAMqvc1RJMIqTtF/FP0uPkucDS
CMJVMpSTn0vPGPQC/7YibRIPhyfsMCvah3BgmdsmIvOcDlhX/1LZ7nbk8sD1
ccERBrhStPbxcPLcx8bGMOc2JoRpHt4mMdEE5M61knu+LLhUzKX1ay+Hp1pT
tjVahwM7YEKwMYkNf06GJ8haY2BFMPXEgUM0JHunpuOiZD/Y8fIGWXHyZvrv
bzrTJuMwszF+R+rqEDqfeqjz+zsifNgVmtZRTEBSS5TqwHEyfF8fPIThwoFS
WIOBfzQFMqZ0k0c5/chKnB9x4mNA8Mflj/IvseiK2NSgqRELJIqkw4+7cfaU
XfQ1pdVGWHOi/PopQEVc/x04RsltBvOOQ8JnTWhoyiw90MobD+/mY19dyyeB
9TaNsYbmfgjSU6gbKifBAWVjb77lcZAV+LdnB4WAVpVDysw0KZAbKUK9qoaD
og8OMnzldHCJtOQQLoc/PQYPrzkxwPnFsOeMGRZ1Rf2rPshmws6g0wILxzDg
HSEe9zWF0//qgs0vS5rAfyrVejebDZCEJQWnl8CaqetbZ0VHkOk3G4/7w/Fl
t8A/wUotEGqfxu+6lYYclzWIhwrwEBfy+WzhDAn63QtJB7SI8D03RMyDk6ey
5ZnCbRco0HYqwprCh4M/i04Y6KfDvr1O6fwyWORf2rDxnBALLizveZrNqc8D
fucLvAMcHqgy9mq1o6H4l1/m39v1g657EqVh8yTgZ3xUD8eMg8SSk1LCbQKK
OxNqu3mdDDS+b7ZTnLwd0Hx616gKAxaf1kYZpGBRhMxSTYEbC07w+Y4kHsWA
fDdbTS4zBEop3Xf+lbPhXk7MP0VlDHw6pnny6S4a+o3xukbf2A81ni1P72+b
hIzmBz13HxPhl48Ulcjxp/SDJaPJODKnzzwOf2f7oGIM7/v8Hx2E++5liD7C
opXroxMPdFnQlKxSbMKZp3Bv7S+z4c1w5s1RLL81DVXFTk6H2uBhfMBip/9r
Eqg5TN29UMjp7yv9knedJJB6VN56anIcUnnbv+sNEVCYq8mAnzIFplVfXTXm
8Jda3rd2pUsMeJ1WLL7ohkVNouqqx6aZULyhw2KTCgb8LN1M7RP9oeWv2CrP
FBtyHXo+Cg7jYcu9bGLpxkk4ukOcgHckwubNTLdbUwREuJ6STGXQoUfo67zt
ZSw6ItS9QFVggQX5xr7fnP3w4Jh56B+VZvDv0hc+wuFL0pJReXBkP9jeKgiP
ZJFgWev13drycQjgYTvnFxLQ48EpsZrtHP6ZdRbW4fizpU74j4gTDMhV9YkT
eIpF90duK0uEYcBAZcNCoiENnVbhU8Wo9YOSfAFDTngS3taKp5yjk6EZPTNS
EcFBgqXgac0dDEg75yd5KQmL6jD0LrFznPmuO+7QZIeBh2nyfWODzZCGRvoe
6NCQfg9he48AET6PPyNazxHQnfn8eEWgwCONjrAje3FAWOo+o7DChH2ai9EE
cwyQyvU8nTi63sx7SVizsRg2Ge70m5DUhLU7K5lEDl+pGL96UuKXAOJbDwvO
PWYCe9Sa7+POz3Dz/MPAWTUq7AwzPnrtQxn8lo9M+TCTA0Jq5dMdPNUQI66f
cfsjDtnHrlpTxBDcSfPdu9NmEg2aRCw8N26CV3i7EA93Kipl3LzpuNQM5zan
OFxS4dx/yqAtJrgNrn5S1a4wpyCpLoOfcBALeW7fhDdrjaGjWzs3vDrSA1np
Rw3jVT9BvXNYTsnPXmipEf+8+wtHj9fimkw5dWeI90r82jIGPm/PKXjG40GV
sHWxu5/DMZcejZMZ/fB4EFPh9ZQEMyfyn/CrDILZ3yM/MbGjUPtp9t2dyCHI
/nF9ZoDDzx6achmv2glA+xOKXn2qgl7mprlD+0Zg138+Ndu/VCFrLYdXamGj
4H3RMCToWC8q+pq7j9AwBtd/BsooBQ8izSQhxdZdRJga4u+8w/EDF0v1S2PO
E9D40TCmd/8QqrI2RzGWJHC/neYSpIxDI8eMTCbSJqHl8uAz3vOpqKF3IK/K
YgqEaFE7bD7VgKbqbn1YmQKpEUH8nn2dkPCe1paaTIblSumZ98Z98MSsKmqX
MQUKxhWfeO/CAc7xur06gwL2zcbTWzb1QkyTXuHFJ9NA1xrwehLTBkKSAeU1
A1QoTj4bX/ZfBBrjH7i+9ogG+y5m6TQYVqN1V/EjfYp0OJmPO6Ia3oJeCISG
VrbSQbqr5IUHqwOVLcytoFsMeFDoce/jDixqnRvySd8xA1EyC58fHWhFlWsp
j5uaZ2D18PidLpU6lNG4lf+o8BzYFZkp2M+lQvqscOhGNAcNhafeXc2qhJ/3
fm5xdmbCRbun7+W2N0LF5d9CvVwcP1EWMhK0wYDgnS2mzvksyMpZ5c/ya4In
76OciGfZ0Kn1osY4sw5Cut42X6qOhP4Ypdo9l9lwcpfdJ+LFdNg0VWK8cHUG
MMe93fsuVsLUNYGG0/oNiCi3u3z9RS08de2UTLYZRZGmUsnJjAbYHyPgJe1G
QWMCasnn0zHw+XBl0KQFDXW16bnzaLfCwTTjKlt5KjIy+9N2sr8dLv1afFX2
eBLdVevG3jTuhan7VTI/Vprh05uVd+0JnL6wlmUH3IZgu3OoDo2CA22xnxYm
Hybgo3rLkQH9fvhjtz/AUGgSHtznS258OgA5O0NmK0eIQOwUWHTEj8CzKT+i
nXwb8voQZNAlOwZO2364HO/EI/1RHfu/Ppx9kHmzYcCYgL5fzN/oiIiA3/nx
550oApq5tP/6By4SZJssx/VtHkAvli84nF+ahHhzIVjp+QxOV5S3xWdOQRuf
8PIpyRawC/376/wZMsR2CkscedIDgX2hjbfmyeByxUZzgzQOmKeG8KpJFIgt
+fc00qUP5JU7f3/RmQaHFI1PK/rf4bJvn/JPVRrkxZNL21PyUZ5SnYb3AA06
5o4d5m5sRLWWhuY5QRy/1VWJj9RpRzxjLoPnpRnwduWtmSWHr0oeX/mS0MyA
q+7PL6zGt6MH7lyO2t4z0PPr9Z8P1U0oqrSeeOQ6Ry/cBr0HfxcC76czn3W2
MaFK65i89Ns6OLPR98HfIiYc/rxvmP9NE7S2HGg7aMMC9udIv+xzGMjMbrn0
5y8LDE66WCUxG2Bd577gUDYbvh2QDm7rroSEdImGvVduQ6vU/iksng3lGrcT
TcjJsG1HcE6FBEe3T75PRh1tAJ4Lx6Y6/k6hka82p/x+NoHJIHfM41UqaiBc
uF6a2AI6RVFphxqpyN0t+m/ScxwcmmuMfrWZCDxuMXmyDDykPF8RZPJOghPj
dA1OdwDWIn/hkSAJSLMMRmjPKKQINrzukcGhJYMfjTPi42CcI1zQGjmEuJbH
RUV8iKDyTbft+TAB7QozjI8rnoC79JnQ0xqDqM16684zu8kQcnos9XVEF0RW
lhjxtJDBJCI307irD2ra2/I++VKgV/lWltRAH9hfzj9Rd5YOd+8zdRZWW5H5
Ilt58w86WOpx+zJuYlHZsU+WKqkM8DyhPkIP6ED9bQeE02hzkOuo3XC6vRpk
QMPw4FMmSA183o+fbQT9bdtn/+1nweuY7eY6vhggxHn05g+w4P7FjgxvTCOo
mink7Gx7ATnKsJj8hgUFAp6W+UmN0JBjGHDl8TQi+Wxiapo1Q+y5L/2L9jQ0
XKHg4jDUCrNXn162tZxGjQ6Bt44cw0Nw/YoHeJFA/++/+piEfpAc6EhonyLB
70sb3+3yGwPHLuXIAv0BFHkrbGlr6zg8z7mmUdBAQEll93/kbJsAld9Dswa/
htDs59k+e38yvIocGxl91wtusyb6E1IUKE5LNODTxoEshvqnrIECF9Ldz2a0
9sJO42GbN2l0uBx6VV5aswM1YwYeZpgwIOWxyo6KUCwqwomsr88xAB9sa3zo
fhvSD3fXxeswIelAcVr1fw1wuy3vWyeBCW8/ZBdKCWHAMsQk8+pDFlwU+ys6
udIEVdHLrvgBNmR+iW6+E1MGzYY7KzGpHlCeuLjw9ScbCHe9pMLeN0Fozbf7
8xx+152cYDw53QKmN+qT09eoqPrvHM2oHg+7uwwORvwiQa+su/mo8AD8Exol
WnD2DG6pO9B5bgz+K+A2TdwyhFKMg6S9ThGB1e161pWTF2JVLKLPF5JhzW+H
o9qrPtjNdyLZ6QoFbD4PUk3W+8AnvOKC4xgdCnf9SVzUwiLNtyZ7fz1mAM7n
XehaZwficXi91+Q2E6z3aobaRTXCvfLNf6+JsSCwudxX1RMDF2LHK6oanoKa
pCjwcbMhObcpUOFkI9QKj0YYrFMQ8bgkxvAXBnSPJ75sdqAhz4nfF19swwPl
rEBW+x4SzCe6/Cm80Q8d1Wlfb66TwGmffU50CodXEuqKYp4T0KHNO1Y30olA
/vKEVW1EQB9fLZJtHMhwbXXF4dGRXvByJIcp/0eBw9m/q0rUcTBjJnQ+PYYO
bxQtDaPr2xH1XGreyiEG+HQk7edNxKKr04KplGYmZPCbS6cPNUGMnF55mxcL
JjNeFnrvx8Ap6U+fGNfCYKedouujDDaMjBr4Op/BwB0f1KV8gIYuYff5/9ne
D7+6Rqb3cPhqZ9yOrYGG47DudgHFsYeQR9YpgapEIlBX7iypVBLQfSOJjfUj
ZPgvOOjr1GofWD8+10B/RIHAwzxRUh/6QOW6MlfeFgYckvPpuvAcizbclBt+
e5IFrntxPBc8MNDsLayqPd8IKR7L6xr/OPOUzhZT/NAMdQcwAelmNCQxxn45
dg0PG0snPi1lkSDG9f0jd9QPJ+I8tj2v4ewJ9NEweWEc9khnOllMEpB9cMFa
ggYFHLyOGSlx6mVq8MnhWQkdkHrGLpXkDvRRe6udsSMDhrqTOt6dx6KYHLOh
kjkmiM1WuT/QwYDo4MVXy29Z8KvUtetMTRMkHjgSZzXHho8tdga5gyWwJ1b6
8z9ZOxA4JntIf40NQdOfv96SaYFjVQ8mj+ygoQTTtKihbDyMFb3NL6aSgObb
tFtSgwhyMbue0Tl5akDlfpy+FQX8S9Y9kBCOw7vJ9Jg+OmQN8krs5uQRCZ5/
m1P5WaB30HSzswsGHD8rqJlhMdCjcxPN2tAQlrw9ycC6H+p6TxHwWybhbAR2
Q1PkOMhTN5Zs8Cag+bdFGWdXyTDgmnXwsRIOlt6EnVRUYkCej+cmEc6+Urql
Wb/qzILSLi0PXcBw9OVY8tj5Hjz5bnEurpYNlw0tRq7LYMBIHs8IEqMhNfFh
oefreLB/+pfrxdZJKO1+tc39IRFwBKq3KZaAuB5MK5B7yHCO1/uvEbUPjhYI
vCGs0cHt2aMgoTAsyqiTnOrUYoFRZI1phBcGnLb8iTgQ1AzyIg8SbC7REHPX
oQ285/GQFHGr9PAzErgVnd39O6cfVkO93VN6SZAoKfy+f3QcVDLSVs3xBEQq
DpGuVqRAXYG7nP4RHJSE/mDeusCAo9mHeUM9sShc574JmmKC9pcRtd49GKgm
4bow1n6g+wx/U5XKhqkiPdMSPB7MFrOW9bknwUJWRRLZEcHkfUc2k8Pn9kfx
9Ro0OmSOPnk1eQGLxlwEFg/vZkHGiuhEAIevHAeFbI/JNcNIq+8DPw5fiZkW
20uH9cPr8D9Pt/0gQUAX85xZ0Ti4qiZI++QQEH2P2NVNwhSwyCePP+bct5/3
m3jXcQbcwDbIHY/FIvtAnU2XAzGwJevh6AegofuhQfhryv2gHzJxqZzDV7/5
zKaSpslgS/K02s3Ri4T86ZthIgyQMc+4XceZdzeJfb2u5ixYvSZlXmqPARed
6VyZ781w92PJAP4YDVW7a844bCGCT9dRidIZDj/qT476HqOAWfCyQPc+HLzZ
KeWRtcQEtXkBsX0cH9jE3f/p5TIbuN7plK/9LgbKrj0RdxTPgo8bj1b+OhsE
I+mZbEUinNxAPX5wnoCuFYfwaf3HAlst8atKDhjYNZxN7i7DwEt/IQHvCzSk
FTNHfXamHxzetAvc5J+EEk1xjclfZPiyR5VfXQEHXLoLz2rlGbD2gknDcvSZ
WlfsMPgTD/j35X9lBCfByOrBhM8yJ7/nXZGTCMKieY9EqrsGCxIvzPKac/oh
pxemXezUDGJzJ7hULtPQi9PtZ370jkPH1RuJrzj6/Hh2Kt98NwUwH9aqnnM4
K3WDU87ezJuQvdz39gmTDWdtRJNX2/FQKHDlQNMqCW4dtnz35hwRbu65razI
ICBVgae/u6RY0LB7mq+Bo18ZvgTBBr5mOHP/Ll6W0/+vjffZifwUiA7Rm3x8
GAfEPBUXVx0G7HugJ1TzCot2Ztd9G3fk+Ound4JMLRqiK5yTL5bpB29u3gIL
jr/Kt1SW7xBkwH7Nou7M15z80pjZ//c0C/4yXi7PO3Pe5+Xp/LGiGXbvdE2s
MaKhkteziSFr4/Dyl+fZeCoBpYwae23QpoATXLd1VeXsh8j+ZudEZ5DUK77z
+jcbGq6kphvoEeEJd8WlTywCwjo+5N4gzAKXzHPxlRz/TfNPC26bwMDrIi4R
xyuceV89s62WizNfr07+2nIAB6wfgstxBxhQjDlwVzEZi5r8uBoMefvBVOHL
g6McfR7if2dqsIEBWu7bx79HY9F50ffjGsdY4G2z5RvhBgYy8IHfc541w3uB
V94PrGgoY85uvoI6Do8bdZtJIwQks2PH832qFKgZ5BHfxalfIJ/r6nUiHrZq
W+KXN0+CIv+mt3RXIhAeYhKrJwjoxbc4drIiC0zlwe8UJ6+lfXz6sepIM9jo
fTlR6UhDik8Ku/3FOP3QVVYq5fT7u4dxl5YhA57JjPi+jMKibUPvI2U0+8FD
Qv+6/bZJ2BbWL8cQZ8CEdbrbh/+/Tyf0+AkRItw52Hoxn0lAtZ6ZB9X/ssHS
Z2uh8dNi+B+Ebnz/
     "], {{}, {}, 
      TagBox[
       {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[1.6], 
        Opacity[1.], LineBox[CompressedData["
1:eJwl13f8TXUcx/GfzMgsq2wR2TIrKqNFCpW9Z/YeGQ2j7FAhq7JaVLayN9ll
k1FCtiIh9fw8+uPl83m9P+fe373nfM/3XLmbd67VKVFCQsKXiRMSos66KyFh
p6YfL6BWV3vJPlS/Ns+hPsvfVT8xb6OO5U3Mrqk50UdeTz5I/6+8nL65/nv5
I3y3/pb+ZRzmhcxfkc3jI3gqXpqP5hmhTZjtn136gviGN8V1WS70jQ+OUsoe
flv/Co7wkfB2CXPku2UP41veDKWRBEnxmfkes0KYz5ujDH6U/yN7FUf5KCTD
5/IfZYWxgLdAWfwkvyOrg5/5aCTHF/KfZEWwkLfEX7LceF2WCOVke+Oc6evi
GC/sw78q+5qP4ffwMnwMz4SneHu+Xp8irqN+r74oFvGc5s/JPuWt+A19HvTj
9c0G6+/Sl9e3iPdVl/Ou6mRe3mv2xQXAQFk9s9rqAD5JPW5URK3DR6rfmHdQ
P+Sz1PfMU6tl+ZBw86bqcD5dzcwrqR34eHUD76V+zO/22q/UfbJieEHemy+W
59I/r58hb83/1udFf54Yj8r280Soz0/wsUjjdeVkY2VZkFI2l+/XF8cS3gaP
4UCcGzSQn+TjYm1inuyArASW8rZ4PK5NfFd8bX7QrCSW8ddQAQflidFQ/gsf
H58H38gOxb2B73g7VMQheRI0kv/K30dafCs7HOsd3/P2uCl7EANkSfCE7DBP
isb8FC/qu9fl3/IP4r14eT6ON9OP0GfVV9Z31G/Up3PcfP0RfWnUMOvDl8tz
66vph6kzzdqq42KtxfU0v6XPh7f5QPMG6hA+RU0a10htyd9TV/Bu6hT+mfqk
1x/RJ8MbvEnsF/E+/DezYrEW9fPlHfUTYo+Sp9M/GmtJ3lw/Un+/voq+k36T
Pr3jFuiP6stgBc9jXj3WbLwfv63PH3+bJ4v7THaUJ0dTfppPQAYslP0sK4uV
vBMq4V4sMjsW9zZW8c6ojPuw2Ox43HtYzbugCjJiidmJOEdYw7uiKn6Wp0Az
+Rk+EZmwVHZS9hjW8m74R/YQ3pQlx9OyY3FfoTk/yychve/+mOx92QPILFvG
f9E/jnU8r2NekM3m3fkdfQG8FftO/F3zVnyl/hnz4/qUaBF7sdkb+t/lxfX1
9QvknfQT9R/FedQ/rh+qfmDWQh3FP1az8apq5/iM6mbeO54//As1i9d/p/9V
3p9XUF9U+8omqOvNH1Rr8OHqHPPX1PGxf6g9zP/VF4y1atZQNjTOU3x/fWv9
Kv2zjjuhT4WW/BwvYd6AL+ST45rH34+1yLMjq+x7fkpfERt4z4T/H0oPywfF
HoTnRCf5PWjFz/MpuB/LY83HPY2NvBeexwPIhhXmp82exCbeG9Xwizw1Wssv
8KnIjpWyM7GmsZn3QXX8Kk+DNvKLfBpyYJXsbOzT2ML7IpHPX0g+WJYq9mbZ
KZ4WbfklXtIxDfkiPj3WPK8Y14TnQE7Z6lgXsedgK8/nmBdjD+Cvx2OHF45n
B2+kfyfOkb6Cvo1+daxH/VR9Dcf/pqaLNS97zexV9c1YY+pl80fURnyUuti8
szop1nU8c+LeU5/g78TaNG+pjuafqDnjHlK78A/ULbyP+inP5bVr1HOx1+Al
+ev8B3l+/Uv6z+X94tLzIrHWeepYF7wtXxPr1vy0Pj3a8Sv8k7jHY0+UTZLl
Qm7ZWn4+7g1s4/3xEs7IM6C9/Cr/NPY3rJNdiO+A7XwAasa9HfcH1ptfjPsX
O/hA1MJZ+b3oIP+Dz4jrhA2yS3FfYCd/A7Xxu/w+dJT/yWfGOcBG2eVY69jF
30QS36tonG9ZmtjjZed4RsQP02u8lGMa8yV8Fs/Mn4prGuchPi/vyrfqHzLf
pL+ifx41zfrx3fKH9DVjz5C3078f+5c8qb5Y3Ivqu2aNo/Kpatq472It8bHq
Wt5DnRbXM363ev15faZ4r9ijzOuob/HJ6nXz0vH84qPVpeZd1I/4HHW2eRa1
Uhxv1ko/Rp8nzqu+W6whfQHHbdZf1VfDHl7AvJbsS/42T8aL82E8Xax92QWe
GV34X3wOsjqusmyKLC8KyrbwP/TV8SMfhDq4KM+CrvIb/DM8jK2yP+O+x098
MOqiEArjB/NrZjWwlw9BPVySZ0U3+d/8cxTBNtn1WP/Yx4ciuc9ZIvZsWXrU
l13m96M7v8m/iD3ScVXieskeRFHZdv5X3IfYzws6prbsK/4OT8FL8hE8AxrI
rvAH0IPf4mUc05Qv41/Gfsur8mm8dfyW1eeL9azvrt+m76ufoS/m+B3qDdmA
WHdqLbW/bKJ6IM6j+nJ8BnWueft49vGZsf7M71YfiT02fseYN1GHxd9X7439
Xm3Hx6nreE91Om/otVfVbOgpryt/W39bXlbfTP+d/Kt4fvCn+XSeP+6ZeB7y
7fri5jv1f8dnx0E+DCkdUyr2UNl9sS/L/uDZ0Yv/w+fGsxG7ZDdltXGID0dj
/CnPgd7yO3xePJu87zOyj+M+jnXOe/Id8SzQz7zr//+nlnTsfxCav2c=
         "],
         VertexColors->Automatic]},
       Annotation[#, "Charting`Private`Tag$61301#1"]& ]},
     VertexColors->{
       Hue[1.], 
       Hue[0.9568474148055095], 
       Hue[0.8251586550388389], 
       Hue[0.6483168272731851], 
       Hue[0.4546308631935385], 
       Hue[0.25646554863048954`], 
       Hue[0.11095358223605811`], 
       Hue[0.018459464798481484`], 
       Hue[0.0034118532375415067`], 
       Hue[0.054161446091131216`], 
       Hue[0.16541414507311042`], 
       Hue[0.30146323361889754`], 
       Hue[0.442538780508978], 
       Hue[0.5797338972376637], 
       Hue[0.6739761214737563], 
       Hue[0.7257126324611431], 
       Hue[0.7212001535281476], 
       Hue[0.6720189110141365], 
       Hue[0.5820110654776063], 
       Hue[0.4795174474718758], 
       Hue[0.36805778448474546`], 
       Hue[0.2766147995833438], 
       Hue[0.2198846595368256], 
       Hue[0.19696540164332602`], 
       Hue[0.2123782179434921], 
       Hue[0.2571366578742177], 
       Hue[0.32866361381700854`], 
       Hue[0.4048212234634144], 
       Hue[0.48339662801028904`], 
       Hue[0.5439788865086771], 
       Hue[0.5777724330811937], 
       Hue[0.5857416062250662], 
       Hue[0.5671753013908074], 
       Hue[0.5291594580646249], 
       Hue[0.4738833583448411], 
       Hue[0.41821907885762927`], 
       Hue[0.3635170522650708], 
       Hue[0.3254813871914708], 
       Hue[0.3052075612497624], 
       Hue[0.30418843343490115`], 
       Hue[0.32154375119944983`], 
       Hue[0.355644127170623], 
       Hue[0.39772445268956436`], 
       Hue[0.4377739881817479], 
       Hue[0.47502189149256036`], 
       Hue[0.49892261073207816`], 
       Hue[0.509356775379053], 
       Hue[0.505519156902777], 
       Hue[0.48937515034005935`], 
       Hue[0.4611914815453272], 
       Hue[0.9889930703692982], 
       Hue[0.9004987163427658], 
       Hue[0.7413236132334308], 
       Hue[0.3518775839026026], 
       Hue[0.17748718821241716`], 
       Hue[0.05529131528369258], 
       Hue[0.0014620904109823307`], 
       Hue[0.021561043508635025`], 
       Hue[0.10375573788317688`], 
       Hue[0.23101125275676365`], 
       Hue[0.5146493788171704], 
       Hue[0.6318636103009276], 
       Hue[0.7069041008928099], 
       Hue[0.7301957244370614], 
       Hue[0.7014849801174814], 
       Hue[0.6307649405400417], 
       Hue[0.5319089074440728], 
       Hue[0.4226064942938888], 
       Hue[0.31908649144821705`], 
       Hue[0.24425257442839948`], 
       Hue[0.20320581046313263`], 
       Hue[0.20043009982145532`], 
       Hue[0.2315618035434162], 
       Hue[0.29070988265500086`], 
       Hue[0.4454837392063931], 
       Hue[0.5164068766490385], 
       Hue[0.5639344199279939], 
       Hue[0.5855368070069277], 
       Hue[0.5793750129467076], 
       Hue[0.5502261421669414], 
       Hue[0.5027374667024946], 
       Hue[0.38954330348630617`], 
       Hue[0.34253825378216224`], 
       Hue[0.3130615009130836], 
       Hue[0.3019859637250233], 
       Hue[0.31085702964520034`], 
       Hue[0.33700102944401544`], 
       Hue[0.3761060790622078], 
       Hue[0.4575986817525609], 
       Hue[0.48852315360732335`], 
       Hue[0.5058332405619365], 
       Hue[0.5093492068252795], 
       Hue[0.49878267925349384`], 
       Hue[0.4762886362920881], 
       Hue[0.9972377595811077], 
       Hue[0.9312813792043833], 
       Hue[0.7846301202067723], 
       Hue[0.40260162476804023`], 
       Hue[0.21557384627749385`], 
       Hue[0.08085927825371891], 
       Hue[0.007569863163956414], 
       Hue[0.010586816973188196`], 
       Hue[0.07726276644860525], 
       Hue[0.19742510998202015`], 
       Hue[0.47929435695320716`], 
       Hue[0.6069566574776752], 
       Hue[0.6921630681728711], 
       Hue[0.7296762794420095], 
       Hue[0.7126421529541846], 
       Hue[0.6524753653695168], 
       Hue[0.5573785538890773], 
       Hue[0.450924009666047], 
       Hue[0.34287344904721445`], 
       Hue[0.25948649353177694`], 
       Hue[0.21024913492094016`], 
       Hue[0.19759936924294802`], 
       Hue[0.22110335848322576`], 
       Hue[0.2732639642288768], 
       Hue[0.42538841979366515`], 
       Hue[0.5005092099632417], 
       Hue[0.5546934606039622], 
       Hue[0.5826057157260994], 
       Hue[0.5833233781316565], 
       Hue[0.5592698318036184], 
       Hue[0.5163361864586752], 
       Hue[0.4036228925946139], 
       Hue[0.352576685851435], 
       Hue[0.3187153694229895], 
       Hue[0.30290763041250707`], 
       Hue[0.30699016768718934`], 
       Hue[0.32881698087602107`], 
       Hue[0.3656687593225954], 
       Hue[0.44793855643929603`], 
       Hue[0.48213712583447726`], 
       Hue[0.5027960586675507], 
       Hue[0.5098450832336271], 
       Hue[0.5025105235088245], 
       Hue[0.48313141582289176`], 
       Hue[0.9754518573941597], 
       Hue[0.8649571757036536], 
       Hue[0.30299680272876733`], 
       Hue[0.14252083680229616`], 
       Hue[0.03444544874840477], 
       Hue[0.00010398486508805815`], 
       Hue[0.036155870054588646`], 
       Hue[0.13327129587436498`], 
       Hue[0.5482411025629521], 
       Hue[0.6542592460631192], 
       Hue[0.7181047370131197], 
       Hue[0.7273366107922754], 
       Hue[0.6878850281063505], 
       Hue[0.29693014188074257`], 
       Hue[0.23102257627020567`], 
       Hue[0.1987796069712647], 
       Hue[0.205386566079433], 
       Hue[0.24362121456791286`], 
       Hue[0.4648885332629658], 
       Hue[0.5309404700546411], 
       Hue[0.5716420496218855], 
       Hue[0.5865727257151305], 
       Hue[0.573965129245202], 
       Hue[0.540151160067122], 
       Hue[0.37612875877282037`], 
       Hue[0.3334831328227732], 
       Hue[0.30855199066459466`], 
       Hue[0.30242401032401106`], 
       Hue[0.31573058597419845`], 
       Hue[0.34598321429529055`], 
       Hue[0.46665622483807834`], 
       Hue[0.4941315837885616], 
       Hue[0.5080215851425653], 
       Hue[0.5078951870350402], 
       Hue[0.49438569793384135`], 
       Hue[0.4689421989493116], 
       Hue[0.9993138773576917], 
       Hue[0.9447431868723521], 
       Hue[0.8052710886002279], 
       Hue[0.4284878192144614], 
       Hue[0.23569013262989266`], 
       Hue[0.09535511335002544], 
       Hue[0.012416981761704471`], 
       Hue[0.00651454548880398], 
       Hue[0.06526624085499105], 
       Hue[0.18120050527621936`], 
       Hue[0.46106800158684524`], 
       Hue[0.5936214730113275], 
       Hue[0.6834927846365019], 
       Hue[0.7281276512286537], 
       Hue[0.7172549809117243], 
       Hue[0.6625353235798045], 
       Hue[0.569815908101122], 
       Hue[0.465206550797552], 
       Hue[0.3553063566534771], 
       Hue[0.2678215126863767], 
       Hue[0.21474561545679055`], 
       Hue[0.19700414489992643`], 
       Hue[0.21651638834479736`], 
       Hue[0.2650220044541558], 
       Hue[0.41514971435146203`], 
       Hue[0.49209478949644664`], 
       Hue[0.5495160324054348], 
       Hue[0.5804264460055597], 
       Hue[0.5847275152911491], 
       Hue[0.5633711959215023], 
       Hue[0.5228549849585805], 
       Hue[0.4108660655097128], 
       Hue[0.35793963983585003`], 
       Hue[0.32196181982177596`], 
       Hue[0.3038847464751781], 
       Hue[0.3054528665727254], 
       Hue[0.32505977403052194`], 
       Hue[0.36059720544575524`], 
       Hue[0.4429128733450321], 
       Hue[0.4786673076179345], 
       Hue[0.5009627581611023], 
       Hue[0.5097251709866026], 
       Hue[0.5041076396414639], 
       Hue[0.4863339347980238], 
       Hue[0.9828710234495321], 
       Hue[0.8832923960888555], 
       Hue[0.3271743382139245], 
       Hue[0.15959566958478616`], 
       Hue[0.044268142314836556`], 
       Hue[0.00019337307025973915`], 
       Hue[0.028418295931356086`], 
       Hue[0.11815984246578093`], 
       Hue[0.5316873042172314], 
       Hue[0.6433864798446933], 
       Hue[0.7129512265211195], 
       Hue[0.7291829753041139], 
       Hue[0.6949797634889439], 
       Hue[0.30779078249909153`], 
       Hue[0.2373810681337084], 
       Hue[0.20066519112153092`], 
       Hue[0.2026478319486967], 
       Hue[0.2374001699812741], 
       Hue[0.45528565552427486`], 
       Hue[0.5238528132189096], 
       Hue[0.5679830181272578], 
       Hue[0.5862903916128747], 
       Hue[0.5768479543343968], 
       Hue[0.5453105669303194], 
       Hue[0.3827440223611579], 
       Hue[0.33788312915460816`], 
       Hue[0.31066213638926676`], 
       Hue[0.3020367671253597], 
       Hue[0.31317197038374744`], 
       Hue[0.3413996776773687], 
       Hue[0.4622085744694986], 
       Hue[0.4914272605184611], 
       Hue[0.5070339797762392], 
       Hue[0.508739936379077], 
       Hue[0.49666447901885713`], 
       Hue[0.4726722422928341], 
       Hue[0.9937902454191361], 
       Hue[0.9165146266166616], 
       Hue[0.06749591946657801], 
       Hue[0.003919030783754052], 
       Hue[0.015609428891030397`], 
       Hue[0.699971216757225], 
       Hue[0.7303632774022073], 
       Hue[0.7073791856954091], 
       Hue[0.25162539534682765`], 
       Hue[0.20640118012583167`], 
       Hue[0.19874410699069098`], 
       Hue[0.22612387557100475`], 
       Hue[0.5595022421681706], 
       Hue[0.584309098885265], 
       Hue[0.5815364892839555], 
       Hue[0.3157471346942727], 
       Hue[0.3022753199773609], 
       Hue[0.30879389782493594`], 
       Hue[0.4854245129748536], 
       Hue[0.5044201628958161], 
       Hue[0.509718783537733], 
       Hue[0.5007335092505529], 
       Hue[0.9667661925555533], 
       Hue[0.02583863830291333], 
       Hue[0.0011818652150552555`], 
       Hue[0.04474657846926766], 
       Hue[0.7223594076174131], 
       Hue[0.7246703827183743], 
       Hue[0.22518744589636994`], 
       Hue[0.19754748163603134`], 
       Hue[0.208634382039461], 
       Hue[0.5749065206349886], 
       Hue[0.5863879817745395], 
       Hue[0.5707371319346564], 
       Hue[0.30673329444513014`], 
       Hue[0.30314306831387317`], 
       Hue[0.31852422625639154`], 
       Hue[0.4966314184512103], 
       Hue[0.5087957746504135], 
       Hue[0.506819786792017], 
       Hue[0.46511104327578334`], 
       Hue[0.9998317258266405], 
       Hue[0.9509681597328024], 
       Hue[0.8153126620244369], 
       Hue[0.4415316609757316], 
       Hue[0.24599819700986064`], 
       Hue[0.10301852170983622`], 
       Hue[0.0152889908141981], 
       Hue[0.0048408833970324805`], 
       Hue[0.05959974864541673], 
       Hue[0.1732497988665789], 
       Hue[0.4518382171586136], 
       Hue[0.5867449839550105], 
       Hue[0.6788391636490541], 
       Hue[0.7270286465258367], 
       Hue[0.7193120632429801], 
       Hue[0.6673512627236854], 
       Hue[0.5759458057962669], 
       Hue[0.4723610253431274], 
       Hue[0.3616442509073246], 
       Hue[0.27216190098388954`], 
       Hue[0.21723526414490893`], 
       Hue[0.19691482891959594`], 
       Hue[0.21439028563027615`], 
       Hue[0.2610331068364633], 
       Hue[0.4099948976947927], 
       Hue[0.4877798709633255], 
       Hue[0.5467918284652941], 
       Hue[0.5791586577276414], 
       Hue[0.5852837377285557], 
       Hue[0.5653111688170056], 
       Hue[0.5260352716422533], 
       Hue[0.41453007897562516`], 
       Hue[0.36070226393656263`], 
       Hue[0.3236878102890886], 
       Hue[0.3045029235071989], 
       Hue[0.3047861626591104], 
       Hue[0.32327080137803543`], 
       Hue[0.3581049084776401], 
       Hue[0.4403567480221323], 
       Hue[0.47686610231215976`], 
       Hue[0.49996837320774584`], 
       Hue[0.5095721492687053], 
       Hue[0.5048369390284297], 
       Hue[0.4878754078513014], 
       Hue[0.9860959897132404], 
       Hue[0.8920405754704226], 
       Hue[0.3394642235638259], 
       Hue[0.16844154127581717`], 
       Hue[0.049630774104489184`], 
       Hue[0.00067968478812791], 
       Hue[0.024878002437049684`], 
       Hue[0.11086629066175724`], 
       Hue[0.5232262185200781], 
       Hue[0.6377049849149692], 
       Hue[0.7100389363460009], 
       Hue[0.7297943271471654], 
       Hue[0.6983074338301829], 
       Hue[0.313385910395041], 
       Hue[0.24075339417151076`], 
       Hue[0.2018535953262627], 
       Hue[0.20147314136468028`], 
       Hue[0.23443202408538538`], 
       Hue[0.450407958045255], 
       Hue[0.5201735956371143], 
       Hue[0.5660070639074255], 
       Hue[0.5859727159172649], 
       Hue[0.5781565865671658], 
       Hue[0.5477997262080732], 
       Hue[0.3861217439374481], 
       Hue[0.3401793538647262], 
       Hue[0.31182583379229883`], 
       Hue[0.30196905649702754`], 
       Hue[0.3119835198823455], 
       Hue[0.33917631126870074`], 
       Hue[0.4599232055568946], 
       Hue[0.4899998645875516], 
       Hue[0.5064602142625718], 
       Hue[0.5090742844857543], 
       Hue[0.4977440839091062], 
       Hue[0.47449542131047157`], 
       Hue[0.9956841411546937], 
       Hue[0.9240577059915343], 
       Hue[0.07403431290013895], 
       Hue[0.005594983556776678], 
       Hue[0.012980615612672552`], 
       Hue[0.6961757916204239], 
       Hue[0.7301270936158388], 
       Hue[0.7100907872114038], 
       Hue[0.2554957763782571], 
       Hue[0.20824379357162065`], 
       Hue[0.19810353521186538`], 
       Hue[0.22356041200275353`], 
       Hue[0.5571444524392815], 
       Hue[0.5835169115041335], 
       Hue[0.5824772874623582], 
       Hue[0.3171961842491085], 
       Hue[0.3025484679119037], 
       Hue[0.30785915480990866`], 
       Hue[0.4838040302677882], 
       Hue[0.5036343868730178], 
       Hue[0.509812541827281], 
       Hue[0.5016441322273737], 
       Hue[0.9712653142864771], 
       Hue[0.029989237985885042`], 
       Hue[0.0004978921949427284], 
       Hue[0.04034635252407731], 
       Hue[0.7203446513454894], 
       Hue[0.7261050370218644], 
       Hue[0.22803899739325412`], 
       Hue[0.19808203255406662`], 
       Hue[0.20694762893907065`], 
       Hue[0.5733238784161767], 
       Hue[0.5865384276352568], 
       Hue[0.572393585479803], 
       Hue[0.30760609999367183`], 
       Hue[0.30274238629082356`], 
       Hue[0.31709858811332675`], 
       Hue[0.49540733478866494`], 
       Hue[0.5084353545597643], 
       Hue[0.5073859931086108], 
       Hue[0.46703846950620614`], 
       Hue[0.998448479886106], 
       Hue[0.009843866155091807], 
       Hue[0.00843063624649587], 
       Hue[0.7290100214584059], 
       Hue[0.715030962226523], 
       Hue[0.212416637447252], 
       Hue[0.19723260179711513`], 
       Hue[0.5815755271304598], 
       Hue[0.5840737672867806], 
       Hue[0.3033530092993661], 
       Hue[0.30618779701623844`], 
       Hue[0.5019054232796265], 
       Hue[0.5098160612835756], 
       Hue[0.9793217325836672], 
       Hue[0.03920568734138302], 
       Hue[1.9431316287676914`*^-6], 
       Hue[0.7156400717745212], 
       Hue[0.7283631856834863], 
       Hue[0.19964057480653322`], 
       Hue[0.20395279152107798`], 
       Hue[0.5698615651448196], 
       Hue[0.5864902343719636], 
       Hue[0.3095707549211819], 
       Hue[0.3021886018508314], 
       Hue[0.5075544538039404], 
       Hue[0.5083467089643028], 
       Hue[0.991558886737508], 
       Hue[0.0025416021976406022`], 
       Hue[0.7303857878923152], 
       Hue[0.20472174257038858`], 
       Hue[0.199520012193598], 
       Hue[0.584982346562472], 
       Hue[0.5805020310888032], 
       Hue[0.3020879253290879], 
       Hue[0.5095641958602498], 
       Hue[0.021995004825586528`], 
       Hue[0.002153912450069295], 
       Hue[0.7241487618328206], 
       Hue[0.7230346961721441], 
       Hue[0.19717547031288632`], 
       Hue[0.5861221085495295], 
       Hue[0.30593374080967534`], 
       Hue[0.3036253405287925], 
       Hue[0.5091028896748487], 
       Hue[0.5061972641252878], 
       Hue[0.46316151351666784`], 
       Hue[0.9999596783728093], 
       Hue[0.9539513856066393], 
       Hue[0.8202605533701683], 
       Hue[0.44807490014134127`], 
       Hue[0.2512123122927336], 
       Hue[0.10695235782006424`], 
       Hue[0.01683695467242885], 
       Hue[0.0040956569670293486`], 
       Hue[0.056851752355151], 
       Hue[0.1693172494948873], 
       Hue[0.44719682180885745`], 
       Hue[0.5832560410452572], 
       Hue[0.6764336754521145], 
       Hue[0.7263977833099855], 
       Hue[0.7202773573073147], 
       Hue[0.6697038811667531], 
       Hue[0.5789867699336907], 
       Hue[0.4759393159769706], 
       Hue[0.3648418163136129], 
       Hue[0.274374419359509], 
       Hue[0.21854005590628103`], 
       Hue[0.19692258570687277`], 
       Hue[0.21336988592730155`], 
       Hue[0.25907312285803985`], 
       Hue[0.40741019161402214`], 
       Hue[0.4855966234689855], 
       Hue[0.5453963720065264], 
       Hue[0.5784803296826425], 
       Hue[0.5855250157817945], 
       Hue[0.5662528084609693], 
       Hue[0.527604533443602], 
       Hue[0.4163716119691961], 
       Hue[0.36210323042306836`], 
       Hue[0.32457619615199695`], 
       Hue[0.30484443586734944`], 
       Hue[0.3044786309587214], 
       Hue[0.32239943626426715`], 
       Hue[0.35687046043821974`], 
       Hue[0.4390685917365928], 
       Hue[0.4759493150001718], 
       Hue[0.4994518915005314], 
       Hue[0.5094722684784718], 
       Hue[0.5051839743865574], 
       Hue[0.4886305819218906], 
       Hue[0.9875857312181044], 
       Hue[0.8963063801407845], 
       Hue[0.3456559736141298], 
       Hue[0.17293967557690268`], 
       Hue[0.052423956625145984`], 
       Hue[0.001033807889657623], 
       Hue[0.02319140923548957], 
       Hue[0.10728775949388453`], 
       Hue[0.5189519319922496], 
       Hue[0.6348041110853369], 
       Hue[0.7084992741165242], 
       Hue[0.730021359558941], 
       Hue[0.6999151398411236], 
       Hue[0.3162232314400494], 
       Hue[0.24248721959758351`], 
       Hue[0.20250922965159196`], 
       Hue[0.2009350811322139], 
       Hue[0.23298453472279038`], 
       Hue[0.44795145855976426`], 
       Hue[0.5183010405805644], 
       Hue[0.5649827808748183], 
       Hue[0.5857695624378338], 
       Hue[0.5787771518138014], 
       Hue[0.5490208871529957], 
       Hue[0.3878271817579736], 
       Hue[0.34135104106317876`], 
       Hue[0.31243469453253747`], 
       Hue[0.3019669042475949], 
       Hue[0.31141246642009546`], 
       Hue[0.3380825446962907], 
       Hue[0.45876574819793875`], 
       Hue[0.4892676321926436], 
       Hue[0.5061533719726508], 
       Hue[0.5092192065164403], 
       Hue[0.4982685606704655], 
       Hue[0.47539587053651394`], 
       Hue[0.9965036533990517], 
       Hue[0.9277099028767435], 
       Hue[0.07741118116908019], 
       Hue[0.006545040376348843], 
       Hue[0.011754173708606208`], 
       Hue[0.694196488317554], 
       Hue[0.7299285695493786], 
       Hue[0.7113866466062204], 
       Hue[0.25747620575624014`], 
       Hue[0.20922615589271132`], 
       Hue[0.19783433757715396`], 
       Hue[0.222318458303834], 
       Hue[0.5559305441341034], 
       Hue[0.5830761906715545], 
       Hue[0.5829122346250385], 
       Hue[0.3179470444961341], 
       Hue[0.3027172833285415], 
       Hue[0.3074163871231355], 
       Hue[0.48297633116309163`], 
       Hue[0.5032217772411482], 
       Hue[0.5098364872624109], 
       Hue[0.5020829041825803], 
       Hue[0.9733979177627001], 
       Hue[0.03217923558692298], 
       Hue[0.00026456330760138425`], 
       Hue[0.03822466776463629], 
       Hue[0.7192528173210839], 
       Hue[0.7267463319398563], 
       Hue[0.22951435426113886`], 
       Hue[0.19841041602321333`], 
       Hue[0.20615128469307425`], 
       Hue[0.5724953306195166], 
       Hue[0.5865701371072155], 
       Hue[0.5731900593456889], 
       Hue[0.30806992185994525`], 
       Hue[0.3025728674258855], 
       Hue[0.31640731134624556`], 
       Hue[0.4947758849798226], 
       Hue[0.5082351400483068], 
       Hue[0.507647758707737], 
       Hue[0.46799339555560476`], 
       Hue[0.9989244877928809], 
       Hue[0.011093043683422343`], 
       Hue[0.0074424303027391114`], 
       Hue[0.7285958864539577], 
       Hue[0.7161637065940748], 
       Hue[0.21356098952413946`], 
       Hue[0.1971010307070317], 
       Hue[0.581015838546441], 
       Hue[0.5844127780128294], 
       Hue[0.3036080765844652], 
       Hue[0.3058118517359242], 
       Hue[0.5014405758283849], 
       Hue[0.5097783671078973], 
       Hue[0.9811366889897579], 
       Hue[0.04169925990903195], 
       Hue[0.00006088139301863027], 
       Hue[0.7143236295594844], 
       Hue[0.7287990350942779], 
       Hue[0.2001324154715796], 
       Hue[0.20328411726795242`], 
       Hue[0.5689345099517922], 
       Hue[0.5864050139098008], 
       Hue[0.310107386280593], 
       Hue[0.30210220205431704`], 
       Hue[0.5073008821769013], 
       Hue[0.5085506469270239], 
       Hue[0.9927165655601837], 
       Hue[0.0031930341472816703`], 
       Hue[0.7304011764169368], 
       Hue[0.20554104099298062`], 
       Hue[0.19911521302179447`], 
       Hue[0.5846605826147834], 
       Hue[0.5810309001555394], 
       Hue[0.30217092213173646`], 
       Hue[0.5096490675647403], 
       Hue[0.023878374998728635`], 
       Hue[0.0016320114417620601`], 
       Hue[0.7232822688767383], 
       Hue[0.7238775354381142], 
       Hue[0.19734119319625487`], 
       Hue[0.5862694255043903], 
       Hue[0.30632435245869793`], 
       Hue[0.30337405249353744`], 
       Hue[0.508955991297499], 
       Hue[0.5065155200951625], 
       Hue[0.4641389414291167], 
       Hue[0.9996163765329349], 
       Hue[0.005647269957591905], 
       Hue[0.7276052550827381], 
       Hue[0.19694204561245557`], 
       Hue[0.5850178703020079], 
       Hue[0.3041830272786626], 
       Hue[0.5096564413487235], 
       Hue[0.00039958828601804885`], 
       Hue[0.7295148039485877], 
       Hue[0.20123891556231463`], 
       Hue[0.586146309812301], 
       Hue[0.30199236410498087`], 
       Hue[0.5089145054050822], 
       Hue[0.9947795565586137], 
       Hue[0.004719661666282848], 
       Hue[0.7302719578404275], 
       Hue[0.1984068355440257], 
       Hue[0.5839278789206208], 
       Hue[0.30240115706591425`], 
       Hue[0.5097732915303294], 
       Hue[0.0008037404983536889], 
       Hue[0.7213801933052155], 
       Hue[0.7254129699400698], 
       Hue[0.19779440674088125`], 
       Hue[0.586477679987138], 
       Hue[0.3029324825203093], 
       Hue[0.5086222312447762], 
       Hue[0.997886138168534], 
       Hue[0.729370126116609], 
       Hue[0.19739875180034563`], 
       Hue[0.30311953252932555`], 
       Hue[0.5098382877175248], 
       Hue[0.000016375850514616097`], 
       Hue[0.727875637862944], 
       Hue[0.19918964806862957`], 
       Hue[0.5865461157226632], 
       Hue[0.30229589595785256`], 
       Hue[0.0019646526238763506`], 
       Hue[0.7303172536818068], 
       Hue[0.5852744124014346], 
       Hue[0.3020262877004737], 
       Hue[0.5094642231909867], 
       Hue[0.0027472897636919846`], 
       Hue[0.19705023484326734`], 
       Hue[0.5859461331185835], 
       Hue[0.5092364802332315], 
       Hue[0.4621789599449495], 
       Hue[0.9999908071892714], 
       Hue[0.9554103470051183], 
       Hue[0.8227158835260597], 
       Hue[0.45135136123523556`], 
       Hue[0.25383408455290213`], 
       Hue[0.10894458002969554`], 
       Hue[0.017638896543744564`], 
       Hue[0.003746061191312877], 
       Hue[0.05549934827118347], 
       Hue[0.16736197420727], 
       Hue[0.44486983368472827`], 
       Hue[0.5814990908819898], 
       Hue[0.6752113880365309], 
       Hue[0.7260619955374727], 
       Hue[0.7207440829476266], 
       Hue[0.6708661266211597], 
       Hue[0.580501033028453], 
       Hue[0.4777284420901881], 
       Hue[0.3664475319960289], 
       Hue[0.2754911436163423], 
       Hue[0.21920738944553142`], 
       Hue[0.19693960613163025`], 
       Hue[0.2128704467396316], 
       Hue[0.25810192523044806`], 
       Hue[0.4061162119169739], 
       Hue[0.4844986982056843], 
       Hue[0.5446903729677138], 
       Hue[0.5781300746249614], 
       Hue[0.5856364029550446], 
       Hue[0.5667164597996925], 
       Hue[0.5283838073180919], 
       Hue[0.4172946233260462], 
       Hue[0.36280854616674507`], 
       Hue[0.3250266968896073], 
       Hue[0.30502329727443234`], 
       Hue[0.3043313599013711], 
       Hue[0.3219696213860011], 
       Hue[0.35625626475914274`], 
       Hue[0.4384220825633182], 
       Hue[0.47548692546551913`], 
       Hue[0.4991888480559029], 
       Hue[0.5094164748377753], 
       Hue[0.5053530523162522], 
       Hue[0.48900420256714605`], 
       Hue[0.9882997273966143], 
       Hue[0.8984117911538605], 
       Hue[0.34876310969892166`], 
       Hue[0.1752072954384195], 
       Hue[0.05384838353979976], 
       Hue[0.001238671411110559], 
       Hue[0.022369173733794878`], 
       Hue[0.10551588784462423`], 
       Hue[0.5168041463736125], 
       Hue[0.6333387922487168], 
       Hue[0.7077086179827072], 
       Hue[0.7301151361492206], 
       Hue[0.7007048138509191], 
       Hue[0.31765164590453226`], 
       Hue[0.24336596763392349`], 
       Hue[0.2028524025374644], 
       Hue[0.20067844545327743`], 
       Hue[0.23227005722180188`], 
       Hue[0.44671897553966744`], 
       Hue[0.5173566428249443], 
       Hue[0.5644616040211143], 
       Hue[0.585656887413563], 
       Hue[0.5790789297644396], 
       Hue[0.549625516558515], 
       Hue[0.3886839245038264], 
       Hue[0.34194271584029734`], 
       Hue[0.31274585759574447`], 
       Hue[0.3019737791377214], 
       Hue[0.31113278814657486`], 
       Hue[0.3375402413554141], 
       Hue[0.4581834047632361], 
       Hue[0.4888969183975654], 
       Hue[0.5059949664893649], 
       Hue[0.5092860758325621], 
       Hue[0.4985269212743564], 
       Hue[0.4758432258268301], 
       Hue[0.9968814026299977], 
       Hue[0.9295057847653789], 
       Hue[0.07912635275973517], 
       Hue[0.0070481045885099625`], 
       Hue[0.011163089418390726`], 
       Hue[0.6931865293047925], 
       Hue[0.7298091515363099], 
       Hue[0.7120194620012161], 
       Hue[0.25847763172539007`], 
       Hue[0.20973257280383545`], 
       Hue[0.1977125670302054], 
       Hue[0.2217075361333815], 
       Hue[0.5553148912322927], 
       Hue[0.5828446723003333], 
       Hue[0.583120789575437], 
       Hue[0.31832902835393095`], 
       Hue[0.30280976386414693`], 
       Hue[0.30720120216787317`], 
       Hue[0.48255816046477434`], 
       Hue[0.5030105546421659], 
       Hue[0.5098427066180773], 
       Hue[0.5022981137633066], 
       Hue[0.9744347524258661], 
       Hue[0.03330282770310494], 
       Hue[0.00017516631115055414`], 
       Hue[0.03718363020476689], 
       Hue[0.7186858046923251], 
       Hue[0.7270478632991085], 
       Hue[0.23026436627187988`], 
       Hue[0.19858990772751975`], 
       Hue[0.20576495973074102`], 
       Hue[0.5720717775928054], 
       Hue[0.5865750764940711], 
       Hue[0.5735802806674762], 
       Hue[0.3083086770694], 
       Hue[0.30249585101320436`], 
       Hue[0.31606712093873934`], 
       Hue[0.49445533659803], 
       Hue[0.5081300302277536], 
       Hue[0.5077732701661544], 
       Hue[0.46846857495517014`], 
       Hue[0.9991300271644434], 
       Hue[0.01174566946728356], 
       Hue[0.006970929547336413], 
       Hue[0.7283685353780949], 
       Hue[0.7167145442308477], 
       Hue[0.21414827460416594`], 
       Hue[0.19704824569516938`], 
       Hue[0.5807248537809969], 
       Hue[0.5845731877159915], 
       Hue[0.3037437105961115], 
       Hue[0.30563023301458875`], 
       Hue[0.5012032858348269], 
       Hue[0.5097537088254951], 
       Hue[0.9820139630997686], 
       Hue[0.04297430342782105], 
       Hue[0.00011792213267192153`], 
       Hue[0.7136444173203238], 
       Hue[0.7289975066952692], 
       Hue[0.20039368539034577`], 
       Hue[0.20296191466691813`], 
       Hue[0.5684618134682031], 
       Hue[0.5863513817137326], 
       Hue[0.31038249886690045`], 
       Hue[0.30206685970867236`], 
       Hue[0.507169096907712], 
       Hue[0.5086471272675339], 
       Hue[0.9932639287485192], 
       Hue[0.003546707232799262], 
       Hue[0.7303888963728427], 
       Hue[0.20596600810270016`], 
       Hue[0.19892543940865415`], 
       Hue[0.584488556873624], 
       Hue[0.5812866132816868], 
       Hue[0.3022204434504919], 
       Hue[0.5096858233424291], 
       Hue[0.024848903926887378`], 
       Hue[0.0013979520339281737`], 
       Hue[0.7228278835695641], 
       Hue[0.7242802250175319], 
       Hue[0.19743926211206747`], 
       Hue[0.5863323049245519], 
       Hue[0.30652653313576866`], 
       Hue[0.30325601643532085`], 
       Hue[0.5088775483342796], 
       Hue[0.5066694078031689], 
       Hue[0.4646256706184077], 
       Hue[0.9997349606408383], 
       Hue[0.005236448407879957], 
       Hue[0.7273237302131541], 
       Hue[0.19692407113940585`], 
       Hue[0.5851538714081065], 
       Hue[0.30434027333131985`], 
       Hue[0.5096162423181595], 
       Hue[0.0005303920020837682], 
       Hue[0.729661115513212], 
       Hue[0.20154113590531675`], 
       Hue[0.586063204964525], 
       Hue[0.30197806954419804`], 
       Hue[0.5089962479394333], 
       Hue[0.9952424615701849], 
       Hue[0.005147983189013328], 
       Hue[0.7302062262196445], 
       Hue[0.19825093064836288`], 
       Hue[0.5837261141399079], 
       Hue[0.3024721262564731], 
       Hue[0.5097948268985687], 
       Hue[0.0006417663275243846], 
       Hue[0.7208694612961528], 
       Hue[0.7257653344395588], 
       Hue[0.19793312833305524`], 
       Hue[0.5865116782225581], 
       Hue[0.3028348676430779], 
       Hue[0.5085304598927095], 
       Hue[0.9981780824848383], 
       Hue[0.7291968228562069], 
       Hue[0.19731136128242172`], 
       Hue[0.30323357300308523`], 
       Hue[0.5098291057280255], 
       Hue[0.], 
       Hue[0.7281258605723994], 
       Hue[0.19940999879545324`], 
       Hue[0.5865218383192659], 
       Hue[0.3022396416620994], 
       Hue[0.0022438227550333756`], 
       Hue[0.7303581547877092], 
       Hue[0.5851320901875532], 
       Hue[0.30205443937769283`], 
       Hue[0.5095160936253827], 
       Hue[0.002441684430235791], 
       Hue[0.1971077968091568], 
       Hue[0.5860376965674697], 
       Hue[0.50917134770177], 
       Hue[0.46267086489575343`], 
       Hue[0.9999066416272024], 
       Hue[0.1969143301513292], 
       Hue[0.5095241589999915], 
       Hue[0.0008474844192292719], 
       Hue[0.7299144159501334], 
       Hue[0.5858748368938598], 
       Hue[0.3019653323453908], 
       Hue[0.7300345459112496], 
       Hue[0.30263018576806844`], 
       Hue[0.5098264305004734], 
       Hue[0.00037214810347613314`], 
       Hue[0.19824112630039387`], 
       Hue[0.5865579174269794], 
       Hue[0.9986972936407681], 
       Hue[0.7288097123312463], 
       Hue[0.19716248711984577`], 
       Hue[0.5097991498627552], 
       Hue[0.000022229199721057746`], 
       Hue[0.5864512955682013], 
       Hue[0.30214278567179], 
       Hue[0.0028580024327217735`], 
       Hue[0.7304001344379754], 
       Hue[0.30212675113105414`], 
       Hue[0.5096085228148353], 
       Hue[0.001884009728560232], 
       Hue[0.19725326577945265`], 
       Hue[0.58619935583749], 
       Hue[0.9994760047573628], 
       Hue[0.1969687408152447], 
       Hue[0.5096927497272287], 
       Hue[0.00028725508583743453`], 
       Hue[0.5862220365567584], 
       Hue[0.302011932574461], 
       Hue[0.7303243031558699], 
       Hue[0.30233555637254844`], 
       Hue[0.5097479416983489], 
       Hue[0.0009837839584546648], 
       Hue[0.19766586043666273`], 
       Hue[0.5864364440341081], 
       Hue[0.7295299414015992], 
       Hue[0.197494759257395], 
       Hue[0.5098436119368327], 
       Hue[0.00005104596531685379], 
       Hue[0.5865630752083039], 
       Hue[0.302357355372642], 
       Hue[0.7302631036806362], 
       Hue[0.30200346449333215`], 
       Hue[0.1970027735536695], 
       Hue[0.46168582378114603`]}], {}}, {{{}, {}, 
     TagBox[
      {GrayLevel[0.5], AbsoluteThickness[1.6], Opacity[1.], 
       LineBox[CompressedData["
1:eJwt13lcjVsXB/AkV+ImRZSpDN2QTCmS9kGEylsUhZIGQ0SSZEhHKonKVSia
VJSIRJOGdUoqpbnOae50JqIoUyF5H3vdf1zfz2+ttfez99PTpe5wdKuztJSU
1CXmjz//3ez8tpbTbWXI/NXea4OEyKxTdetU0SF/vG2jhCyLjYh6qmJEPXez
hJhU8tKjVSz/mJ9iJiE7nAbyr6k4/bHaKksJKV6nmvUiat8fs4qtJGTx7NVp
X2YepPnaHRIiK/CN365xhOZTd0pI+6KL64JVPP6YbbhHQsJjp3Dm7jrxx1IH
7CVk8/gUg4Iozz+O89srIZkfXi//OPPUH3OuO0rIYTu79It7T9P6ICcJmVX1
UVst4Qxdz81ZQkJSFTUtNM7R/Svul5D10xMTu/f70HmVjM+V3FIotGTTeacO
SIjNOeGW4K/UbOWDEqKjqxVsc+M8nZfIePwHj4q5er7Us1wk5N3d/DGfeNRS
Vxm/tP1rY4HXBZp/YBw36X8BQSp+NF91SELOVN4s3v6cmn2S8XZ/vvTsXf50
f/GMl6yet+bjT+q4PMbjvh7zyY0KoPXFjN88fJ5/cfVFmj9nXOQ0cmhbB7VU
LOPoaab6aj6BNHdj7NUQ7tUz8xKdv4jxtivtmdkcarVWZn/aRhpf/fYG0ft0
Zzxm6MgyC+nLtH6AeV7R06xj0xOoWfsZwyGptO51V+h6L5jzujV704cMEbW9
HGPP1n+1fP2DqQ2Y87UIa3HZohFCz9d6n4Romcy+r1pKzd7D3I/syMNvJPtD
qc2Z+3O3bblmI3OVzl/A3O+enOEnYEkd94G5f9NJs2vn3qVm3WbeD/1jxn2X
v1LzFzHvz6R5V7Wtb/yL971bQqT9n5kVSKj5dsz71sdvOjxH7xqdH2YtIRUR
6g/6eNScVOb9zf6yvny7ZhjNw7dKyD1zl+48L2p7e3MJOS/79J9LKuF0v0km
EjLf+N/AdDfquHfMz0ud/9Hu1lLMxzE/T3NGaj3Q9rxO+98TCXm9Rm6cdSU1
J8lAQk6w3x4+P+cG7WetlJCSX4naDXXUaqOXSshRgwuhv+bdpPXLtCVkypm9
fRrnqfn68yXk4OD09FOLImg/T515Xz7fWD7zSiTtXzleQjKWnLixUUjN15KT
EDu3bQPH9G/R+q8yEvK4d3xO8Vtq+9E/xGTr20ADl/VR9PmnCsTkp8b+6LAo
avtHrWKS6Lx+OO8zNVuxUUy+CkZwxsdHU5uWiklE++l1GcMxdP3j98VkzTSb
xA6rWLp/7zti8m6n3ijZVGo1q0gxmdFzyjF1YRztdwoUk6MHdedKtVFzvjqK
SXHg3cbw0Xfo+lt2ismU5IkB85ZRs13NxYQj+STZGkQd93OVmCg6PU6+uyKe
7n+TgpjsuzDDRt+JWq1IRkxy44PHVIdSs4cGRcSp65DLoASdxheRDDtNLZPr
CXR9mVQRsba587ivP5HOz10hIh9bLeXiVe/S+UPzRCTATtZ52zpq1k9VEXnq
eFQ1M5xaTXdISOSPrPY/o3ePOjBXSO729XVq2VOznqQIicHxRP2OQGqpG5FC
4uI1to/VgvVXPIXkpW/zzr+8k2iutlBIdo8Kzsi6S80aryokny6yFA5WUatl
/CUkasFJLytmJtPzmtUpIGdvnlj8bxE12/2KgCx9OOGvabIpNL/Y1EVeab+0
r1xMzU7kdBH7J16552yo+W7JXSQ4s9OtK4VaSvlkF3nLSW29Z/aAnk+gQheJ
adz0ZEnYQ7p+zTI+WW79a6wwl5qdr8wnr1vS9oWLqFkPP3WS752Tpw0sT6Xz
FM90Est34oC8JmpOx4UOMvb3+d3GMx7Teu8TbSTi4A47rQ3UUgpL28icBi37
CUcw/93bSgzv8xxb86nZg46tJOf+jYws7TSa79nYQnq39eSZVFFzQj7ziFXy
zYrjf6fT3LyljkTZ+pruU6eWmu9XRwSKrpXWy6k55xfWkaPea6tX22J97rla
cmlrb93oVLTP1BqSP7S25bbpU/r8J9nlZK7Fh7cvLj+jecz0fKLqY6y//w7a
60QuUUiNuyyXhT7yOof8kN2mbSFA957MJDWcrOMdKzLo8zwMfkxOLz4/PCim
lpIO8yVV4ydO1GZl0f05uWXDi9WuzrVW6BDl55B9qCTT4xA6JjcXEkq9bHJv
oG2lAbx82mM29lLbG3OKYNbHe/Mcb2XT+x6r+gpOVq0kEV9y6HoTLtWBvHaG
+JXsc7qf9+11kBi8+MrPadSslUvrodb0n2a79Zgvb66HBRUTj8+9gfkxtUbo
LP14L10vl+a/rvHA859DZiITdGwHD8ZdlHyeZE/NSZzXBCs3tLNOBVKzmvOb
IKy4vIU0o9s7msG48K585ek8Wt8v3QYdauoZwyHU7ASjNvBgR+1anEAt9dS/
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
ARqYn+dsk1tF7sX/nV8TF67pebCiqrBf8Jr5XozXNPgoQFtkcOFBQeiy62M7
aX2uLxdOTt8zq2s32n8CFxzMF29v20vNninHfF8ujAji7UM/kuaCRndCf6Ub
1t//3AgNz95ynvuhlRobYbGp+57wh+j31xvh7Wn/KOMh7H+r0AhaPVZjeWZ8
ev65X+pBaXyfbPEPtMyJWpCB249nR3X9cZzjhSo4pJPbPMZEQH9fzjQvB05N
48NsM2r7j6xymOTa57PfHPOyJeUAd+dqvLTC/JZSOShNvurOtqdWy+K9gtzv
TmMHTmB9/d5XMBbkV4viqOPCvcvgwSaHuIJvWH+6rgR0tNQNyXfMb5eUQIE8
vxV+Yn/R8xKoqbedXCglpPULEkrgi61NyAs5tJ1HCRi6m58tm0Ftv2YKU3/L
0LpuA+ZfnV/C1/eqCpIbmCtOKYbw6DelUZHUcUZ/F8Oy/z3z2RaFuY90MRxL
N/vIuYP9f/e+gF4vdtXth+grRS9APEpyxaKImq909AU0znwyJr8XPbWqCDK2
GY8MNxJR18YXQqBJtv80Y2r7gFuFsHvdPNm7m6jVyLVCkF429u/MLeiS84Ww
RbFaucka61X3FsLbmu3zp7lSx7WpFYLqln0WidfRzxI54LPRP/aZhJp19RRA
nd2B3Yu70TKHAeacMFF5+J6aw7YDKL8zISyhDx22DmDiz+iAaz/QS+UBklMz
Xd3kxei7BVCj+HaVli41S6klH9TbNzcl+KPFtnkQVLTqsVUg1odb5MGnJK2A
0Zcx/9/6PChyl9c5dBXdqZUHTrJ1oUtvY/2hoVxIXmZjXJiGZkXngnbQ/syO
VqwPEj8HfT2/cJWlEvz9G5oDXAcV3Wgdas4j/xw4HvKIp6aHXnI2Bx6Km1Q1
DdBbDubAjPCFd3Q3YH/zuhyQ7uembtuJVv+RDRUp80qDfbH+4KFs2D2j+vuI
esxf7MkCeRX3jNxG9KQdWVCoNOnYiSasd9uSBRpjdr192465/uos+PhZwq1+
i/nEqVng+2r4afQwepCXCcke2kdWzn9DbbQ9E76WBwvczlOzuhwzIELGzmPr
nLc0X9/4FJQ6MuKli9F3AtNhlPd5y5XHumm9ldUTkLpv91ig+I7mSvZp4H7r
cbBiETV7+cAjyF8QKDvhyHvqOSdSYcJmdy1f+R5q71UPoW1hTf2pPPTjCQ+Y
3/9kjsiul3rG9BSwfaw7Yfowusv4PrD975xvS/lAnXcqGVLfTr8tb/qR2rcy
CQKj/e07tqAflieB09beuY8s0A2lSTAtLy/NbAdaoygJgkJ3lVxxQLdkJsEB
3ch+uVPoy3FJMMtv4sbR99AVHkkwvOLs37xk9GT3JGjuFdbde4B2PpoEV3c8
td3wBD3WJQl+z9963D8PvWdPErTVhsaMrEcbbE6C7IABx/pGdJxxEoSv2jMv
oQk9bJQEJne1n63tQBeTJHjuVfnqfDfacXkS3Fi4PNSi57/9LU2CY4IoS/WP
6JWLk0DT9HAn5wt6/IIkkBnRkHh1AO2tmQT8jFUu9j/QvXOTIM8lYdHiX//t
d3YS3Jw59uvv3+hqtST4P+bFNjM=
        "]]},
      Annotation[#, "Charting`Private`Tag$62298#1"]& ]}, {}}, 
   LineBox[{{0.5, -1}, {0.5, 1}}]},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImagePadding->All,
  Method->{
   "DefaultBoundaryStyle" -> Automatic, 
    "DefaultGraphicsInteraction" -> {
     "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
      "Effects" -> {
       "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
        "Droplines" -> {
         "freeformCursorMode" -> True, 
          "placement" -> {"x" -> "All", "y" -> "None"}}}}, "DefaultMeshStyle" -> 
    AbsolutePointSize[6], "ScalingFunctions" -> None, 
    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& )}},
  PlotRange->{{0, 1}, {-0.7304003209557905, 1.0000000002055411`}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{3.850892784053976*^9},
 CellLabel->
  "Out[163]=",ExpressionUUID->"4305931c-774c-4951-9293-3c780d5430c8"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"HopefullyFinalNet", " ", "=", " ", 
  RowBox[{"NetTrain", "[", 
   RowBox[{"InitialNet", ",", "\[IndentingNewLine]", " ", 
    RowBox[{"<|", 
     RowBox[{
      RowBox[{"\"\<xData\>\"", "->", "xData"}], ",", "\[IndentingNewLine]", 
      " ", 
      RowBox[{"\"\<Target\>\"", "->", " ", "Targets"}]}], 
     "\[IndentingNewLine]", "|>"}], ",", "\[IndentingNewLine]", 
    RowBox[{"LossFunction", "\[Rule]", 
     RowBox[{"{", 
      RowBox[{"\"\<physloss\>\"", ",", " ", "\"\<loss1\>\""}], "}"}]}], ",", 
    "\[IndentingNewLine]", 
    RowBox[{"MaxTrainingRounds", "\[Rule]", "1000"}]}], "\[IndentingNewLine]",
    "]"}]}]], "Input",
 CellChangeTimes->{{3.8508928261847763`*^9, 3.850892864518244*^9}, {
   3.8508929413378677`*^9, 3.850892957333281*^9}, {3.85089299455875*^9, 
   3.85089300330245*^9}, {3.8508930727892303`*^9, 3.850893077112507*^9}, {
   3.850893160094139*^9, 3.8508931638894053`*^9}, {3.8508932176829443`*^9, 
   3.850893239310709*^9}, 3.850893289610437*^9, {3.850893364571402*^9, 
   3.850893364824024*^9}, {3.8508934425476637`*^9, 3.850893497841346*^9}, {
   3.850894415723542*^9, 3.850894416245813*^9}, {3.850894472241757*^9, 
   3.850894480088656*^9}, {3.850895853778759*^9, 3.850895854945427*^9}, {
   3.850896761642303*^9, 3.85089676390479*^9}, {3.850896825387772*^9, 
   3.85089682560428*^9}, {3.8508969244464703`*^9, 3.8508969362149897`*^9}, {
   3.850897234921689*^9, 
   3.850897238934483*^9}},ExpressionUUID->"af537a7b-0aa8-4667-ba33-\
5d7315313dfa"],

Cell[BoxData[
 TagBox[
  TemplateBox[{
    RowBox[{
      StyleBox[
       TagBox["NetGraph", "SummaryHead"], "NonInterpretableSummary"], 
      StyleBox["[", "NonInterpretableSummary"], 
      DynamicModuleBox[{Typeset`open = False}, 
       PanelBox[
        PaneSelectorBox[{False -> GridBox[{{
              PaneBox[
               ButtonBox[
                DynamicBox[
                 FEPrivate`FrontEndResource[
                 "FEBitmaps", "SquarePlusIconMedium"]], 
                ButtonFunction :> (Typeset`open = True), Appearance -> None, 
                Evaluator -> Automatic, Method -> "Preemptive"], 
               Alignment -> {Center, Center}, ImageSize -> {Automatic, 24}], 
              StyleBox[
               GraphicsBox[{
                 Thickness[0.0149], {
                  RGBColor[0.729, 0.729, 0.729], 
                  Thickness[0.03], 
                  Opacity[1.], 
                  JoinForm[{"Miter", 10.}], 
                  
                  JoinedCurveBox[{{{1, 4, 3}}}, {{{18., 37.}, {18., 37.}, {
                   18.5, 27.5}, {35., 27.}}}, CurveClosed -> {0}], 
                  
                  JoinedCurveBox[{{{1, 4, 3}}}, {{{50., 37.}, {50., 37.}, {
                   49.5, 27.5}, {33., 27.}}}, CurveClosed -> {0}], 
                  
                  JoinedCurveBox[{{{1, 4, 3}}}, {{{18., 16.}, {18., 16.}, {
                   18.5, 25.5}, {35., 26.}}}, CurveClosed -> {0}]}, {
                  FaceForm[
                   RGBColor[0.631, 0.8160000000000001, 0.498]], 
                  
                  FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{15.5,
                    40.5}, {22.5, 40.5}, {22.5, 33.5}, {15.5, 33.5}}}]}, {
                  FaceForm[
                   RGBColor[0.40800000000000003`, 0.627, 0.196]], 
                  
                  FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                   0}, {0, 1, 0}, {0, 1, 0}}}, {{{23., 41.}, {15., 41.}, {15.,
                    33.}, {23., 33.}}, {{22., 34.}, {16., 34.}, {16., 40.}, {
                   22., 40.}}}]}, {
                  FaceForm[
                   RGBColor[0.38, 0.753, 0.89]], 
                  FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{15.5,
                    19.5}, {22.5, 19.5}, {22.5, 12.5}, {15.5, 12.5}}}]}, {
                  FaceForm[
                   RGBColor[0.24300000000000002`, 0.608, 0.71]], 
                  
                  FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                   0}, {0, 1, 0}, {0, 1, 0}}}, {{{23., 20.}, {15., 20.}, {15.,
                    12.}, {23., 12.}}, {{22., 13.}, {16., 13.}, {16., 19.}, {
                   22., 19.}}}]}, {
                  FaceForm[
                   RGBColor[0.584, 0.51, 0.8390000000000001]], 
                  
                  FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{30.5,
                    30.5}, {37.5, 30.5}, {37.5, 23.5}, {30.5, 23.5}}}]}, {
                  FaceForm[
                   RGBColor[0.4, 0.396, 0.659]], 
                  
                  FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                   0}, {0, 1, 0}, {0, 1, 0}}}, {{{38., 31.}, {30., 31.}, {30.,
                    23.}, {38., 23.}}, {{37., 24.}, {31., 24.}, {31., 30.}, {
                   37., 30.}}}]}, {
                  FaceForm[
                   RGBColor[0.8270000000000001, 0.41200000000000003`, 0.133]], 
                  
                  FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{45.5,
                    40.5}, {52.5, 40.5}, {52.5, 33.5}, {45.5, 33.5}}}]}, {
                  FaceForm[
                   RGBColor[0.647, 0.259, 0.08600000000000001]], 
                  
                  FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                   0}, {0, 1, 0}, {0, 1, 0}}}, {{{53., 41.}, {45., 41.}, {45.,
                    33.}, {53., 33.}}, {{52., 34.}, {46., 34.}, {46., 40.}, {
                   52., 40.}}}]}}, ImageMargins -> 0, 
                ImageSize -> {36, Automatic}, PlotRangePadding -> 0], 
               CacheGraphics -> False], 
              GridBox[{{
                 StyleBox[
                  
                  TemplateBox[{"\"Number of inputs\"", "\":\""}, 
                   "RowDefault"], "SummaryItemAnnotation"], 
                 StyleBox["2", "SummaryItem"]}, {
                 StyleBox[
                  
                  TemplateBox[{"\"Number of outputs\"", "\":\""}, 
                   "RowDefault"], "SummaryItemAnnotation"], 
                 StyleBox["2", "SummaryItem"]}}, BaselinePosition -> 
               Automatic, 
               GridBoxAlignment -> {
                "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
               GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
               GridBoxSpacings -> {
                "Columns" -> {{2}}, "Rows" -> {{Automatic}}}]}}, 
            GridBoxAlignment -> {"Rows" -> {{Top}}}, 
            GridBoxItemSize -> {
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
            GridFrameMargins -> {{0, 0}, {0, 0}}, BaselinePosition -> {1, 3}],
           True -> GridBox[{{
              PaneBox[
               ButtonBox[
                DynamicBox[
                 FEPrivate`FrontEndResource[
                 "FEBitmaps", "SquareMinusIconMedium"]], 
                ButtonFunction :> (Typeset`open = False), Appearance -> None, 
                Evaluator -> Automatic, Method -> "Preemptive"], 
               Alignment -> {Center, Center}, ImageSize -> {Automatic, 24}], 
              StyleBox[
               GraphicsBox[{
                 Thickness[0.0149], {
                  RGBColor[0.729, 0.729, 0.729], 
                  Thickness[0.03], 
                  Opacity[1.], 
                  JoinForm[{"Miter", 10.}], 
                  
                  JoinedCurveBox[{{{1, 4, 3}}}, {{{18., 37.}, {18., 37.}, {
                   18.5, 27.5}, {35., 27.}}}, CurveClosed -> {0}], 
                  
                  JoinedCurveBox[{{{1, 4, 3}}}, {{{50., 37.}, {50., 37.}, {
                   49.5, 27.5}, {33., 27.}}}, CurveClosed -> {0}], 
                  
                  JoinedCurveBox[{{{1, 4, 3}}}, {{{18., 16.}, {18., 16.}, {
                   18.5, 25.5}, {35., 26.}}}, CurveClosed -> {0}]}, {
                  FaceForm[
                   RGBColor[0.631, 0.8160000000000001, 0.498]], 
                  
                  FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{15.5,
                    40.5}, {22.5, 40.5}, {22.5, 33.5}, {15.5, 33.5}}}]}, {
                  FaceForm[
                   RGBColor[0.40800000000000003`, 0.627, 0.196]], 
                  
                  FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                   0}, {0, 1, 0}, {0, 1, 0}}}, {{{23., 41.}, {15., 41.}, {15.,
                    33.}, {23., 33.}}, {{22., 34.}, {16., 34.}, {16., 40.}, {
                   22., 40.}}}]}, {
                  FaceForm[
                   RGBColor[0.38, 0.753, 0.89]], 
                  
                  FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{15.5,
                    19.5}, {22.5, 19.5}, {22.5, 12.5}, {15.5, 12.5}}}]}, {
                  FaceForm[
                   RGBColor[0.24300000000000002`, 0.608, 0.71]], 
                  
                  FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                   0}, {0, 1, 0}, {0, 1, 0}}}, {{{23., 20.}, {15., 20.}, {15.,
                    12.}, {23., 12.}}, {{22., 13.}, {16., 13.}, {16., 19.}, {
                   22., 19.}}}]}, {
                  FaceForm[
                   RGBColor[0.584, 0.51, 0.8390000000000001]], 
                  
                  FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{30.5,
                    30.5}, {37.5, 30.5}, {37.5, 23.5}, {30.5, 23.5}}}]}, {
                  FaceForm[
                   RGBColor[0.4, 0.396, 0.659]], 
                  
                  FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                   0}, {0, 1, 0}, {0, 1, 0}}}, {{{38., 31.}, {30., 31.}, {30.,
                    23.}, {38., 23.}}, {{37., 24.}, {31., 24.}, {31., 30.}, {
                   37., 30.}}}]}, {
                  FaceForm[
                   RGBColor[0.8270000000000001, 0.41200000000000003`, 0.133]], 
                  
                  FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{45.5,
                    40.5}, {52.5, 40.5}, {52.5, 33.5}, {45.5, 33.5}}}]}, {
                  FaceForm[
                   RGBColor[0.647, 0.259, 0.08600000000000001]], 
                  
                  FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                   0}, {0, 1, 0}, {0, 1, 0}}}, {{{53., 41.}, {45., 41.}, {45.,
                    33.}, {53., 33.}}, {{52., 34.}, {46., 34.}, {46., 40.}, {
                   52., 40.}}}]}}, ImageMargins -> 0, 
                ImageSize -> {36, Automatic}, PlotRangePadding -> 0], 
               CacheGraphics -> False], 
              GridBox[{{
                 DynamicModuleBox[{
                  NeuralNetworks`Private`NetGraph`selection = None}, 
                  GridBox[{{
                    TagBox[
                    GraphicsBox[{{
                    StyleBox[{
                    InsetBox[
                    FormBox["\"Target\"", TraditionalForm], 
                    
                    Offset[{0, -7}, {
                    1.312509976554465, -1.3125100301442585`}], 
                    ImageScaled[{
                    Rational[1, 2], 1.}], Automatic, {1, 0}], 
                    InsetBox[
                    FormBox["\"loss1\"", TraditionalForm], 
                    NCache[
                    Offset[{0, 
                    Rational[-27, 2]}, {
                    2.3125100033493617`, -0.3125100569391559}], 
                    
                    Offset[{0, -13.5}, {
                    2.3125100033493617`, -0.3125100569391559}]], 
                    ImageScaled[{
                    Rational[1, 2], 1.}], Automatic, {1, 0}], 
                    InsetBox[
                    FormBox["\"xData\"", TraditionalForm], 
                    
                    Offset[{0, -7}, {
                    0.3125100033493622, -0.31251000334936196`}], 
                    ImageScaled[{
                    Rational[1, 2], 1.}], Automatic, {1, 0}], 
                    InsetBox[
                    FormBox["\"net\"", TraditionalForm], 
                    NCache[
                    Offset[{0, 
                    Rational[-31, 2]}, {
                    1.312510003349362, -0.31251003014425893`}], 
                    
                    Offset[{0, -15.5}, {
                    1.312510003349362, -0.31251003014425893`}]], 
                    ImageScaled[{
                    Rational[1, 2], 1.}], Automatic, {1, 0}], 
                    InsetBox[
                    FormBox["\"loss1\"", TraditionalForm], 
                    
                    Offset[{0, -7}, {
                    3.3125100033493613`, -0.312510083734053}], 
                    ImageScaled[{
                    Rational[1, 2], 1.}], Automatic, {1, 0}], 
                    InsetBox[
                    FormBox["\"physloss\"", TraditionalForm], 
                    NCache[
                    Offset[{0, 
                    Rational[-27, 2]}, {
                    0.3125100033493621, -1.9375300368429826`}], 
                    
                    Offset[{0, -13.5}, {
                    0.3125100033493621, -1.9375300368429826`}]], 
                    ImageScaled[{
                    Rational[1, 2], 1.}], Automatic, {1, 0}], 
                    InsetBox[
                    FormBox["\"physloss\"", TraditionalForm], 
                    
                    Offset[{0, -7}, {
                    1.3125100033493617`, -1.9375300636378796`}], 
                    ImageScaled[{
                    Rational[1, 2], 1.}], Automatic, {1, 0}]}, {
                    FontColor -> GrayLevel[0.5]}, StripOnInput -> False], 
                    StyleBox[{
                    InsetBox[
                    FormBox["\"1\"", TraditionalForm], 
                    
                    Offset[{-3.889087192318316, 3.8890874007337035`}, {
                    1.8625099912916583`, -0.762510044881452}], 
                    ImageScaled[{0.5, 0.415}], Automatic, {0.7071068001334007,
                     0.7071067622396938}], 
                    InsetBox[
                    FormBox["\"1\"", TraditionalForm], 
                    
                    Offset[{1.4737193332337026`*^-7, 5.499999999999997}, {
                    0.8625100033493621, -0.3125100180865553}], 
                    ImageScaled[{0.5, 0.415}], Automatic, {
                    0.9999999999999996, -2.67948969678855*^-8}], 
                    InsetBox[
                    FormBox["\"\[DoubleStruckCapitalR]\"", TraditionalForm], 
                    
                    Offset[{1.4737193393399298`*^-7, 5.499999999999999}, {
                    2.8625100033493616`, -0.31251007167634925`}], 
                    ImageScaled[{0.5, 0.415}], Automatic, {
                    0.9999999999999998, -2.6794897078907816`*^-8}], 
                    InsetBox[
                    FormBox["\"1\"", TraditionalForm], 
                    
                    Offset[{1.4737193332337026`*^-7, 5.499999999999997}, {
                    1.862510003349362, -0.3125100448814523}], 
                    ImageScaled[{0.5, 0.415}], Automatic, {
                    0.9999999999999996, -2.67948969678855*^-8}], 
                    InsetBox[
                    FormBox["\"1\"", TraditionalForm], 
                    
                    Offset[{1.4737193332337029`*^-7, 5.499999999999998}, {
                    0.862510003349362, -1.9375300515801759`}], 
                    ImageScaled[{0.5, 0.415}], Automatic, {
                    0.9999999999999997, -2.6794896967885506`*^-8}]}, {
                    FontColor -> GrayLevel[0.7], FontSize -> 8, FontWeight -> 
                    "Thin"}, StripOnInput -> False]}, {
                    GrayLevel[0.7], {
                    TagBox[
                    TooltipBox[
                    
                    LineBox[{{1.312509976554465, -1.3125100301442585`}, {
                    2.3125100033493617`, -0.3125100569391559}}], 
                    TagBox[
                    GridBox[{{
                    TemplateBox[{"\[ThinSpace]", "\" \"", "\"vector\"", 
                    StyleBox[
                    "\"(\[VeryThinSpace]size: 1\[VeryThinSpace])\"", 
                    GrayLevel[0.5], StripOnInput -> False]}, 
                    "RowWithSeparators"]}, {
                    StyleBox[
                    TemplateBox[{"\"Target\"", 
                    GraphicsBox[{{}, {
                    GrayLevel[0.7], {
                    
                    LineBox[{{-0.9999999999999997, 2.6794897029117842`*^-8}, {
                    0., 0.}}]}}, {
                    InsetBox[
                    GraphicsBox[
                    StyleBox[
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], {
                    GrayLevel[0.7]}, StripOnInput -> 
                    False]], {-0.4499999999999998, 
                    1.2057703663103027`*^-8}, {-0.25, 0}, 
                    Offset[8], {
                    0.9999999999999997, -2.6794897029117842`*^-8}]}, {
                    EdgeForm[
                    AbsoluteThickness[1]], FontSize -> 10, {{{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    DiskBox[{-0.9999999999999997, 2.6794897029117842`*^-8}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    InsetBox[
                    FormBox["\"\"", TraditionalForm], 
                    
                    Offset[{0, 0}, {-0.9999999999999997, 
                    2.6794897029117842`*^-8}]]}}, {{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    DiskBox[{0., 0.}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    InsetBox[
                    FormBox["\"[\"", TraditionalForm], 
                    Offset[{-5, 0}, {0., 0.}]]}}}}}, 
                    ImageSize -> {68.99999999999997, 15.000001473719337`}, 
                    AspectRatio -> Full, PlotRangePadding -> 0, 
                    ImagePadding -> {{7., 7.}, {10., 5.}}, 
                    ImageMargins -> {{0, 0}, {0, 0}}, 
                    BaseStyle -> {TooltipBoxOptions -> {
                    TooltipDelay -> 0.08}}], "\"Target\""}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Center}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"], 
                    TooltipStyle -> {
                    Background -> GrayLevel[0.937255], CellFrame -> 1, 
                    CellFrameColor -> GrayLevel[0.85]}], Annotation[#, 
                    Column[{
                    Row[{"vector", 
                    Style["(\[VeryThinSpace]size: 1\[VeryThinSpace])", 
                    GrayLevel[0.5]]}, " "], 
                    Style[
                    Row[{"Target", 
                    Graphics[{{}, {
                    GrayLevel[0.7], {
                    
                    Line[{{-0.9999999999999997, 2.6794897029117842`*^-8}, {0.,
                     0.}}]}}, {
                    Inset[
                    Graphics[
                    Style[
                    
                    Polygon[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], 
                    GrayLevel[0.7]]], {-0.4499999999999998, 
                    1.2057703663103027`*^-8}, {-0.25, 0}, 
                    Offset[8], {
                    0.9999999999999997, -2.6794897029117842`*^-8}]}, {
                    EdgeForm[
                    AbsoluteThickness[1]], FontSize -> 10, {{{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    Disk[{-0.9999999999999997, 2.6794897029117842`*^-8}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    Text["", 
                    
                    Offset[{0, 0}, {-0.9999999999999997, 
                    2.6794897029117842`*^-8}]]}}, {{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    Disk[{0., 0.}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    Text["[", 
                    Offset[{-5, 0}, {0., 0.}]]}}}}}, 
                    ImageSize -> {68.99999999999997, 15.000001473719337`}, 
                    AspectRatio -> Full, PlotRangePadding -> 0, 
                    ImagePadding -> {{7., 7.}, {10., 5.}}, 
                    ImageMargins -> {{0, 0}, {0, 0}}, 
                    BaseStyle -> {TooltipBoxOptions -> {
                    TooltipDelay -> 0.08}}], "Target"}], 
                    GrayLevel[0.5]]}, Center], "Tooltip"]& ], 
                    TagBox[
                    TooltipBox[
                    
                    LineBox[{{0.3125100033493622, -0.31251000334936196`}, {
                    1.312510003349362, -0.31251003014425893`}}], 
                    TagBox[
                    GridBox[{{
                    TemplateBox[{"\[ThinSpace]", "\" \"", "\"vector\"", 
                    StyleBox[
                    "\"(\[VeryThinSpace]size: 1\[VeryThinSpace])\"", 
                    GrayLevel[0.5], StripOnInput -> False]}, 
                    "RowWithSeparators"]}, {
                    StyleBox[
                    TemplateBox[{"\"xData\"", 
                    GraphicsBox[{{}, {
                    GrayLevel[0.7], {
                    
                    LineBox[{{-0.9999999999999997, 2.6794897029117842`*^-8}, {
                    0., 0.}}]}}, {
                    InsetBox[
                    GraphicsBox[
                    StyleBox[
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], {
                    GrayLevel[0.7]}, StripOnInput -> 
                    False]], {-0.4499999999999998, 
                    1.2057703663103027`*^-8}, {-0.25, 0}, 
                    Offset[8], {
                    0.9999999999999997, -2.6794897029117842`*^-8}]}, {
                    EdgeForm[
                    AbsoluteThickness[1]], FontSize -> 10, {{{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    DiskBox[{-0.9999999999999997, 2.6794897029117842`*^-8}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    InsetBox[
                    FormBox["\"\"", TraditionalForm], 
                    
                    Offset[{0, 0}, {-0.9999999999999997, 
                    2.6794897029117842`*^-8}]]}}, {{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    DiskBox[{0., 0.}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    InsetBox[
                    FormBox["\"[\"", TraditionalForm], 
                    Offset[{-5, 0}, {0., 0.}]]}}}}}, 
                    ImageSize -> {68.99999999999997, 15.000001473719337`}, 
                    AspectRatio -> Full, PlotRangePadding -> 0, 
                    ImagePadding -> {{7., 7.}, {10., 5.}}, 
                    ImageMargins -> {{0, 0}, {0, 0}}, 
                    BaseStyle -> {TooltipBoxOptions -> {
                    TooltipDelay -> 0.08}}], "\"Input\""}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Center}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"], 
                    TooltipStyle -> {
                    Background -> GrayLevel[0.937255], CellFrame -> 1, 
                    CellFrameColor -> GrayLevel[0.85]}], Annotation[#, 
                    Column[{
                    Row[{"vector", 
                    Style["(\[VeryThinSpace]size: 1\[VeryThinSpace])", 
                    GrayLevel[0.5]]}, " "], 
                    Style[
                    Row[{"xData", 
                    Graphics[{{}, {
                    GrayLevel[0.7], {
                    
                    Line[{{-0.9999999999999997, 2.6794897029117842`*^-8}, {0.,
                     0.}}]}}, {
                    Inset[
                    Graphics[
                    Style[
                    
                    Polygon[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], 
                    GrayLevel[0.7]]], {-0.4499999999999998, 
                    1.2057703663103027`*^-8}, {-0.25, 0}, 
                    Offset[8], {
                    0.9999999999999997, -2.6794897029117842`*^-8}]}, {
                    EdgeForm[
                    AbsoluteThickness[1]], FontSize -> 10, {{{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    Disk[{-0.9999999999999997, 2.6794897029117842`*^-8}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    Text["", 
                    
                    Offset[{0, 0}, {-0.9999999999999997, 
                    2.6794897029117842`*^-8}]]}}, {{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    Disk[{0., 0.}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    Text["[", 
                    Offset[{-5, 0}, {0., 0.}]]}}}}}, 
                    ImageSize -> {68.99999999999997, 15.000001473719337`}, 
                    AspectRatio -> Full, PlotRangePadding -> 0, 
                    ImagePadding -> {{7., 7.}, {10., 5.}}, 
                    ImageMargins -> {{0, 0}, {0, 0}}, 
                    BaseStyle -> {TooltipBoxOptions -> {
                    TooltipDelay -> 0.08}}], "Input"}], 
                    GrayLevel[0.5]]}, Center], "Tooltip"]& ], 
                    TagBox[
                    TooltipBox[
                    
                    LineBox[{{2.3125100033493617`, -0.3125100569391559}, {
                    3.3125100033493613`, -0.312510083734053}}], 
                    TagBox[
                    GridBox[{{"\"real\""}, {
                    StyleBox[
                    TemplateBox[{"\"Loss\"", 
                    GraphicsBox[{{}, {
                    GrayLevel[0.7], {
                    
                    LineBox[{{-0.9999999999999997, 2.6794897029117842`*^-8}, {
                    0., 0.}}]}}, {
                    InsetBox[
                    GraphicsBox[
                    StyleBox[
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], {
                    GrayLevel[0.7]}, StripOnInput -> 
                    False]], {-0.4499999999999998, 
                    1.2057703663103027`*^-8}, {-0.25, 0}, 
                    Offset[8], {
                    0.9999999999999997, -2.6794897029117842`*^-8}]}, {
                    EdgeForm[
                    AbsoluteThickness[1]], FontSize -> 10, {{{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    DiskBox[{-0.9999999999999997, 2.6794897029117842`*^-8}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    InsetBox[
                    FormBox["\"]\"", TraditionalForm], 
                    
                    Offset[{7, 0}, {-0.9999999999999997, 
                    2.6794897029117842`*^-8}]]}}, {{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    DiskBox[{0., 0.}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    InsetBox[
                    FormBox["\"\"", TraditionalForm], 
                    Offset[{0, 0}, {0., 0.}]]}}}}}, 
                    ImageSize -> {68.99999999999997, 15.000001473719337`}, 
                    AspectRatio -> Full, PlotRangePadding -> 0, 
                    ImagePadding -> {{7., 7.}, {10., 5.}}, 
                    ImageMargins -> {{0, 0}, {0, 0}}, 
                    BaseStyle -> {TooltipBoxOptions -> {
                    TooltipDelay -> 0.08}}], "\"loss1\""}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Center}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"], 
                    TooltipStyle -> {
                    Background -> GrayLevel[0.937255], CellFrame -> 1, 
                    CellFrameColor -> GrayLevel[0.85]}], Annotation[#, 
                    Column[{"real", 
                    Style[
                    Row[{"Loss", 
                    Graphics[{{}, {
                    GrayLevel[0.7], {
                    
                    Line[{{-0.9999999999999997, 2.6794897029117842`*^-8}, {0.,
                     0.}}]}}, {
                    Inset[
                    Graphics[
                    Style[
                    
                    Polygon[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], 
                    GrayLevel[0.7]]], {-0.4499999999999998, 
                    1.2057703663103027`*^-8}, {-0.25, 0}, 
                    Offset[8], {
                    0.9999999999999997, -2.6794897029117842`*^-8}]}, {
                    EdgeForm[
                    AbsoluteThickness[1]], FontSize -> 10, {{{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    Disk[{-0.9999999999999997, 2.6794897029117842`*^-8}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    Text["]", 
                    
                    Offset[{7, 0}, {-0.9999999999999997, 
                    2.6794897029117842`*^-8}]]}}, {{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    Disk[{0., 0.}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    Text["", 
                    Offset[{0, 0}, {0., 0.}]]}}}}}, 
                    ImageSize -> {68.99999999999997, 15.000001473719337`}, 
                    AspectRatio -> Full, PlotRangePadding -> 0, 
                    ImagePadding -> {{7., 7.}, {10., 5.}}, 
                    ImageMargins -> {{0, 0}, {0, 0}}, 
                    BaseStyle -> {TooltipBoxOptions -> {
                    TooltipDelay -> 0.08}}], "loss1"}], 
                    GrayLevel[0.5]]}, Center], "Tooltip"]& ], 
                    TagBox[
                    TooltipBox[
                    
                    LineBox[{{1.312510003349362, -0.31251003014425893`}, {
                    2.3125100033493617`, -0.3125100569391559}}], 
                    TagBox[
                    GridBox[{{
                    TemplateBox[{"\[ThinSpace]", "\" \"", "\"vector\"", 
                    StyleBox[
                    "\"(\[VeryThinSpace]size: 1\[VeryThinSpace])\"", 
                    GrayLevel[0.5], StripOnInput -> False]}, 
                    "RowWithSeparators"]}, {
                    StyleBox[
                    TemplateBox[{"\"Output\"", 
                    GraphicsBox[{{}, {
                    GrayLevel[0.7], {
                    
                    LineBox[{{-0.9999999999999997, 2.6794897029117842`*^-8}, {
                    0., 0.}}]}}, {
                    InsetBox[
                    GraphicsBox[
                    StyleBox[
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], {
                    GrayLevel[0.7]}, StripOnInput -> 
                    False]], {-0.4499999999999998, 
                    1.2057703663103027`*^-8}, {-0.25, 0}, 
                    Offset[8], {
                    0.9999999999999997, -2.6794897029117842`*^-8}]}, {
                    EdgeForm[
                    AbsoluteThickness[1]], FontSize -> 10, {{{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    DiskBox[{-0.9999999999999997, 2.6794897029117842`*^-8}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    InsetBox[
                    FormBox["\"]\"", TraditionalForm], 
                    
                    Offset[{7, 0}, {-0.9999999999999997, 
                    2.6794897029117842`*^-8}]]}}, {{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    DiskBox[{0., 0.}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    InsetBox[
                    FormBox["\"[\"", TraditionalForm], 
                    Offset[{-5, 0}, {0., 0.}]]}}}}}, 
                    ImageSize -> {68.99999999999997, 15.000001473719337`}, 
                    AspectRatio -> Full, PlotRangePadding -> 0, 
                    ImagePadding -> {{7., 7.}, {10., 5.}}, 
                    ImageMargins -> {{0, 0}, {0, 0}}, 
                    BaseStyle -> {TooltipBoxOptions -> {
                    TooltipDelay -> 0.08}}], "\"Input\""}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Center}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"], 
                    TooltipStyle -> {
                    Background -> GrayLevel[0.937255], CellFrame -> 1, 
                    CellFrameColor -> GrayLevel[0.85]}], Annotation[#, 
                    Column[{
                    Row[{"vector", 
                    Style["(\[VeryThinSpace]size: 1\[VeryThinSpace])", 
                    GrayLevel[0.5]]}, " "], 
                    Style[
                    Row[{"Output", 
                    Graphics[{{}, {
                    GrayLevel[0.7], {
                    
                    Line[{{-0.9999999999999997, 2.6794897029117842`*^-8}, {0.,
                     0.}}]}}, {
                    Inset[
                    Graphics[
                    Style[
                    
                    Polygon[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], 
                    GrayLevel[0.7]]], {-0.4499999999999998, 
                    1.2057703663103027`*^-8}, {-0.25, 0}, 
                    Offset[8], {
                    0.9999999999999997, -2.6794897029117842`*^-8}]}, {
                    EdgeForm[
                    AbsoluteThickness[1]], FontSize -> 10, {{{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    Disk[{-0.9999999999999997, 2.6794897029117842`*^-8}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    Text["]", 
                    
                    Offset[{7, 0}, {-0.9999999999999997, 
                    2.6794897029117842`*^-8}]]}}, {{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    Disk[{0., 0.}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    Text["[", 
                    Offset[{-5, 0}, {0., 0.}]]}}}}}, 
                    ImageSize -> {68.99999999999997, 15.000001473719337`}, 
                    AspectRatio -> Full, PlotRangePadding -> 0, 
                    ImagePadding -> {{7., 7.}, {10., 5.}}, 
                    ImageMargins -> {{0, 0}, {0, 0}}, 
                    BaseStyle -> {TooltipBoxOptions -> {
                    TooltipDelay -> 0.08}}], "Input"}], 
                    GrayLevel[0.5]]}, Center], "Tooltip"]& ], 
                    TagBox[
                    TooltipBox[
                    
                    LineBox[{{0.3125100033493621, -1.9375300368429826`}, {
                    1.3125100033493617`, -1.9375300636378796`}}], 
                    TagBox[
                    GridBox[{{
                    TemplateBox[{"\[ThinSpace]", "\" \"", "\"vector\"", 
                    StyleBox[
                    "\"(\[VeryThinSpace]size: 1\[VeryThinSpace])\"", 
                    GrayLevel[0.5], StripOnInput -> False]}, 
                    "RowWithSeparators"]}, {
                    StyleBox[
                    TemplateBox[{"\"Output\"", 
                    GraphicsBox[{{}, {
                    GrayLevel[0.7], {
                    
                    LineBox[{{-0.9999999999999997, 2.6794897029117842`*^-8}, {
                    0., 0.}}]}}, {
                    InsetBox[
                    GraphicsBox[
                    StyleBox[
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], {
                    GrayLevel[0.7]}, StripOnInput -> 
                    False]], {-0.4499999999999998, 
                    1.2057703663103027`*^-8}, {-0.25, 0}, 
                    Offset[8], {
                    0.9999999999999997, -2.6794897029117842`*^-8}]}, {
                    EdgeForm[
                    AbsoluteThickness[1]], FontSize -> 10, {{{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    DiskBox[{-0.9999999999999997, 2.6794897029117842`*^-8}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    InsetBox[
                    FormBox["\"]\"", TraditionalForm], 
                    
                    Offset[{7, 0}, {-0.9999999999999997, 
                    2.6794897029117842`*^-8}]]}}, {{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    DiskBox[{0., 0.}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    InsetBox[
                    FormBox["\"\"", TraditionalForm], 
                    Offset[{0, 0}, {0., 0.}]]}}}}}, 
                    ImageSize -> {68.99999999999997, 15.000001473719337`}, 
                    AspectRatio -> Full, PlotRangePadding -> 0, 
                    ImagePadding -> {{7., 7.}, {10., 5.}}, 
                    ImageMargins -> {{0, 0}, {0, 0}}, 
                    BaseStyle -> {TooltipBoxOptions -> {
                    TooltipDelay -> 0.08}}], "\"physloss\""}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Center}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"], 
                    TooltipStyle -> {
                    Background -> GrayLevel[0.937255], CellFrame -> 1, 
                    CellFrameColor -> GrayLevel[0.85]}], Annotation[#, 
                    Column[{
                    Row[{"vector", 
                    Style["(\[VeryThinSpace]size: 1\[VeryThinSpace])", 
                    GrayLevel[0.5]]}, " "], 
                    Style[
                    Row[{"Output", 
                    Graphics[{{}, {
                    GrayLevel[0.7], {
                    
                    Line[{{-0.9999999999999997, 2.6794897029117842`*^-8}, {0.,
                     0.}}]}}, {
                    Inset[
                    Graphics[
                    Style[
                    
                    Polygon[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], 
                    GrayLevel[0.7]]], {-0.4499999999999998, 
                    1.2057703663103027`*^-8}, {-0.25, 0}, 
                    Offset[8], {
                    0.9999999999999997, -2.6794897029117842`*^-8}]}, {
                    EdgeForm[
                    AbsoluteThickness[1]], FontSize -> 10, {{{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    Disk[{-0.9999999999999997, 2.6794897029117842`*^-8}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    Text["]", 
                    
                    Offset[{7, 0}, {-0.9999999999999997, 
                    2.6794897029117842`*^-8}]]}}, {{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    Disk[{0., 0.}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    Text["", 
                    Offset[{0, 0}, {0., 0.}]]}}}}}, 
                    ImageSize -> {68.99999999999997, 15.000001473719337`}, 
                    AspectRatio -> Full, PlotRangePadding -> 0, 
                    ImagePadding -> {{7., 7.}, {10., 5.}}, 
                    ImageMargins -> {{0, 0}, {0, 0}}, 
                    BaseStyle -> {TooltipBoxOptions -> {
                    TooltipDelay -> 0.08}}], "physloss"}], 
                    GrayLevel[0.5]]}, Center], "Tooltip"]& ]}}, {
                    TagBox[
                    TooltipBox[
                    InsetBox[
                    GraphicsBox[
                    StyleBox[
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], {
                    GrayLevel[0.7]}, StripOnInput -> False]], {
                    1.8625099912916583`, -0.762510044881452}, {-0.25, 0}, 
                    Offset[8], {1.0000000267948967`, 0.9999999732051026}], 
                    TagBox[
                    GridBox[{{
                    TemplateBox[{"\[ThinSpace]", "\" \"", "\"vector\"", 
                    StyleBox[
                    "\"(\[VeryThinSpace]size: 1\[VeryThinSpace])\"", 
                    GrayLevel[0.5], StripOnInput -> False]}, 
                    "RowWithSeparators"]}, {
                    StyleBox[
                    TemplateBox[{"\"Target\"", 
                    GraphicsBox[{{}, {
                    GrayLevel[0.7], {
                    
                    LineBox[{{-0.9999999999999997, 2.6794897029117842`*^-8}, {
                    0., 0.}}]}}, {
                    InsetBox[
                    GraphicsBox[
                    StyleBox[
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], {
                    GrayLevel[0.7]}, StripOnInput -> 
                    False]], {-0.4499999999999998, 
                    1.2057703663103027`*^-8}, {-0.25, 0}, 
                    Offset[8], {
                    0.9999999999999997, -2.6794897029117842`*^-8}]}, {
                    EdgeForm[
                    AbsoluteThickness[1]], FontSize -> 10, {{{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    DiskBox[{-0.9999999999999997, 2.6794897029117842`*^-8}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    InsetBox[
                    FormBox["\"\"", TraditionalForm], 
                    
                    Offset[{0, 0}, {-0.9999999999999997, 
                    2.6794897029117842`*^-8}]]}}, {{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    DiskBox[{0., 0.}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    InsetBox[
                    FormBox["\"[\"", TraditionalForm], 
                    Offset[{-5, 0}, {0., 0.}]]}}}}}, 
                    ImageSize -> {68.99999999999997, 15.000001473719337`}, 
                    AspectRatio -> Full, PlotRangePadding -> 0, 
                    ImagePadding -> {{7., 7.}, {10., 5.}}, 
                    ImageMargins -> {{0, 0}, {0, 0}}, 
                    BaseStyle -> {TooltipBoxOptions -> {
                    TooltipDelay -> 0.08}}], "\"Target\""}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Center}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"], 
                    TooltipStyle -> {
                    Background -> GrayLevel[0.937255], CellFrame -> 1, 
                    CellFrameColor -> GrayLevel[0.85]}], Annotation[#, 
                    Column[{
                    Row[{"vector", 
                    Style["(\[VeryThinSpace]size: 1\[VeryThinSpace])", 
                    GrayLevel[0.5]]}, " "], 
                    Style[
                    Row[{"Target", 
                    Graphics[{{}, {
                    GrayLevel[0.7], {
                    
                    Line[{{-0.9999999999999997, 2.6794897029117842`*^-8}, {0.,
                     0.}}]}}, {
                    Inset[
                    Graphics[
                    Style[
                    
                    Polygon[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], 
                    GrayLevel[0.7]]], {-0.4499999999999998, 
                    1.2057703663103027`*^-8}, {-0.25, 0}, 
                    Offset[8], {
                    0.9999999999999997, -2.6794897029117842`*^-8}]}, {
                    EdgeForm[
                    AbsoluteThickness[1]], FontSize -> 10, {{{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    Disk[{-0.9999999999999997, 2.6794897029117842`*^-8}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    Text["", 
                    
                    Offset[{0, 0}, {-0.9999999999999997, 
                    2.6794897029117842`*^-8}]]}}, {{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    Disk[{0., 0.}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    Text["[", 
                    Offset[{-5, 0}, {0., 0.}]]}}}}}, 
                    ImageSize -> {68.99999999999997, 15.000001473719337`}, 
                    AspectRatio -> Full, PlotRangePadding -> 0, 
                    ImagePadding -> {{7., 7.}, {10., 5.}}, 
                    ImageMargins -> {{0, 0}, {0, 0}}, 
                    BaseStyle -> {TooltipBoxOptions -> {
                    TooltipDelay -> 0.08}}], "Target"}], 
                    GrayLevel[0.5]]}, Center], "Tooltip"]& ], 
                    TagBox[
                    TooltipBox[
                    InsetBox[
                    GraphicsBox[
                    StyleBox[
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], {
                    GrayLevel[0.7]}, StripOnInput -> False]], {
                    0.8625100033493621, -0.3125100180865553}, {-0.25, 0}, 
                    Offset[8], {
                    0.9999999999999998, -2.6794896967885506`*^-8}], 
                    TagBox[
                    GridBox[{{
                    TemplateBox[{"\[ThinSpace]", "\" \"", "\"vector\"", 
                    StyleBox[
                    "\"(\[VeryThinSpace]size: 1\[VeryThinSpace])\"", 
                    GrayLevel[0.5], StripOnInput -> False]}, 
                    "RowWithSeparators"]}, {
                    StyleBox[
                    TemplateBox[{"\"xData\"", 
                    GraphicsBox[{{}, {
                    GrayLevel[0.7], {
                    
                    LineBox[{{-0.9999999999999997, 2.6794897029117842`*^-8}, {
                    0., 0.}}]}}, {
                    InsetBox[
                    GraphicsBox[
                    StyleBox[
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], {
                    GrayLevel[0.7]}, StripOnInput -> 
                    False]], {-0.4499999999999998, 
                    1.2057703663103027`*^-8}, {-0.25, 0}, 
                    Offset[8], {
                    0.9999999999999997, -2.6794897029117842`*^-8}]}, {
                    EdgeForm[
                    AbsoluteThickness[1]], FontSize -> 10, {{{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    DiskBox[{-0.9999999999999997, 2.6794897029117842`*^-8}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    InsetBox[
                    FormBox["\"\"", TraditionalForm], 
                    
                    Offset[{0, 0}, {-0.9999999999999997, 
                    2.6794897029117842`*^-8}]]}}, {{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    DiskBox[{0., 0.}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    InsetBox[
                    FormBox["\"[\"", TraditionalForm], 
                    Offset[{-5, 0}, {0., 0.}]]}}}}}, 
                    ImageSize -> {68.99999999999997, 15.000001473719337`}, 
                    AspectRatio -> Full, PlotRangePadding -> 0, 
                    ImagePadding -> {{7., 7.}, {10., 5.}}, 
                    ImageMargins -> {{0, 0}, {0, 0}}, 
                    BaseStyle -> {TooltipBoxOptions -> {
                    TooltipDelay -> 0.08}}], "\"Input\""}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Center}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"], 
                    TooltipStyle -> {
                    Background -> GrayLevel[0.937255], CellFrame -> 1, 
                    CellFrameColor -> GrayLevel[0.85]}], Annotation[#, 
                    Column[{
                    Row[{"vector", 
                    Style["(\[VeryThinSpace]size: 1\[VeryThinSpace])", 
                    GrayLevel[0.5]]}, " "], 
                    Style[
                    Row[{"xData", 
                    Graphics[{{}, {
                    GrayLevel[0.7], {
                    
                    Line[{{-0.9999999999999997, 2.6794897029117842`*^-8}, {0.,
                     0.}}]}}, {
                    Inset[
                    Graphics[
                    Style[
                    
                    Polygon[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], 
                    GrayLevel[0.7]]], {-0.4499999999999998, 
                    1.2057703663103027`*^-8}, {-0.25, 0}, 
                    Offset[8], {
                    0.9999999999999997, -2.6794897029117842`*^-8}]}, {
                    EdgeForm[
                    AbsoluteThickness[1]], FontSize -> 10, {{{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    Disk[{-0.9999999999999997, 2.6794897029117842`*^-8}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    Text["", 
                    
                    Offset[{0, 0}, {-0.9999999999999997, 
                    2.6794897029117842`*^-8}]]}}, {{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    Disk[{0., 0.}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    Text["[", 
                    Offset[{-5, 0}, {0., 0.}]]}}}}}, 
                    ImageSize -> {68.99999999999997, 15.000001473719337`}, 
                    AspectRatio -> Full, PlotRangePadding -> 0, 
                    ImagePadding -> {{7., 7.}, {10., 5.}}, 
                    ImageMargins -> {{0, 0}, {0, 0}}, 
                    BaseStyle -> {TooltipBoxOptions -> {
                    TooltipDelay -> 0.08}}], "Input"}], 
                    GrayLevel[0.5]]}, Center], "Tooltip"]& ], 
                    TagBox[
                    TooltipBox[
                    InsetBox[
                    GraphicsBox[
                    StyleBox[
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], {
                    GrayLevel[0.7]}, StripOnInput -> False]], {
                    2.8625100033493616`, -0.31251007167634925`}, {-0.25, 0}, 
                    Offset[8], {0.9999999999999996, -2.679489707890781*^-8}], 
                    
                    TagBox[
                    GridBox[{{"\"real\""}, {
                    StyleBox[
                    TemplateBox[{"\"Loss\"", 
                    GraphicsBox[{{}, {
                    GrayLevel[0.7], {
                    
                    LineBox[{{-0.9999999999999997, 2.6794897029117842`*^-8}, {
                    0., 0.}}]}}, {
                    InsetBox[
                    GraphicsBox[
                    StyleBox[
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], {
                    GrayLevel[0.7]}, StripOnInput -> 
                    False]], {-0.4499999999999998, 
                    1.2057703663103027`*^-8}, {-0.25, 0}, 
                    Offset[8], {
                    0.9999999999999997, -2.6794897029117842`*^-8}]}, {
                    EdgeForm[
                    AbsoluteThickness[1]], FontSize -> 10, {{{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    DiskBox[{-0.9999999999999997, 2.6794897029117842`*^-8}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    InsetBox[
                    FormBox["\"]\"", TraditionalForm], 
                    
                    Offset[{7, 0}, {-0.9999999999999997, 
                    2.6794897029117842`*^-8}]]}}, {{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    DiskBox[{0., 0.}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    InsetBox[
                    FormBox["\"\"", TraditionalForm], 
                    Offset[{0, 0}, {0., 0.}]]}}}}}, 
                    ImageSize -> {68.99999999999997, 15.000001473719337`}, 
                    AspectRatio -> Full, PlotRangePadding -> 0, 
                    ImagePadding -> {{7., 7.}, {10., 5.}}, 
                    ImageMargins -> {{0, 0}, {0, 0}}, 
                    BaseStyle -> {TooltipBoxOptions -> {
                    TooltipDelay -> 0.08}}], "\"loss1\""}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Center}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"], 
                    TooltipStyle -> {
                    Background -> GrayLevel[0.937255], CellFrame -> 1, 
                    CellFrameColor -> GrayLevel[0.85]}], Annotation[#, 
                    Column[{"real", 
                    Style[
                    Row[{"Loss", 
                    Graphics[{{}, {
                    GrayLevel[0.7], {
                    
                    Line[{{-0.9999999999999997, 2.6794897029117842`*^-8}, {0.,
                     0.}}]}}, {
                    Inset[
                    Graphics[
                    Style[
                    
                    Polygon[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], 
                    GrayLevel[0.7]]], {-0.4499999999999998, 
                    1.2057703663103027`*^-8}, {-0.25, 0}, 
                    Offset[8], {
                    0.9999999999999997, -2.6794897029117842`*^-8}]}, {
                    EdgeForm[
                    AbsoluteThickness[1]], FontSize -> 10, {{{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    Disk[{-0.9999999999999997, 2.6794897029117842`*^-8}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    Text["]", 
                    
                    Offset[{7, 0}, {-0.9999999999999997, 
                    2.6794897029117842`*^-8}]]}}, {{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    Disk[{0., 0.}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    Text["", 
                    Offset[{0, 0}, {0., 0.}]]}}}}}, 
                    ImageSize -> {68.99999999999997, 15.000001473719337`}, 
                    AspectRatio -> Full, PlotRangePadding -> 0, 
                    ImagePadding -> {{7., 7.}, {10., 5.}}, 
                    ImageMargins -> {{0, 0}, {0, 0}}, 
                    BaseStyle -> {TooltipBoxOptions -> {
                    TooltipDelay -> 0.08}}], "loss1"}], 
                    GrayLevel[0.5]]}, Center], "Tooltip"]& ], 
                    TagBox[
                    TooltipBox[
                    InsetBox[
                    GraphicsBox[
                    StyleBox[
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], {
                    GrayLevel[0.7]}, StripOnInput -> False]], {
                    1.862510003349362, -0.3125100448814523}, {-0.25, 0}, 
                    Offset[8], {
                    0.9999999999999998, -2.6794896967885506`*^-8}], 
                    TagBox[
                    GridBox[{{
                    TemplateBox[{"\[ThinSpace]", "\" \"", "\"vector\"", 
                    StyleBox[
                    "\"(\[VeryThinSpace]size: 1\[VeryThinSpace])\"", 
                    GrayLevel[0.5], StripOnInput -> False]}, 
                    "RowWithSeparators"]}, {
                    StyleBox[
                    TemplateBox[{"\"Output\"", 
                    GraphicsBox[{{}, {
                    GrayLevel[0.7], {
                    
                    LineBox[{{-0.9999999999999997, 2.6794897029117842`*^-8}, {
                    0., 0.}}]}}, {
                    InsetBox[
                    GraphicsBox[
                    StyleBox[
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], {
                    GrayLevel[0.7]}, StripOnInput -> 
                    False]], {-0.4499999999999998, 
                    1.2057703663103027`*^-8}, {-0.25, 0}, 
                    Offset[8], {
                    0.9999999999999997, -2.6794897029117842`*^-8}]}, {
                    EdgeForm[
                    AbsoluteThickness[1]], FontSize -> 10, {{{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    DiskBox[{-0.9999999999999997, 2.6794897029117842`*^-8}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    InsetBox[
                    FormBox["\"]\"", TraditionalForm], 
                    Offset[{7, 0}, {-0.9999999999999997, 
                    2.6794897029117842`*^-8}]]}}, {{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    DiskBox[{0., 0.}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    InsetBox[
                    FormBox["\"[\"", TraditionalForm], 
                    Offset[{-5, 0}, {0., 0.}]]}}}}}, 
                    ImageSize -> {68.99999999999997, 15.000001473719337`}, 
                    AspectRatio -> Full, PlotRangePadding -> 0, 
                    ImagePadding -> {{7., 7.}, {10., 5.}}, 
                    ImageMargins -> {{0, 0}, {0, 0}}, 
                    BaseStyle -> {TooltipBoxOptions -> {
                    TooltipDelay -> 0.08}}], "\"Input\""}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Center}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"], 
                    TooltipStyle -> {
                    Background -> GrayLevel[0.937255], CellFrame -> 1, 
                    CellFrameColor -> GrayLevel[0.85]}], Annotation[#, 
                    Column[{
                    Row[{"vector", 
                    Style["(\[VeryThinSpace]size: 1\[VeryThinSpace])", 
                    GrayLevel[0.5]]}, " "], 
                    Style[
                    Row[{"Output", 
                    Graphics[{{}, {
                    GrayLevel[0.7], {
                    
                    Line[{{-0.9999999999999997, 2.6794897029117842`*^-8}, {0.,
                     0.}}]}}, {
                    Inset[
                    Graphics[
                    Style[
                    
                    Polygon[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], 
                    GrayLevel[0.7]]], {-0.4499999999999998, 
                    1.2057703663103027`*^-8}, {-0.25, 0}, 
                    Offset[8], {
                    0.9999999999999997, -2.6794897029117842`*^-8}]}, {
                    EdgeForm[
                    AbsoluteThickness[1]], FontSize -> 10, {{{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    Disk[{-0.9999999999999997, 2.6794897029117842`*^-8}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    Text["]", 
                    
                    Offset[{7, 0}, {-0.9999999999999997, 
                    2.6794897029117842`*^-8}]]}}, {{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    Disk[{0., 0.}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    Text["[", 
                    Offset[{-5, 0}, {0., 0.}]]}}}}}, 
                    ImageSize -> {68.99999999999997, 15.000001473719337`}, 
                    AspectRatio -> Full, PlotRangePadding -> 0, 
                    ImagePadding -> {{7., 7.}, {10., 5.}}, 
                    ImageMargins -> {{0, 0}, {0, 0}}, 
                    BaseStyle -> {TooltipBoxOptions -> {
                    TooltipDelay -> 0.08}}], "Input"}], 
                    GrayLevel[0.5]]}, Center], "Tooltip"]& ], 
                    TagBox[
                    TooltipBox[
                    InsetBox[
                    GraphicsBox[
                    StyleBox[
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], {
                    GrayLevel[0.7]}, StripOnInput -> False]], {
                    0.862510003349362, -1.9375300515801759`}, {-0.25, 0}, 
                    Offset[8], {
                    0.9999999999999997, -2.6794896967885506`*^-8}], 
                    TagBox[
                    GridBox[{{
                    TemplateBox[{"\[ThinSpace]", "\" \"", "\"vector\"", 
                    StyleBox[
                    "\"(\[VeryThinSpace]size: 1\[VeryThinSpace])\"", 
                    GrayLevel[0.5], StripOnInput -> False]}, 
                    "RowWithSeparators"]}, {
                    StyleBox[
                    TemplateBox[{"\"Output\"", 
                    GraphicsBox[{{}, {
                    GrayLevel[0.7], {
                    
                    LineBox[{{-0.9999999999999997, 2.6794897029117842`*^-8}, {
                    0., 0.}}]}}, {
                    InsetBox[
                    GraphicsBox[
                    StyleBox[
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], {
                    GrayLevel[0.7]}, StripOnInput -> 
                    False]], {-0.4499999999999998, 
                    1.2057703663103027`*^-8}, {-0.25, 0}, 
                    Offset[8], {
                    0.9999999999999997, -2.6794897029117842`*^-8}]}, {
                    EdgeForm[
                    AbsoluteThickness[1]], FontSize -> 10, {{{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    DiskBox[{-0.9999999999999997, 2.6794897029117842`*^-8}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    InsetBox[
                    FormBox["\"]\"", TraditionalForm], 
                    
                    Offset[{7, 0}, {-0.9999999999999997, 
                    2.6794897029117842`*^-8}]]}}, {{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    DiskBox[{0., 0.}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    InsetBox[
                    FormBox["\"\"", TraditionalForm], 
                    Offset[{0, 0}, {0., 0.}]]}}}}}, 
                    ImageSize -> {68.99999999999997, 15.000001473719337`}, 
                    AspectRatio -> Full, PlotRangePadding -> 0, 
                    ImagePadding -> {{7., 7.}, {10., 5.}}, 
                    ImageMargins -> {{0, 0}, {0, 0}}, 
                    BaseStyle -> {TooltipBoxOptions -> {
                    TooltipDelay -> 0.08}}], "\"physloss\""}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Center}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"], 
                    TooltipStyle -> {
                    Background -> GrayLevel[0.937255], CellFrame -> 1, 
                    CellFrameColor -> GrayLevel[0.85]}], Annotation[#, 
                    Column[{
                    Row[{"vector", 
                    Style["(\[VeryThinSpace]size: 1\[VeryThinSpace])", 
                    GrayLevel[0.5]]}, " "], 
                    Style[
                    Row[{"Output", 
                    Graphics[{{}, {
                    GrayLevel[0.7], {
                    
                    Line[{{-0.9999999999999997, 2.6794897029117842`*^-8}, {0.,
                     0.}}]}}, {
                    Inset[
                    Graphics[
                    Style[
                    
                    Polygon[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], 
                    GrayLevel[0.7]]], {-0.4499999999999998, 
                    1.2057703663103027`*^-8}, {-0.25, 0}, 
                    Offset[8], {
                    0.9999999999999997, -2.6794897029117842`*^-8}]}, {
                    EdgeForm[
                    AbsoluteThickness[1]], FontSize -> 10, {{{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    Disk[{-0.9999999999999997, 2.6794897029117842`*^-8}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    Text["]", 
                    
                    Offset[{7, 0}, {-0.9999999999999997, 
                    2.6794897029117842`*^-8}]]}}, {{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    Disk[{0., 0.}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    Text["", 
                    Offset[{0, 0}, {0., 0.}]]}}}}}, 
                    ImageSize -> {68.99999999999997, 15.000001473719337`}, 
                    AspectRatio -> Full, PlotRangePadding -> 0, 
                    ImagePadding -> {{7., 7.}, {10., 5.}}, 
                    ImageMargins -> {{0, 0}, {0, 0}}, 
                    BaseStyle -> {TooltipBoxOptions -> {
                    TooltipDelay -> 0.08}}], "physloss"}], 
                    GrayLevel[0.5]]}, Center], "Tooltip"]& ]}, {
                    EdgeForm[
                    AbsoluteThickness[1]], FontSize -> 10, {
                    TagBox[
                    TagBox[
                    TooltipBox[{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    DiskBox[{1.312509976554465, -1.3125100301442585`}, 
                    Offset[{2, 2}]]}, 
                    TagBox[
                    GridBox[{{
                    StyleBox["\"Target\"", Bold, StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"], 
                    TooltipStyle -> {
                    Background -> GrayLevel[0.937255], CellFrame -> 1, 
                    CellFrameColor -> GrayLevel[0.85]}], Annotation[#, 
                    Column[{
                    Style["Target", Bold]}], "Tooltip"]& ], 
                    
                    EventHandlerTag[{
                    "MouseClicked" :> (
                    NeuralNetworks`Private`NetGraph`selection = 1), 
                    PassEventsUp -> False, Method -> "Preemptive", 
                    PassEventsDown -> Automatic}]], 
                    TagBox[
                    TagBox[
                    TooltipBox[{
                    FaceForm[
                    RGBColor[
                    0.7226666666666666, 0.6733333333333333, 
                    0.8926666666666666]], 
                    EdgeForm[
                    RGBColor[0.584, 0.51, 0.839]], 
                    DiskBox[{2.3125100033493617`, -0.3125100569391559}, 
                    Offset[11.666666666666668`]], 
                    InsetBox[
                    BoxData[
                    FormBox[
                    StyleBox["\"MS\"", 
                    GrayLevel[0.33], Bold, 10, StripOnInput -> False], 
                    TraditionalForm]], {
                    2.3125100033493617`, -0.3125100569391559}]}, 
                    TagBox[
                    GridBox[{{
                    StyleBox["\"loss1\"", Bold, StripOnInput -> False]}, {
                    StyleBox[
                    "MeanSquaredLossLayer", FontFamily -> "Source Code Pro", 
                    ShowStringCharacters -> True, StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"], 
                    TooltipStyle -> {
                    Background -> GrayLevel[0.937255], CellFrame -> 1, 
                    CellFrameColor -> GrayLevel[0.85]}], Annotation[#, 
                    Column[{
                    Style["loss1", Bold], 
                    Style[
                    MeanSquaredLossLayer, FontFamily -> "Source Code Pro", 
                    ShowStringCharacters -> True]}], "Tooltip"]& ], 
                    
                    EventHandlerTag[{
                    "MouseClicked" :> (
                    NeuralNetworks`Private`NetGraph`selection = 2), 
                    PassEventsUp -> False, Method -> "Preemptive", 
                    PassEventsDown -> Automatic}]], 
                    TagBox[
                    TagBox[
                    TooltipBox[{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    DiskBox[{0.3125100033493622, -0.31251000334936196`}, 
                    Offset[{2, 2}]]}, 
                    TagBox[
                    GridBox[{{
                    StyleBox["\"xData\"", Bold, StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"], 
                    TooltipStyle -> {
                    Background -> GrayLevel[0.937255], CellFrame -> 1, 
                    CellFrameColor -> GrayLevel[0.85]}], Annotation[#, 
                    Column[{
                    Style["xData", Bold]}], "Tooltip"]& ], 
                    
                    EventHandlerTag[{
                    "MouseClicked" :> (
                    NeuralNetworks`Private`NetGraph`selection = 3), 
                    PassEventsUp -> False, Method -> "Preemptive", 
                    PassEventsDown -> Automatic}]], 
                    TagBox[
                    TagBox[
                    TooltipBox[{
                    FaceForm[
                    RGBColor[
                    0.7999999999999999, 0.7999999999999999, 
                    0.7999999999999999]], 
                    EdgeForm[
                    GrayLevel[0.7]], {
                    FaceForm[
                    RGBColor[0.5664, 0.5664, 0.5664]], 
                    EdgeForm[
                    RGBColor[0.5664, 0.5664, 0.5664]], 
                    RectangleBox[
                    NCache[
                    Offset[{
                    Rational[-25, 2], 
                    Rational[-25, 2]}, {
                    1.312510003349362, -0.31251003014425893`}], 
                    
                    Offset[{-12.5, -12.5}, {
                    1.312510003349362, -0.31251003014425893`}]], 
                    NCache[
                    Offset[{
                    Rational[25, 2], 
                    Rational[25, 2]}, {
                    1.312510003349362, -0.31251003014425893`}], 
                    
                    Offset[{12.5, 12.5}, {
                    1.312510003349362, -0.31251003014425893`}]]]}, {
                    RectangleBox[
                    NCache[
                    Offset[{
                    Rational[-21, 2], 
                    Rational[-21, 2]}, {
                    1.312510003349362, -0.31251003014425893`}], 
                    
                    Offset[{-10.5, -10.5}, {
                    1.312510003349362, -0.31251003014425893`}]], 
                    NCache[
                    Offset[{
                    Rational[21, 2], 
                    Rational[21, 2]}, {
                    1.312510003349362, -0.31251003014425893`}], 
                    Offset[{10.5, 10.5}, {
                    1.312510003349362, -0.31251003014425893`}]]]}, 
                    InsetBox[
                    GraphicsBox[{
                    Thickness[0.014925373134328358`], {
                    GrayLevel[0.5], 
                    Thickness[0.018686567164179105`], 
                    Opacity[1.], 
                    JoinForm[{"Miter", 10.}], 
                    
                    JoinedCurveBox[{{{0, 2, 0}}}, {{{23., 91.5}, {30., 
                    91.5}}}, CurveClosed -> {0}]}, {
                    GrayLevel[0.5], 
                    Thickness[0.018686567164179105`], 
                    Opacity[1.], 
                    JoinForm[{"Miter", 10.}], 
                    
                    JoinedCurveBox[{{{0, 2, 0}}}, {{{37., 91.5}, {44., 
                    91.5}}}, CurveClosed -> {0}]}, {
                    FaceForm[{
                    RGBColor[0.631, 0.8160000000000001, 0.498], 
                    Opacity[1.]}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
                    15.5, 103.5}, {23.5, 103.5}, {23.5, 79.5}, {15.5, 
                    79.5}}}]}, {
                    FaceForm[{
                    RGBColor[0.40800000000000003`, 0.627, 0.196], 
                    Opacity[1.]}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2,
                     0}, {0, 1, 0}, {0, 1, 0}}}, {{{24., 104.}, {15., 104.}, {
                    15., 79.}, {24., 79.}}, {{23., 80.}, {16., 80.}, {16., 
                    103.}, {23., 103.}}}]}, {
                    FaceForm[{
                    RGBColor[0.38, 0.753, 0.89], 
                    Opacity[1.]}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
                    29.5, 103.5}, {37.5, 103.5}, {37.5, 79.5}, {29.5, 
                    79.5}}}]}, {
                    FaceForm[{
                    RGBColor[0.24300000000000002`, 0.608, 0.71], 
                    Opacity[1.]}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2,
                     0}, {0, 1, 0}, {0, 1, 0}}}, {{{38., 104.}, {29., 104.}, {
                    29., 79.}, {38., 79.}}, {{37., 80.}, {30., 80.}, {30., 
                    103.}, {37., 103.}}}]}, {
                    FaceForm[{
                    RGBColor[0.584, 0.51, 0.8390000000000001], 
                    Opacity[1.]}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
                    43.5, 103.5}, {51.5, 103.5}, {51.5, 79.5}, {43.5, 
                    79.5}}}]}, {
                    FaceForm[{
                    RGBColor[0.4, 0.396, 0.659], 
                    Opacity[1.]}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2,
                     0}, {0, 1, 0}, {0, 1, 0}}}, {{{52., 104.}, {43., 104.}, {
                    43., 79.}, {52., 79.}}, {{51., 80.}, {44., 80.}, {44., 
                    103.}, {51., 103.}}}]}}, PlotRange -> All, AspectRatio -> 
                    0.7, PlotRangePadding -> 1, ImagePadding -> 0, ImageSize -> 
                    16, ImageMargins -> 0.], {
                    1.312510003349362, -0.31251003014425893`}]}, 
                    TagBox[
                    GridBox[{{
                    StyleBox["\"net\"", Bold, StripOnInput -> False]}, {
                    StyleBox[
                    "NetChain", FontFamily -> "Source Code Pro", 
                    ShowStringCharacters -> True, StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"], 
                    TooltipStyle -> {
                    Background -> GrayLevel[0.937255], CellFrame -> 1, 
                    CellFrameColor -> GrayLevel[0.85]}], Annotation[#, 
                    Column[{
                    Style["net", Bold], 
                    Style[
                    NetChain, FontFamily -> "Source Code Pro", 
                    ShowStringCharacters -> True]}], "Tooltip"]& ], 
                    
                    EventHandlerTag[{
                    "MouseClicked" :> (
                    NeuralNetworks`Private`NetGraph`selection = 4), 
                    PassEventsUp -> False, Method -> "Preemptive", 
                    PassEventsDown -> Automatic}]], 
                    TagBox[
                    TagBox[
                    TooltipBox[{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    DiskBox[{3.3125100033493613`, -0.312510083734053}, 
                    Offset[{2, 2}]]}, 
                    TagBox[
                    GridBox[{{
                    StyleBox["\"loss1\"", Bold, StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"], 
                    TooltipStyle -> {
                    Background -> GrayLevel[0.937255], CellFrame -> 1, 
                    CellFrameColor -> GrayLevel[0.85]}], Annotation[#, 
                    Column[{
                    Style["loss1", Bold]}], "Tooltip"]& ], 
                    
                    EventHandlerTag[{
                    "MouseClicked" :> (
                    NeuralNetworks`Private`NetGraph`selection = 5), 
                    PassEventsUp -> False, Method -> "Preemptive", 
                    PassEventsDown -> Automatic}]], 
                    TagBox[
                    TagBox[
                    TooltipBox[{
                    FaceForm[
                    RGBColor[
                    0.7999999999999999, 0.7999999999999999, 
                    0.7999999999999999]], 
                    EdgeForm[
                    GrayLevel[0.7]], 
                    RectangleBox[
                    NCache[
                    Offset[{
                    Rational[-21, 2], 
                    Rational[-21, 2]}, {
                    0.3125100033493621, -1.9375300368429826`}], 
                    
                    Offset[{-10.5, -10.5}, {
                    0.3125100033493621, -1.9375300368429826`}]], 
                    NCache[
                    Offset[{
                    Rational[21, 2], 
                    Rational[21, 2]}, {
                    0.3125100033493621, -1.9375300368429826`}], 
                    
                    Offset[{10.5, 10.5}, {
                    0.3125100033493621, -1.9375300368429826`}]]], 
                    InsetBox[
                    BoxData[
                    FormBox[
                    StyleBox["\"A\"", Bold, 12, StripOnInput -> False], 
                    TraditionalForm]], {
                    0.3125100033493621, -1.9375300368429826`}]}, 
                    TagBox[
                    GridBox[{{
                    StyleBox["\"physloss\"", Bold, StripOnInput -> False]}, {
                    StyleBox[
                    "NetArrayLayer", FontFamily -> "Source Code Pro", 
                    ShowStringCharacters -> True, StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"], 
                    TooltipStyle -> {
                    Background -> GrayLevel[0.937255], CellFrame -> 1, 
                    CellFrameColor -> GrayLevel[0.85]}], Annotation[#, 
                    Column[{
                    Style["physloss", Bold], 
                    Style[
                    NetArrayLayer, FontFamily -> "Source Code Pro", 
                    ShowStringCharacters -> True]}], "Tooltip"]& ], 
                    
                    EventHandlerTag[{
                    "MouseClicked" :> (
                    NeuralNetworks`Private`NetGraph`selection = 6), 
                    PassEventsUp -> False, Method -> "Preemptive", 
                    PassEventsDown -> Automatic}]], 
                    TagBox[
                    TagBox[
                    TooltipBox[{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    DiskBox[{1.3125100033493617`, -1.9375300636378796`}, 
                    Offset[{2, 2}]]}, 
                    TagBox[
                    GridBox[{{
                    StyleBox["\"physloss\"", Bold, StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"], 
                    TooltipStyle -> {
                    Background -> GrayLevel[0.937255], CellFrame -> 1, 
                    CellFrameColor -> GrayLevel[0.85]}], Annotation[#, 
                    Column[{
                    Style["physloss", Bold]}], "Tooltip"]& ], 
                    
                    EventHandlerTag[{
                    "MouseClicked" :> (
                    NeuralNetworks`Private`NetGraph`selection = 7), 
                    PassEventsUp -> False, Method -> "Preemptive", 
                    PassEventsDown -> Automatic}]]}}, {
                    FaceForm[None], 
                    EdgeForm[{
                    Dashing[{0, Small}], 
                    GrayLevel[0.5], 
                    Thickness[Large]}], 
                    PolygonBox[
                    Dynamic[
                    If[
                    Not[
                    IntegerQ[NeuralNetworks`Private`NetGraph`selection]], {}, 
                    
                    GeneralUtilities`Graphics`PackagePrivate`makeOffsetSquare[
                    
                    
                    Part[{{1.312509976554465, -1.3125100301442585`}, {
                    2.3125100033493617`, -0.3125100569391559}, {
                    0.3125100033493622, -0.31251000334936196`}, {
                    1.312510003349362, -0.31251003014425893`}, {
                    3.3125100033493613`, -0.312510083734053}, {
                    0.3125100033493621, -1.9375300368429826`}, {
                    1.3125100033493617`, -1.9375300636378796`}}, 
                    NeuralNetworks`Private`NetGraph`selection], 
                    3 + {0.5, 0.5} 
                    Part[{8, 21, 8, 25, 8, 21, 8}, 
                    NeuralNetworks`Private`NetGraph`selection], {-0.5, 
                    0.5}]]]]}}, 
                    ImageSize -> {226.49999999999994`, 137.37610331586848`}, 
                    AspectRatio -> Full, PlotRangePadding -> 0, 
                    ImagePadding -> {{32.5, 29.}, {29., 19.}}, 
                    ImageMargins -> {{0, 0}, {0, 0}}, 
                    BaseStyle -> {
                    TooltipBoxOptions -> {TooltipDelay -> 0.08}}], 
                    
                    EventHandlerTag[{
                    "MouseClicked" :> (
                    NeuralNetworks`Private`NetGraph`selection = None), Method -> 
                    "Preemptive", PassEventsDown -> Automatic, PassEventsUp -> 
                    True}]]}, {
                    GridBox[{{
                    ItemBox[
                    StyleBox["Input Ports", Bold], 
                    Frame -> {{False, False}, {False, True}}, FrameStyle -> 
                    GrayLevel[0.85]], 
                    ItemBox[
                    StyleBox[
                    
                    GraphicsBox[{}, ImageSize -> {1, 11}, 
                    BaselinePosition -> (Scaled[0.] -> Baseline)], 
                    "CacheGraphics" -> False], 
                    Frame -> {{False, False}, {False, True}}, FrameStyle -> 
                    GrayLevel[0.85]]}, {
                    StyleBox[
                    TemplateBox[{
                    TagBox[
                    TooltipBox[
                    TagBox[
                    
                    PaneSelectorBox[{
                    False -> FrameBox[
                    "\"xData\"", FrameStyle -> GrayLevel[0, 0], FrameMargins -> 
                    0, ContentPadding -> False, BaselinePosition -> 0, 
                    StripOnInput -> False], True -> 
                    FrameBox["\"xData\"", Background -> 
                    RGBColor[0.9098039215686274, 0.9529411764705882, 1.], 
                    FrameStyle -> RGBColor[
                    0.9098039215686274, 0.9529411764705882, 1.], 
                    RoundingRadius -> 3, FrameMargins -> 0, ContentPadding -> 
                    False, BaselinePosition -> 0, StripOnInput -> False]}, 
                    Dynamic[
                    CurrentValue["MouseOver"]], FrameMargins -> 0, 
                    ContentPadding -> False, BaselinePosition -> 0, ImageSize -> 
                    Automatic, FrameMargins -> 0], 
                    EventHandlerTag[{"MouseClicked" :> CopyToClipboard[
                    ToString[{"xData"}, InputForm]], Method -> "Preemptive", 
                    PassEventsDown -> Automatic, PassEventsUp -> True}]], 
                    TagBox[
                    GridBox[{{
                    GraphicsBox[{
                    FaceForm[
                    RGBColor[
                    0.9607843137254902, 0.9607843137254902, 
                    0.9607843137254902]], 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843], 
                    Thickness[
                    NCache[
                    Rational[2, 45], 0.044444444444444446`]], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                    0}, {0, 1, 0}, {0, 1, 0}}}, {{{10.5, 18.75}, {10.5, 
                    18.}, {9., 18.}, {9., 15.75}, {13.5, 15.75}, {13.5, 
                    18.}, {12., 18.}, {12., 18.75}}, {{6., 18.}, {6., 4.5}, {
                    16.5, 4.5}, {16.5, 18.}, {14.25, 18.}, {14.25, 17.25}, {
                    15.75, 17.25}, {15.75, 5.25}, {6.75, 5.25}, {6.75, 
                    17.25}, {8.25, 17.25}, {8.25, 18.}}, {{9.75, 17.25}, {
                    12.75, 17.25}, {12.75, 16.5}, {9.75, 16.5}}}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2,
                     0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 
                    0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{8.25, 
                    14.25}, {14.25, 14.25}, {14.25, 13.5}, {8.25, 13.5}}, {{
                    8.25, 12.}, {14.25, 12.}, {14.25, 11.25}, {8.25, 
                    11.25}}, {{8.25, 9.75}, {14.25, 9.75}, {14.25, 9.}, {8.25,
                     9.}}, {{8.25, 7.5}, {14.25, 7.5}, {14.25, 6.75}, {8.25, 
                    6.75}}}]}, ImageSize -> 11], 
                    StyleBox["\"path: \"", 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843], StripOnInput -> False], 
                    RowBox[{"{", "\"xData\"", "}"}]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Center}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.2}}, "Rows" -> {{Automatic}}}], "Grid"], 
                    TooltipStyle -> {
                    Background -> RGBColor[
                    0.9098039215686274, 0.9529411764705882, 1.]}], 
                    Annotation[#, 
                    Grid[{{
                    Graphics[{
                    FaceForm[
                    RGBColor[
                    0.9607843137254902, 0.9607843137254902, 
                    0.9607843137254902]], 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843], 
                    Thickness[
                    Rational[2, 45]], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                    0}, {0, 1, 0}, {0, 1, 0}}}, {{{10.5, 18.75}, {10.5, 
                    18.}, {9., 18.}, {9., 15.75}, {13.5, 15.75}, {13.5, 
                    18.}, {12., 18.}, {12., 18.75}}, {{6., 18.}, {6., 4.5}, {
                    16.5, 4.5}, {16.5, 18.}, {14.25, 18.}, {14.25, 17.25}, {
                    15.75, 17.25}, {15.75, 5.25}, {6.75, 5.25}, {6.75, 
                    17.25}, {8.25, 17.25}, {8.25, 18.}}, {{9.75, 17.25}, {
                    12.75, 17.25}, {12.75, 16.5}, {9.75, 16.5}}}], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                    0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 
                    0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{8.25, 
                    14.25}, {14.25, 14.25}, {14.25, 13.5}, {8.25, 13.5}}, {{
                    8.25, 12.}, {14.25, 12.}, {14.25, 11.25}, {8.25, 
                    11.25}}, {{8.25, 9.75}, {14.25, 9.75}, {14.25, 9.}, {8.25,
                     9.}}, {{8.25, 7.5}, {14.25, 7.5}, {14.25, 6.75}, {8.25, 
                    6.75}}}]}, ImageSize -> 11], 
                    Style["path: ", 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843]], {"xData"}}}, 
                    Alignment -> {Left, Center}, 
                    Spacings -> {0.2, Automatic}], "Tooltip"]& ], "\":\""}, 
                    "RowDefault"], "SummaryItemAnnotation"], 
                    StyleBox[
                    TemplateBox[{"\[ThinSpace]", "\" \"", "\"vector\"", 
                    StyleBox[
                    "\"(\[VeryThinSpace]size: 1\[VeryThinSpace])\"", 
                    GrayLevel[0.5], StripOnInput -> False]}, 
                    "RowWithSeparators"], "SummaryItem"]}, {
                    StyleBox[
                    TemplateBox[{
                    TagBox[
                    TooltipBox[
                    TagBox[
                    
                    PaneSelectorBox[{
                    False -> FrameBox[
                    "\"Target\"", FrameStyle -> GrayLevel[0, 0], FrameMargins -> 
                    0, ContentPadding -> False, BaselinePosition -> 0, 
                    StripOnInput -> False], True -> 
                    FrameBox["\"Target\"", Background -> 
                    RGBColor[0.9098039215686274, 0.9529411764705882, 1.], 
                    FrameStyle -> RGBColor[
                    0.9098039215686274, 0.9529411764705882, 1.], 
                    RoundingRadius -> 3, FrameMargins -> 0, ContentPadding -> 
                    False, BaselinePosition -> 0, StripOnInput -> False]}, 
                    Dynamic[
                    CurrentValue["MouseOver"]], FrameMargins -> 0, 
                    ContentPadding -> False, BaselinePosition -> 0, ImageSize -> 
                    Automatic, FrameMargins -> 0], 
                    EventHandlerTag[{"MouseClicked" :> CopyToClipboard[
                    ToString[{"Target"}, InputForm]], Method -> "Preemptive", 
                    PassEventsDown -> Automatic, PassEventsUp -> True}]], 
                    TagBox[
                    GridBox[{{
                    GraphicsBox[{
                    FaceForm[
                    RGBColor[
                    0.9607843137254902, 0.9607843137254902, 
                    0.9607843137254902]], 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843], 
                    Thickness[
                    NCache[
                    Rational[2, 45], 0.044444444444444446`]], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                    0}, {0, 1, 0}, {0, 1, 0}}}, {{{10.5, 18.75}, {10.5, 
                    18.}, {9., 18.}, {9., 15.75}, {13.5, 15.75}, {13.5, 
                    18.}, {12., 18.}, {12., 18.75}}, {{6., 18.}, {6., 4.5}, {
                    16.5, 4.5}, {16.5, 18.}, {14.25, 18.}, {14.25, 17.25}, {
                    15.75, 17.25}, {15.75, 5.25}, {6.75, 5.25}, {6.75, 
                    17.25}, {8.25, 17.25}, {8.25, 18.}}, {{9.75, 17.25}, {
                    12.75, 17.25}, {12.75, 16.5}, {9.75, 16.5}}}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2,
                     0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 
                    0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{8.25, 
                    14.25}, {14.25, 14.25}, {14.25, 13.5}, {8.25, 13.5}}, {{
                    8.25, 12.}, {14.25, 12.}, {14.25, 11.25}, {8.25, 
                    11.25}}, {{8.25, 9.75}, {14.25, 9.75}, {14.25, 9.}, {8.25,
                     9.}}, {{8.25, 7.5}, {14.25, 7.5}, {14.25, 6.75}, {8.25, 
                    6.75}}}]}, ImageSize -> 11], 
                    StyleBox["\"path: \"", 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843], StripOnInput -> False], 
                    RowBox[{"{", "\"Target\"", "}"}]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Center}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.2}}, "Rows" -> {{Automatic}}}], "Grid"], 
                    TooltipStyle -> {
                    Background -> RGBColor[
                    0.9098039215686274, 0.9529411764705882, 1.]}], 
                    Annotation[#, 
                    Grid[{{
                    Graphics[{
                    FaceForm[
                    RGBColor[
                    0.9607843137254902, 0.9607843137254902, 
                    0.9607843137254902]], 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843], 
                    Thickness[
                    Rational[2, 45]], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                    0}, {0, 1, 0}, {0, 1, 0}}}, {{{10.5, 18.75}, {10.5, 
                    18.}, {9., 18.}, {9., 15.75}, {13.5, 15.75}, {13.5, 
                    18.}, {12., 18.}, {12., 18.75}}, {{6., 18.}, {6., 4.5}, {
                    16.5, 4.5}, {16.5, 18.}, {14.25, 18.}, {14.25, 17.25}, {
                    15.75, 17.25}, {15.75, 5.25}, {6.75, 5.25}, {6.75, 
                    17.25}, {8.25, 17.25}, {8.25, 18.}}, {{9.75, 17.25}, {
                    12.75, 17.25}, {12.75, 16.5}, {9.75, 16.5}}}], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                    0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 
                    0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{8.25, 
                    14.25}, {14.25, 14.25}, {14.25, 13.5}, {8.25, 13.5}}, {{
                    8.25, 12.}, {14.25, 12.}, {14.25, 11.25}, {8.25, 
                    11.25}}, {{8.25, 9.75}, {14.25, 9.75}, {14.25, 9.}, {8.25,
                     9.}}, {{8.25, 7.5}, {14.25, 7.5}, {14.25, 6.75}, {8.25, 
                    6.75}}}]}, ImageSize -> 11], 
                    Style["path: ", 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843]], {"Target"}}}, 
                    Alignment -> {Left, Center}, 
                    Spacings -> {0.2, Automatic}], "Tooltip"]& ], "\":\""}, 
                    "RowDefault"], "SummaryItemAnnotation"], 
                    StyleBox[
                    TemplateBox[{"\[ThinSpace]", "\" \"", "\"vector\"", 
                    StyleBox[
                    "\"(\[VeryThinSpace]size: 1\[VeryThinSpace])\"", 
                    GrayLevel[0.5], StripOnInput -> False]}, 
                    "RowWithSeparators"], "SummaryItem"]}, {
                    ItemBox[
                    StyleBox["Output Ports", Bold], 
                    Frame -> {{False, False}, {False, True}}, FrameStyle -> 
                    GrayLevel[0.85]], 
                    ItemBox[
                    StyleBox[
                    
                    GraphicsBox[{}, ImageSize -> {1, 11}, 
                    BaselinePosition -> (Scaled[0.] -> Baseline)], 
                    "CacheGraphics" -> False], 
                    Frame -> {{False, False}, {False, True}}, FrameStyle -> 
                    GrayLevel[0.85]]}, {
                    StyleBox[
                    TemplateBox[{
                    TagBox[
                    TooltipBox[
                    TagBox[
                    
                    PaneSelectorBox[{
                    False -> FrameBox[
                    "\"loss1\"", FrameStyle -> GrayLevel[0, 0], FrameMargins -> 
                    0, ContentPadding -> False, BaselinePosition -> 0, 
                    StripOnInput -> False], True -> 
                    FrameBox["\"loss1\"", Background -> 
                    RGBColor[0.9098039215686274, 0.9529411764705882, 1.], 
                    FrameStyle -> RGBColor[
                    0.9098039215686274, 0.9529411764705882, 1.], 
                    RoundingRadius -> 3, FrameMargins -> 0, ContentPadding -> 
                    False, BaselinePosition -> 0, StripOnInput -> False]}, 
                    Dynamic[
                    CurrentValue["MouseOver"]], FrameMargins -> 0, 
                    ContentPadding -> False, BaselinePosition -> 0, ImageSize -> 
                    Automatic, FrameMargins -> 0], 
                    EventHandlerTag[{"MouseClicked" :> CopyToClipboard[
                    ToString[{"loss1"}, InputForm]], Method -> "Preemptive", 
                    PassEventsDown -> Automatic, PassEventsUp -> True}]], 
                    TagBox[
                    GridBox[{{
                    GraphicsBox[{
                    FaceForm[
                    RGBColor[
                    0.9607843137254902, 0.9607843137254902, 
                    0.9607843137254902]], 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843], 
                    Thickness[
                    NCache[
                    Rational[2, 45], 0.044444444444444446`]], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                    0}, {0, 1, 0}, {0, 1, 0}}}, {{{10.5, 18.75}, {10.5, 
                    18.}, {9., 18.}, {9., 15.75}, {13.5, 15.75}, {13.5, 
                    18.}, {12., 18.}, {12., 18.75}}, {{6., 18.}, {6., 4.5}, {
                    16.5, 4.5}, {16.5, 18.}, {14.25, 18.}, {14.25, 17.25}, {
                    15.75, 17.25}, {15.75, 5.25}, {6.75, 5.25}, {6.75, 
                    17.25}, {8.25, 17.25}, {8.25, 18.}}, {{9.75, 17.25}, {
                    12.75, 17.25}, {12.75, 16.5}, {9.75, 16.5}}}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2,
                     0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 
                    0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{8.25, 
                    14.25}, {14.25, 14.25}, {14.25, 13.5}, {8.25, 13.5}}, {{
                    8.25, 12.}, {14.25, 12.}, {14.25, 11.25}, {8.25, 
                    11.25}}, {{8.25, 9.75}, {14.25, 9.75}, {14.25, 9.}, {8.25,
                     9.}}, {{8.25, 7.5}, {14.25, 7.5}, {14.25, 6.75}, {8.25, 
                    6.75}}}]}, ImageSize -> 11], 
                    StyleBox["\"path: \"", 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843], StripOnInput -> False], 
                    RowBox[{"{", "\"loss1\"", "}"}]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Center}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.2}}, "Rows" -> {{Automatic}}}], "Grid"], 
                    TooltipStyle -> {
                    Background -> RGBColor[
                    0.9098039215686274, 0.9529411764705882, 1.]}], 
                    Annotation[#, 
                    Grid[{{
                    Graphics[{
                    FaceForm[
                    RGBColor[
                    0.9607843137254902, 0.9607843137254902, 
                    0.9607843137254902]], 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843], 
                    Thickness[
                    Rational[2, 45]], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                    0}, {0, 1, 0}, {0, 1, 0}}}, {{{10.5, 18.75}, {10.5, 
                    18.}, {9., 18.}, {9., 15.75}, {13.5, 15.75}, {13.5, 
                    18.}, {12., 18.}, {12., 18.75}}, {{6., 18.}, {6., 4.5}, {
                    16.5, 4.5}, {16.5, 18.}, {14.25, 18.}, {14.25, 17.25}, {
                    15.75, 17.25}, {15.75, 5.25}, {6.75, 5.25}, {6.75, 
                    17.25}, {8.25, 17.25}, {8.25, 18.}}, {{9.75, 17.25}, {
                    12.75, 17.25}, {12.75, 16.5}, {9.75, 16.5}}}], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                    0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 
                    0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{8.25, 
                    14.25}, {14.25, 14.25}, {14.25, 13.5}, {8.25, 13.5}}, {{
                    8.25, 12.}, {14.25, 12.}, {14.25, 11.25}, {8.25, 
                    11.25}}, {{8.25, 9.75}, {14.25, 9.75}, {14.25, 9.}, {8.25,
                     9.}}, {{8.25, 7.5}, {14.25, 7.5}, {14.25, 6.75}, {8.25, 
                    6.75}}}]}, ImageSize -> 11], 
                    Style["path: ", 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843]], {"loss1"}}}, 
                    Alignment -> {Left, Center}, 
                    Spacings -> {0.2, Automatic}], "Tooltip"]& ], "\":\""}, 
                    "RowDefault"], "SummaryItemAnnotation"], 
                    StyleBox["\"real\"", "SummaryItem"]}, {
                    StyleBox[
                    TemplateBox[{
                    TagBox[
                    TooltipBox[
                    TagBox[
                    
                    PaneSelectorBox[{
                    False -> FrameBox[
                    "\"physloss\"", FrameStyle -> GrayLevel[0, 0], 
                    FrameMargins -> 0, ContentPadding -> False, 
                    BaselinePosition -> 0, StripOnInput -> False], True -> 
                    FrameBox["\"physloss\"", Background -> 
                    RGBColor[0.9098039215686274, 0.9529411764705882, 1.], 
                    FrameStyle -> RGBColor[
                    0.9098039215686274, 0.9529411764705882, 1.], 
                    RoundingRadius -> 3, FrameMargins -> 0, ContentPadding -> 
                    False, BaselinePosition -> 0, StripOnInput -> False]}, 
                    Dynamic[
                    CurrentValue["MouseOver"]], FrameMargins -> 0, 
                    ContentPadding -> False, BaselinePosition -> 0, ImageSize -> 
                    Automatic, FrameMargins -> 0], 
                    EventHandlerTag[{"MouseClicked" :> CopyToClipboard[
                    ToString[{"physloss"}, InputForm]], Method -> 
                    "Preemptive", PassEventsDown -> Automatic, PassEventsUp -> 
                    True}]], 
                    TagBox[
                    GridBox[{{
                    GraphicsBox[{
                    FaceForm[
                    RGBColor[
                    0.9607843137254902, 0.9607843137254902, 
                    0.9607843137254902]], 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843], 
                    Thickness[
                    NCache[
                    Rational[2, 45], 0.044444444444444446`]], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                    0}, {0, 1, 0}, {0, 1, 0}}}, {{{10.5, 18.75}, {10.5, 
                    18.}, {9., 18.}, {9., 15.75}, {13.5, 15.75}, {13.5, 
                    18.}, {12., 18.}, {12., 18.75}}, {{6., 18.}, {6., 4.5}, {
                    16.5, 4.5}, {16.5, 18.}, {14.25, 18.}, {14.25, 17.25}, {
                    15.75, 17.25}, {15.75, 5.25}, {6.75, 5.25}, {6.75, 
                    17.25}, {8.25, 17.25}, {8.25, 18.}}, {{9.75, 17.25}, {
                    12.75, 17.25}, {12.75, 16.5}, {9.75, 16.5}}}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2,
                     0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 
                    0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{8.25, 
                    14.25}, {14.25, 14.25}, {14.25, 13.5}, {8.25, 13.5}}, {{
                    8.25, 12.}, {14.25, 12.}, {14.25, 11.25}, {8.25, 
                    11.25}}, {{8.25, 9.75}, {14.25, 9.75}, {14.25, 9.}, {8.25,
                     9.}}, {{8.25, 7.5}, {14.25, 7.5}, {14.25, 6.75}, {8.25, 
                    6.75}}}]}, ImageSize -> 11], 
                    StyleBox["\"path: \"", 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843], StripOnInput -> False], 
                    RowBox[{"{", "\"physloss\"", "}"}]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Center}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.2}}, "Rows" -> {{Automatic}}}], "Grid"], 
                    TooltipStyle -> {
                    Background -> RGBColor[
                    0.9098039215686274, 0.9529411764705882, 1.]}], 
                    Annotation[#, 
                    Grid[{{
                    Graphics[{
                    FaceForm[
                    RGBColor[
                    0.9607843137254902, 0.9607843137254902, 
                    0.9607843137254902]], 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843], 
                    Thickness[
                    Rational[2, 45]], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                    0}, {0, 1, 0}, {0, 1, 0}}}, {{{10.5, 18.75}, {10.5, 
                    18.}, {9., 18.}, {9., 15.75}, {13.5, 15.75}, {13.5, 
                    18.}, {12., 18.}, {12., 18.75}}, {{6., 18.}, {6., 4.5}, {
                    16.5, 4.5}, {16.5, 18.}, {14.25, 18.}, {14.25, 17.25}, {
                    15.75, 17.25}, {15.75, 5.25}, {6.75, 5.25}, {6.75, 
                    17.25}, {8.25, 17.25}, {8.25, 18.}}, {{9.75, 17.25}, {
                    12.75, 17.25}, {12.75, 16.5}, {9.75, 16.5}}}], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                    0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 
                    0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{8.25, 
                    14.25}, {14.25, 14.25}, {14.25, 13.5}, {8.25, 13.5}}, {{
                    8.25, 12.}, {14.25, 12.}, {14.25, 11.25}, {8.25, 
                    11.25}}, {{8.25, 9.75}, {14.25, 9.75}, {14.25, 9.}, {8.25,
                     9.}}, {{8.25, 7.5}, {14.25, 7.5}, {14.25, 6.75}, {8.25, 
                    6.75}}}]}, ImageSize -> 11], 
                    Style["path: ", 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843]], {"physloss"}}}, 
                    Alignment -> {Left, Center}, 
                    Spacings -> {0.2, Automatic}], "Tooltip"]& ], "\":\""}, 
                    "RowDefault"], "SummaryItemAnnotation"], 
                    StyleBox[
                    TemplateBox[{"\[ThinSpace]", "\" \"", "\"vector\"", 
                    StyleBox[
                    "\"(\[VeryThinSpace]size: 1\[VeryThinSpace])\"", 
                    GrayLevel[0.5], StripOnInput -> False]}, 
                    "RowWithSeparators"], "SummaryItem"]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}]}, {
                    DynamicBox[
                    If[
                    IntegerQ[NeuralNetworks`Private`NetGraph`selection], 
                    NeuralNetworks`FormatSelectedParameterGraph[
                    
                    Part[<|"Nodes" -> <|
                    "physloss" -> <|
                    "Type" -> "NetArray", 
                    "Arrays" -> <|
                    "Array" -> NeuralNetworks`Private`DummyArray[{1}]|>, 
                    "Parameters" -> <|
                    "Dimensions" -> 
                    NeuralNetworks`TensorT[{1}, NeuralNetworks`AtomT], 
                    "$ArrayDimensions" -> {1}|>, "Inputs" -> <||>, 
                    "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{1}, 
                    NeuralNetworks`AtomT]|>|>, 
                    "net" -> <|
                    "Type" -> "Chain", 
                    "Nodes" -> <|
                    "1" -> <|"Type" -> "Linear", 
                    "Arrays" -> <|"Weights" -> 
                    NetArray[<|"Name" -> "1/Weights", "Array" -> Automatic, 
                    "Dimensions" -> Automatic|>], "Biases" -> 
                    NetArray[<|"Name" -> "1/Biases", "Array" -> Automatic, 
                    "Dimensions" -> Automatic|>]|>, 
                    "Parameters" -> <|
                    "OutputDimensions" -> {10}, "$OutputSize" -> 10, 
                    "$InputSize" -> 1, "$InputDimensions" -> {1}|>, 
                    "Inputs" -> <|"Input" -> 
                    NeuralNetworks`TensorT[{1}, NeuralNetworks`AtomT]|>, 
                    "Outputs" -> <|"Output" -> 
                    NeuralNetworks`TensorT[{10}, NeuralNetworks`RealT]|>|>, 
                    "2" -> <|"Type" -> "Function", "Arrays" -> <||>, 
                    "Parameters" -> <|
                    "Function" -> Tanh, 
                    "Net" -> <|"Type" -> "Elementwise", "Arrays" -> <||>, 
                    "Parameters" -> <|"Function" -> 
                    NeuralNetworks`ValidatedParameter[Tanh], 
                    "$Dimensions" -> {10}|>, 
                    "Inputs" -> <|"Input" -> 
                    NeuralNetworks`TensorT[{10}, NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> 
                    NeuralNetworks`TensorT[{10}, NeuralNetworks`RealT]|>|>, 
                    "$InputNames" -> {"Input"}, 
                    "$OutputNames" -> {"Output"}|>, 
                    "Inputs" -> <|"Input" -> 
                    NeuralNetworks`TensorT[{10}, NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> 
                    NeuralNetworks`TensorT[{10}, NeuralNetworks`RealT]|>|>, 
                    "3" -> <|"Type" -> "Chain", 
                    "Nodes" -> <|"1" -> <|
                    "Type" -> "Chain", 
                    "Nodes" -> <|"1" -> <|"Type" -> "Linear", 
                    "Arrays" -> <|"Weights" -> NetArray[<|
                    "Name" -> "3/1/1/Weights", "Array" -> Automatic, 
                    "Dimensions" -> Automatic|>], "Biases" -> 
                    NetArray[<|"Name" -> "3/1/1/Biases", "Array" -> Automatic,
                     "Dimensions" -> Automatic|>]|>, 
                    "Parameters" -> <|"OutputDimensions" -> {10}, 
                    "$OutputSize" -> 10, "$InputSize" -> 10, 
                    "$InputDimensions" -> {10}|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{10}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{10}, 
                    NeuralNetworks`RealT]|>|>, 
                    "2" -> <|"Type" -> "Elementwise", "Arrays" -> <||>, 
                    "Parameters" -> <|"Function" -> 
                    NeuralNetworks`ValidatedParameter[Tanh], 
                    "$Dimensions" -> {10}|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{10}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{10}, 
                    NeuralNetworks`RealT]|>|>|>, 
                    "Edges" -> {NeuralNetworks`NetPath[
                    "Nodes", "1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Nodes", "2", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "1", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "2", "Outputs", "Output"]}, 
                    "Inputs" -> <|"Input" -> 
                    NeuralNetworks`TensorT[{10}, NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> 
                    NeuralNetworks`TensorT[{10}, NeuralNetworks`RealT]|>|>, 
                    "2" -> <|"Type" -> "Chain", 
                    "Nodes" -> <|"1" -> <|"Type" -> "Linear", 
                    "Arrays" -> <|"Weights" -> NetArray[<|
                    "Name" -> "3/2/1/Weights", "Array" -> Automatic, 
                    "Dimensions" -> Automatic|>], "Biases" -> 
                    NetArray[<|"Name" -> "3/2/1/Biases", "Array" -> Automatic,
                     "Dimensions" -> Automatic|>]|>, 
                    "Parameters" -> <|"OutputDimensions" -> {10}, 
                    "$OutputSize" -> 10, "$InputSize" -> 10, 
                    "$InputDimensions" -> {10}|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{10}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{10}, 
                    NeuralNetworks`RealT]|>|>, 
                    "2" -> <|"Type" -> "Elementwise", "Arrays" -> <||>, 
                    "Parameters" -> <|"Function" -> 
                    NeuralNetworks`ValidatedParameter[Tanh], 
                    "$Dimensions" -> {10}|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{10}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{10}, 
                    NeuralNetworks`RealT]|>|>|>, 
                    "Edges" -> {NeuralNetworks`NetPath[
                    "Nodes", "1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Nodes", "2", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "1", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "2", "Outputs", "Output"]}, 
                    "Inputs" -> <|"Input" -> 
                    NeuralNetworks`TensorT[{10}, NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> 
                    NeuralNetworks`TensorT[{10}, NeuralNetworks`RealT]|>|>|>, 
                    "Edges" -> {NeuralNetworks`NetPath[
                    "Nodes", "1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Nodes", "2", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "1", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "2", "Outputs", "Output"]}, 
                    "Inputs" -> <|"Input" -> 
                    NeuralNetworks`TensorT[{10}, NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> 
                    NeuralNetworks`TensorT[{10}, NeuralNetworks`RealT]|>|>, 
                    "4" -> <|"Type" -> "Linear", 
                    "Arrays" -> <|"Weights" -> 
                    NetArray[<|"Name" -> "4/Weights", "Array" -> Automatic, 
                    "Dimensions" -> Automatic|>], "Biases" -> 
                    NetArray[<|"Name" -> "4/Biases", "Array" -> Automatic, 
                    "Dimensions" -> Automatic|>]|>, 
                    "Parameters" -> <|
                    "OutputDimensions" -> {1}, "$OutputSize" -> 1, 
                    "$InputSize" -> 10, "$InputDimensions" -> {10}|>, 
                    "Inputs" -> <|"Input" -> 
                    NeuralNetworks`TensorT[{10}, NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> 
                    NeuralNetworks`TensorT[{1}, NeuralNetworks`RealT]|>|>|>, 
                    "Edges" -> {
                    NeuralNetworks`NetPath["Nodes", "1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Nodes", "2", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "1", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "3", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "2", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "4", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "3", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "4", "Outputs", "Output"]}, 
                    "Inputs" -> <|
                    "Input" -> NeuralNetworks`TensorT[{1}, 
                    NeuralNetworks`AtomT]|>, 
                    "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{1}, 
                    NeuralNetworks`RealT]|>|>, 
                    "loss1" -> <|
                    "Type" -> "MeanSquaredLoss", "Arrays" -> <||>, 
                    "Parameters" -> <|"$Dimensions" -> {1}|>, 
                    "Inputs" -> <|
                    "Input" -> NeuralNetworks`TensorT[{1}, 
                    NeuralNetworks`RealT], "Target" -> 
                    NeuralNetworks`TensorT[{1}, NeuralNetworks`AtomT]|>, 
                    "Outputs" -> <|
                    "Loss" -> NeuralNetworks`TensorT[{}, 
                    NeuralNetworks`RealT]|>|>|>, 
                    "Inputs" -> <|
                    "xData" -> NeuralNetworks`TensorT[{1}, 
                    NeuralNetworks`AtomT], "Target" -> 
                    NeuralNetworks`TensorT[{1}, NeuralNetworks`AtomT]|>, 
                    "Outputs" -> <|
                    "loss1" -> NeuralNetworks`TensorT[{}, 
                    NeuralNetworks`RealT], "physloss" -> 
                    NeuralNetworks`TensorT[{1}, NeuralNetworks`AtomT]|>, 
                    "Edges" -> {
                    NeuralNetworks`NetPath["Nodes", "net", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "xData"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "loss1", "Inputs", "Target"] -> 
                    NeuralNetworks`NetPath["Inputs", "Target"], 
                    NeuralNetworks`NetPath["Outputs", "physloss"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "physloss", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "loss1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "net", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Outputs", "loss1"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "loss1", "Outputs", "Loss"]}|>, 
                    Apply[Sequence, 
                    Part[{
                    NeuralNetworks`NetPath["Inputs", "Target"], 
                    NeuralNetworks`NetPath["Nodes", "loss1"], 
                    NeuralNetworks`NetPath["Inputs", "xData"], 
                    NeuralNetworks`NetPath["Nodes", "net"], 
                    NeuralNetworks`NetPath["Outputs", "loss1"], 
                    NeuralNetworks`NetPath["Nodes", "physloss"], 
                    NeuralNetworks`NetPath["Outputs", "physloss"]}, 
                    NeuralNetworks`Private`NetGraph`selection]]], 
                    Part[{
                    NeuralNetworks`NetPath["Inputs", "Target"], 
                    NeuralNetworks`NetPath["Nodes", "loss1"], 
                    NeuralNetworks`NetPath["Inputs", "xData"], 
                    NeuralNetworks`NetPath["Nodes", "net"], 
                    NeuralNetworks`NetPath["Outputs", "loss1"], 
                    NeuralNetworks`NetPath["Nodes", "physloss"], 
                    NeuralNetworks`NetPath["Outputs", "physloss"]}, 
                    NeuralNetworks`Private`NetGraph`selection], <|
                    "1/Biases" -> NeuralNetworks`Private`DummyArray[{10}], 
                    "1/Weights" -> NeuralNetworks`Private`DummyArray[{10, 1}],
                     "3/1/1/Biases" -> 
                    NeuralNetworks`Private`DummyArray[{10}], "3/1/1/Weights" -> 
                    NeuralNetworks`Private`DummyArray[{10, 10}], 
                    "3/2/1/Biases" -> NeuralNetworks`Private`DummyArray[{10}],
                     "3/2/1/Weights" -> 
                    NeuralNetworks`Private`DummyArray[{10, 10}], "4/Biases" -> 
                    NeuralNetworks`Private`DummyArray[{1}], "4/Weights" -> 
                    NeuralNetworks`Private`DummyArray[{1, 10}]|>, {}], 
                    ToBoxes[""]], 
                    TrackedSymbols :> {
                    NeuralNetworks`Private`NetGraph`selection}]}}, 
                   GridBoxAlignment -> {"Columns" -> {{Left}}}], 
                  Initialization :> {NetGraph}]}}, BaselinePosition -> 
               Automatic, 
               GridBoxAlignment -> {
                "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
               GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
               GridBoxSpacings -> {
                "Columns" -> {{2}}, "Rows" -> {{Automatic}}}]}}, 
            GridBoxAlignment -> {"Rows" -> {{Top}}}, 
            GridBoxItemSize -> {
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
            GridFrameMargins -> {{0, 0}, {0, 0}}, 
            BaselinePosition -> {1, 1}]}, 
         Dynamic[Typeset`open], ImageSize -> Automatic], BaselinePosition -> 
        Baseline, 
        BaseStyle -> {
         ShowStringCharacters -> False, NumberMarks -> False, PrintPrecision -> 
          3, ShowSyntaxStyles -> False}]], 
      StyleBox["]", "NonInterpretableSummary"]}]},
   "CopyTag",
   DisplayFunction->(#& ),
   InterpretationFunction->("NetGraph[<>]"& )],
  False,
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",
 CellChangeTimes->{
  3.850892837473298*^9, 3.850892885436908*^9, 3.850893078111383*^9, 
   3.850893171423069*^9, 3.850893311815632*^9, {3.850893510203519*^9, 
   3.850893538449823*^9}, 3.850893799847357*^9, 3.8508938355836697`*^9, 
   3.850894250545528*^9, 3.850894345029724*^9, 3.85089440085415*^9, 
   3.850894463622608*^9, 3.850894520821835*^9, 3.850894716761385*^9, 
   3.8508947750503817`*^9, {3.850894828870555*^9, 3.850894851645693*^9}, 
   3.850894893788903*^9, 3.850894923920171*^9, {3.85089548729185*^9, 
   3.850895512974223*^9}, 3.8508957386554127`*^9, 3.850895871470887*^9, 
   3.850895991738378*^9, 3.850896023974262*^9, 3.8508967219848843`*^9, 
   3.850896770301671*^9, {3.8508968504975233`*^9, 3.850896871913221*^9}, 
   3.8508969205698023`*^9, 3.850897164720289*^9},
 CellLabel->"Out[68]=",ExpressionUUID->"cc69b4fb-fdb1-4ce9-8b18-58705feffe68"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Show", "[", "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"Plot", "[", 
    RowBox[{
     RowBox[{"oscillator", "[", 
      RowBox[{"2", ",", "20", ",", "x"}], "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"x", ",", "0", ",", "1"}], "}"}], ",", " ", 
     RowBox[{"ColorFunction", "\[Rule]", "Hue"}]}], "]"}], ",", 
   "\[IndentingNewLine]", 
   RowBox[{"Plot", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"HopefullyFinalNet", "[", 
       RowBox[{"[", "1", "]"}], "]"}], "[", "i", "]"}], ",", " ", 
     RowBox[{"{", 
      RowBox[{"i", ",", "0", ",", "1"}], "}"}], ",", " ", 
     RowBox[{"PlotStyle", "->", "Gray"}]}], "]"}], ",", "\[IndentingNewLine]", 
   RowBox[{"Graphics", "@", 
    RowBox[{"Line", "[", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"0.5", ",", " ", 
         RowBox[{"-", "1"}]}], "}"}], ",", " ", 
       RowBox[{"{", 
        RowBox[{"0.5", ",", " ", "1"}], "}"}]}], "}"}], "]"}]}]}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.850893848948072*^9, 3.850893854341077*^9}, {
  3.8508971887250977`*^9, 3.850897200686097*^9}},
 CellLabel->"In[69]:=",ExpressionUUID->"d1a2aaee-56d0-4ebe-ad80-85733bd4fafa"],

Cell[BoxData[
 GraphicsBox[{{GraphicsComplexBox[CompressedData["
1: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
Z2uh8dNi+B+Ebnz/
     "], {{}, {}, 
      TagBox[
       {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[1.6], 
        Opacity[1.], LineBox[CompressedData["
1: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
         "],
         VertexColors->Automatic]},
       Annotation[#, "Charting`Private`Tag$74319#1"]& ]},
     VertexColors->{
       Hue[1.], 
       Hue[0.9568474148055095], 
       Hue[0.8251586550388389], 
       Hue[0.6483168272731851], 
       Hue[0.4546308631935385], 
       Hue[0.25646554863048954`], 
       Hue[0.11095358223605811`], 
       Hue[0.018459464798481484`], 
       Hue[0.0034118532375415067`], 
       Hue[0.054161446091131216`], 
       Hue[0.16541414507311042`], 
       Hue[0.30146323361889754`], 
       Hue[0.442538780508978], 
       Hue[0.5797338972376637], 
       Hue[0.6739761214737563], 
       Hue[0.7257126324611431], 
       Hue[0.7212001535281476], 
       Hue[0.6720189110141365], 
       Hue[0.5820110654776063], 
       Hue[0.4795174474718758], 
       Hue[0.36805778448474546`], 
       Hue[0.2766147995833438], 
       Hue[0.2198846595368256], 
       Hue[0.19696540164332602`], 
       Hue[0.2123782179434921], 
       Hue[0.2571366578742177], 
       Hue[0.32866361381700854`], 
       Hue[0.4048212234634144], 
       Hue[0.48339662801028904`], 
       Hue[0.5439788865086771], 
       Hue[0.5777724330811937], 
       Hue[0.5857416062250662], 
       Hue[0.5671753013908074], 
       Hue[0.5291594580646249], 
       Hue[0.4738833583448411], 
       Hue[0.41821907885762927`], 
       Hue[0.3635170522650708], 
       Hue[0.3254813871914708], 
       Hue[0.3052075612497624], 
       Hue[0.30418843343490115`], 
       Hue[0.32154375119944983`], 
       Hue[0.355644127170623], 
       Hue[0.39772445268956436`], 
       Hue[0.4377739881817479], 
       Hue[0.47502189149256036`], 
       Hue[0.49892261073207816`], 
       Hue[0.509356775379053], 
       Hue[0.505519156902777], 
       Hue[0.48937515034005935`], 
       Hue[0.4611914815453272], 
       Hue[0.9889930703692982], 
       Hue[0.9004987163427658], 
       Hue[0.7413236132334308], 
       Hue[0.3518775839026026], 
       Hue[0.17748718821241716`], 
       Hue[0.05529131528369258], 
       Hue[0.0014620904109823307`], 
       Hue[0.021561043508635025`], 
       Hue[0.10375573788317688`], 
       Hue[0.23101125275676365`], 
       Hue[0.5146493788171704], 
       Hue[0.6318636103009276], 
       Hue[0.7069041008928099], 
       Hue[0.7301957244370614], 
       Hue[0.7014849801174814], 
       Hue[0.6307649405400417], 
       Hue[0.5319089074440728], 
       Hue[0.4226064942938888], 
       Hue[0.31908649144821705`], 
       Hue[0.24425257442839948`], 
       Hue[0.20320581046313263`], 
       Hue[0.20043009982145532`], 
       Hue[0.2315618035434162], 
       Hue[0.29070988265500086`], 
       Hue[0.4454837392063931], 
       Hue[0.5164068766490385], 
       Hue[0.5639344199279939], 
       Hue[0.5855368070069277], 
       Hue[0.5793750129467076], 
       Hue[0.5502261421669414], 
       Hue[0.5027374667024946], 
       Hue[0.38954330348630617`], 
       Hue[0.34253825378216224`], 
       Hue[0.3130615009130836], 
       Hue[0.3019859637250233], 
       Hue[0.31085702964520034`], 
       Hue[0.33700102944401544`], 
       Hue[0.3761060790622078], 
       Hue[0.4575986817525609], 
       Hue[0.48852315360732335`], 
       Hue[0.5058332405619365], 
       Hue[0.5093492068252795], 
       Hue[0.49878267925349384`], 
       Hue[0.4762886362920881], 
       Hue[0.9972377595811077], 
       Hue[0.9312813792043833], 
       Hue[0.7846301202067723], 
       Hue[0.40260162476804023`], 
       Hue[0.21557384627749385`], 
       Hue[0.08085927825371891], 
       Hue[0.007569863163956414], 
       Hue[0.010586816973188196`], 
       Hue[0.07726276644860525], 
       Hue[0.19742510998202015`], 
       Hue[0.47929435695320716`], 
       Hue[0.6069566574776752], 
       Hue[0.6921630681728711], 
       Hue[0.7296762794420095], 
       Hue[0.7126421529541846], 
       Hue[0.6524753653695168], 
       Hue[0.5573785538890773], 
       Hue[0.450924009666047], 
       Hue[0.34287344904721445`], 
       Hue[0.25948649353177694`], 
       Hue[0.21024913492094016`], 
       Hue[0.19759936924294802`], 
       Hue[0.22110335848322576`], 
       Hue[0.2732639642288768], 
       Hue[0.42538841979366515`], 
       Hue[0.5005092099632417], 
       Hue[0.5546934606039622], 
       Hue[0.5826057157260994], 
       Hue[0.5833233781316565], 
       Hue[0.5592698318036184], 
       Hue[0.5163361864586752], 
       Hue[0.4036228925946139], 
       Hue[0.352576685851435], 
       Hue[0.3187153694229895], 
       Hue[0.30290763041250707`], 
       Hue[0.30699016768718934`], 
       Hue[0.32881698087602107`], 
       Hue[0.3656687593225954], 
       Hue[0.44793855643929603`], 
       Hue[0.48213712583447726`], 
       Hue[0.5027960586675507], 
       Hue[0.5098450832336271], 
       Hue[0.5025105235088245], 
       Hue[0.48313141582289176`], 
       Hue[0.9754518573941597], 
       Hue[0.8649571757036536], 
       Hue[0.30299680272876733`], 
       Hue[0.14252083680229616`], 
       Hue[0.03444544874840477], 
       Hue[0.00010398486508805815`], 
       Hue[0.036155870054588646`], 
       Hue[0.13327129587436498`], 
       Hue[0.5482411025629521], 
       Hue[0.6542592460631192], 
       Hue[0.7181047370131197], 
       Hue[0.7273366107922754], 
       Hue[0.6878850281063505], 
       Hue[0.29693014188074257`], 
       Hue[0.23102257627020567`], 
       Hue[0.1987796069712647], 
       Hue[0.205386566079433], 
       Hue[0.24362121456791286`], 
       Hue[0.4648885332629658], 
       Hue[0.5309404700546411], 
       Hue[0.5716420496218855], 
       Hue[0.5865727257151305], 
       Hue[0.573965129245202], 
       Hue[0.540151160067122], 
       Hue[0.37612875877282037`], 
       Hue[0.3334831328227732], 
       Hue[0.30855199066459466`], 
       Hue[0.30242401032401106`], 
       Hue[0.31573058597419845`], 
       Hue[0.34598321429529055`], 
       Hue[0.46665622483807834`], 
       Hue[0.4941315837885616], 
       Hue[0.5080215851425653], 
       Hue[0.5078951870350402], 
       Hue[0.49438569793384135`], 
       Hue[0.4689421989493116], 
       Hue[0.9993138773576917], 
       Hue[0.9447431868723521], 
       Hue[0.8052710886002279], 
       Hue[0.4284878192144614], 
       Hue[0.23569013262989266`], 
       Hue[0.09535511335002544], 
       Hue[0.012416981761704471`], 
       Hue[0.00651454548880398], 
       Hue[0.06526624085499105], 
       Hue[0.18120050527621936`], 
       Hue[0.46106800158684524`], 
       Hue[0.5936214730113275], 
       Hue[0.6834927846365019], 
       Hue[0.7281276512286537], 
       Hue[0.7172549809117243], 
       Hue[0.6625353235798045], 
       Hue[0.569815908101122], 
       Hue[0.465206550797552], 
       Hue[0.3553063566534771], 
       Hue[0.2678215126863767], 
       Hue[0.21474561545679055`], 
       Hue[0.19700414489992643`], 
       Hue[0.21651638834479736`], 
       Hue[0.2650220044541558], 
       Hue[0.41514971435146203`], 
       Hue[0.49209478949644664`], 
       Hue[0.5495160324054348], 
       Hue[0.5804264460055597], 
       Hue[0.5847275152911491], 
       Hue[0.5633711959215023], 
       Hue[0.5228549849585805], 
       Hue[0.4108660655097128], 
       Hue[0.35793963983585003`], 
       Hue[0.32196181982177596`], 
       Hue[0.3038847464751781], 
       Hue[0.3054528665727254], 
       Hue[0.32505977403052194`], 
       Hue[0.36059720544575524`], 
       Hue[0.4429128733450321], 
       Hue[0.4786673076179345], 
       Hue[0.5009627581611023], 
       Hue[0.5097251709866026], 
       Hue[0.5041076396414639], 
       Hue[0.4863339347980238], 
       Hue[0.9828710234495321], 
       Hue[0.8832923960888555], 
       Hue[0.3271743382139245], 
       Hue[0.15959566958478616`], 
       Hue[0.044268142314836556`], 
       Hue[0.00019337307025973915`], 
       Hue[0.028418295931356086`], 
       Hue[0.11815984246578093`], 
       Hue[0.5316873042172314], 
       Hue[0.6433864798446933], 
       Hue[0.7129512265211195], 
       Hue[0.7291829753041139], 
       Hue[0.6949797634889439], 
       Hue[0.30779078249909153`], 
       Hue[0.2373810681337084], 
       Hue[0.20066519112153092`], 
       Hue[0.2026478319486967], 
       Hue[0.2374001699812741], 
       Hue[0.45528565552427486`], 
       Hue[0.5238528132189096], 
       Hue[0.5679830181272578], 
       Hue[0.5862903916128747], 
       Hue[0.5768479543343968], 
       Hue[0.5453105669303194], 
       Hue[0.3827440223611579], 
       Hue[0.33788312915460816`], 
       Hue[0.31066213638926676`], 
       Hue[0.3020367671253597], 
       Hue[0.31317197038374744`], 
       Hue[0.3413996776773687], 
       Hue[0.4622085744694986], 
       Hue[0.4914272605184611], 
       Hue[0.5070339797762392], 
       Hue[0.508739936379077], 
       Hue[0.49666447901885713`], 
       Hue[0.4726722422928341], 
       Hue[0.9937902454191361], 
       Hue[0.9165146266166616], 
       Hue[0.06749591946657801], 
       Hue[0.003919030783754052], 
       Hue[0.015609428891030397`], 
       Hue[0.699971216757225], 
       Hue[0.7303632774022073], 
       Hue[0.7073791856954091], 
       Hue[0.25162539534682765`], 
       Hue[0.20640118012583167`], 
       Hue[0.19874410699069098`], 
       Hue[0.22612387557100475`], 
       Hue[0.5595022421681706], 
       Hue[0.584309098885265], 
       Hue[0.5815364892839555], 
       Hue[0.3157471346942727], 
       Hue[0.3022753199773609], 
       Hue[0.30879389782493594`], 
       Hue[0.4854245129748536], 
       Hue[0.5044201628958161], 
       Hue[0.509718783537733], 
       Hue[0.5007335092505529], 
       Hue[0.9667661925555533], 
       Hue[0.02583863830291333], 
       Hue[0.0011818652150552555`], 
       Hue[0.04474657846926766], 
       Hue[0.7223594076174131], 
       Hue[0.7246703827183743], 
       Hue[0.22518744589636994`], 
       Hue[0.19754748163603134`], 
       Hue[0.208634382039461], 
       Hue[0.5749065206349886], 
       Hue[0.5863879817745395], 
       Hue[0.5707371319346564], 
       Hue[0.30673329444513014`], 
       Hue[0.30314306831387317`], 
       Hue[0.31852422625639154`], 
       Hue[0.4966314184512103], 
       Hue[0.5087957746504135], 
       Hue[0.506819786792017], 
       Hue[0.46511104327578334`], 
       Hue[0.9998317258266405], 
       Hue[0.9509681597328024], 
       Hue[0.8153126620244369], 
       Hue[0.4415316609757316], 
       Hue[0.24599819700986064`], 
       Hue[0.10301852170983622`], 
       Hue[0.0152889908141981], 
       Hue[0.0048408833970324805`], 
       Hue[0.05959974864541673], 
       Hue[0.1732497988665789], 
       Hue[0.4518382171586136], 
       Hue[0.5867449839550105], 
       Hue[0.6788391636490541], 
       Hue[0.7270286465258367], 
       Hue[0.7193120632429801], 
       Hue[0.6673512627236854], 
       Hue[0.5759458057962669], 
       Hue[0.4723610253431274], 
       Hue[0.3616442509073246], 
       Hue[0.27216190098388954`], 
       Hue[0.21723526414490893`], 
       Hue[0.19691482891959594`], 
       Hue[0.21439028563027615`], 
       Hue[0.2610331068364633], 
       Hue[0.4099948976947927], 
       Hue[0.4877798709633255], 
       Hue[0.5467918284652941], 
       Hue[0.5791586577276414], 
       Hue[0.5852837377285557], 
       Hue[0.5653111688170056], 
       Hue[0.5260352716422533], 
       Hue[0.41453007897562516`], 
       Hue[0.36070226393656263`], 
       Hue[0.3236878102890886], 
       Hue[0.3045029235071989], 
       Hue[0.3047861626591104], 
       Hue[0.32327080137803543`], 
       Hue[0.3581049084776401], 
       Hue[0.4403567480221323], 
       Hue[0.47686610231215976`], 
       Hue[0.49996837320774584`], 
       Hue[0.5095721492687053], 
       Hue[0.5048369390284297], 
       Hue[0.4878754078513014], 
       Hue[0.9860959897132404], 
       Hue[0.8920405754704226], 
       Hue[0.3394642235638259], 
       Hue[0.16844154127581717`], 
       Hue[0.049630774104489184`], 
       Hue[0.00067968478812791], 
       Hue[0.024878002437049684`], 
       Hue[0.11086629066175724`], 
       Hue[0.5232262185200781], 
       Hue[0.6377049849149692], 
       Hue[0.7100389363460009], 
       Hue[0.7297943271471654], 
       Hue[0.6983074338301829], 
       Hue[0.313385910395041], 
       Hue[0.24075339417151076`], 
       Hue[0.2018535953262627], 
       Hue[0.20147314136468028`], 
       Hue[0.23443202408538538`], 
       Hue[0.450407958045255], 
       Hue[0.5201735956371143], 
       Hue[0.5660070639074255], 
       Hue[0.5859727159172649], 
       Hue[0.5781565865671658], 
       Hue[0.5477997262080732], 
       Hue[0.3861217439374481], 
       Hue[0.3401793538647262], 
       Hue[0.31182583379229883`], 
       Hue[0.30196905649702754`], 
       Hue[0.3119835198823455], 
       Hue[0.33917631126870074`], 
       Hue[0.4599232055568946], 
       Hue[0.4899998645875516], 
       Hue[0.5064602142625718], 
       Hue[0.5090742844857543], 
       Hue[0.4977440839091062], 
       Hue[0.47449542131047157`], 
       Hue[0.9956841411546937], 
       Hue[0.9240577059915343], 
       Hue[0.07403431290013895], 
       Hue[0.005594983556776678], 
       Hue[0.012980615612672552`], 
       Hue[0.6961757916204239], 
       Hue[0.7301270936158388], 
       Hue[0.7100907872114038], 
       Hue[0.2554957763782571], 
       Hue[0.20824379357162065`], 
       Hue[0.19810353521186538`], 
       Hue[0.22356041200275353`], 
       Hue[0.5571444524392815], 
       Hue[0.5835169115041335], 
       Hue[0.5824772874623582], 
       Hue[0.3171961842491085], 
       Hue[0.3025484679119037], 
       Hue[0.30785915480990866`], 
       Hue[0.4838040302677882], 
       Hue[0.5036343868730178], 
       Hue[0.509812541827281], 
       Hue[0.5016441322273737], 
       Hue[0.9712653142864771], 
       Hue[0.029989237985885042`], 
       Hue[0.0004978921949427284], 
       Hue[0.04034635252407731], 
       Hue[0.7203446513454894], 
       Hue[0.7261050370218644], 
       Hue[0.22803899739325412`], 
       Hue[0.19808203255406662`], 
       Hue[0.20694762893907065`], 
       Hue[0.5733238784161767], 
       Hue[0.5865384276352568], 
       Hue[0.572393585479803], 
       Hue[0.30760609999367183`], 
       Hue[0.30274238629082356`], 
       Hue[0.31709858811332675`], 
       Hue[0.49540733478866494`], 
       Hue[0.5084353545597643], 
       Hue[0.5073859931086108], 
       Hue[0.46703846950620614`], 
       Hue[0.998448479886106], 
       Hue[0.009843866155091807], 
       Hue[0.00843063624649587], 
       Hue[0.7290100214584059], 
       Hue[0.715030962226523], 
       Hue[0.212416637447252], 
       Hue[0.19723260179711513`], 
       Hue[0.5815755271304598], 
       Hue[0.5840737672867806], 
       Hue[0.3033530092993661], 
       Hue[0.30618779701623844`], 
       Hue[0.5019054232796265], 
       Hue[0.5098160612835756], 
       Hue[0.9793217325836672], 
       Hue[0.03920568734138302], 
       Hue[1.9431316287676914`*^-6], 
       Hue[0.7156400717745212], 
       Hue[0.7283631856834863], 
       Hue[0.19964057480653322`], 
       Hue[0.20395279152107798`], 
       Hue[0.5698615651448196], 
       Hue[0.5864902343719636], 
       Hue[0.3095707549211819], 
       Hue[0.3021886018508314], 
       Hue[0.5075544538039404], 
       Hue[0.5083467089643028], 
       Hue[0.991558886737508], 
       Hue[0.0025416021976406022`], 
       Hue[0.7303857878923152], 
       Hue[0.20472174257038858`], 
       Hue[0.199520012193598], 
       Hue[0.584982346562472], 
       Hue[0.5805020310888032], 
       Hue[0.3020879253290879], 
       Hue[0.5095641958602498], 
       Hue[0.021995004825586528`], 
       Hue[0.002153912450069295], 
       Hue[0.7241487618328206], 
       Hue[0.7230346961721441], 
       Hue[0.19717547031288632`], 
       Hue[0.5861221085495295], 
       Hue[0.30593374080967534`], 
       Hue[0.3036253405287925], 
       Hue[0.5091028896748487], 
       Hue[0.5061972641252878], 
       Hue[0.46316151351666784`], 
       Hue[0.9999596783728093], 
       Hue[0.9539513856066393], 
       Hue[0.8202605533701683], 
       Hue[0.44807490014134127`], 
       Hue[0.2512123122927336], 
       Hue[0.10695235782006424`], 
       Hue[0.01683695467242885], 
       Hue[0.0040956569670293486`], 
       Hue[0.056851752355151], 
       Hue[0.1693172494948873], 
       Hue[0.44719682180885745`], 
       Hue[0.5832560410452572], 
       Hue[0.6764336754521145], 
       Hue[0.7263977833099855], 
       Hue[0.7202773573073147], 
       Hue[0.6697038811667531], 
       Hue[0.5789867699336907], 
       Hue[0.4759393159769706], 
       Hue[0.3648418163136129], 
       Hue[0.274374419359509], 
       Hue[0.21854005590628103`], 
       Hue[0.19692258570687277`], 
       Hue[0.21336988592730155`], 
       Hue[0.25907312285803985`], 
       Hue[0.40741019161402214`], 
       Hue[0.4855966234689855], 
       Hue[0.5453963720065264], 
       Hue[0.5784803296826425], 
       Hue[0.5855250157817945], 
       Hue[0.5662528084609693], 
       Hue[0.527604533443602], 
       Hue[0.4163716119691961], 
       Hue[0.36210323042306836`], 
       Hue[0.32457619615199695`], 
       Hue[0.30484443586734944`], 
       Hue[0.3044786309587214], 
       Hue[0.32239943626426715`], 
       Hue[0.35687046043821974`], 
       Hue[0.4390685917365928], 
       Hue[0.4759493150001718], 
       Hue[0.4994518915005314], 
       Hue[0.5094722684784718], 
       Hue[0.5051839743865574], 
       Hue[0.4886305819218906], 
       Hue[0.9875857312181044], 
       Hue[0.8963063801407845], 
       Hue[0.3456559736141298], 
       Hue[0.17293967557690268`], 
       Hue[0.052423956625145984`], 
       Hue[0.001033807889657623], 
       Hue[0.02319140923548957], 
       Hue[0.10728775949388453`], 
       Hue[0.5189519319922496], 
       Hue[0.6348041110853369], 
       Hue[0.7084992741165242], 
       Hue[0.730021359558941], 
       Hue[0.6999151398411236], 
       Hue[0.3162232314400494], 
       Hue[0.24248721959758351`], 
       Hue[0.20250922965159196`], 
       Hue[0.2009350811322139], 
       Hue[0.23298453472279038`], 
       Hue[0.44795145855976426`], 
       Hue[0.5183010405805644], 
       Hue[0.5649827808748183], 
       Hue[0.5857695624378338], 
       Hue[0.5787771518138014], 
       Hue[0.5490208871529957], 
       Hue[0.3878271817579736], 
       Hue[0.34135104106317876`], 
       Hue[0.31243469453253747`], 
       Hue[0.3019669042475949], 
       Hue[0.31141246642009546`], 
       Hue[0.3380825446962907], 
       Hue[0.45876574819793875`], 
       Hue[0.4892676321926436], 
       Hue[0.5061533719726508], 
       Hue[0.5092192065164403], 
       Hue[0.4982685606704655], 
       Hue[0.47539587053651394`], 
       Hue[0.9965036533990517], 
       Hue[0.9277099028767435], 
       Hue[0.07741118116908019], 
       Hue[0.006545040376348843], 
       Hue[0.011754173708606208`], 
       Hue[0.694196488317554], 
       Hue[0.7299285695493786], 
       Hue[0.7113866466062204], 
       Hue[0.25747620575624014`], 
       Hue[0.20922615589271132`], 
       Hue[0.19783433757715396`], 
       Hue[0.222318458303834], 
       Hue[0.5559305441341034], 
       Hue[0.5830761906715545], 
       Hue[0.5829122346250385], 
       Hue[0.3179470444961341], 
       Hue[0.3027172833285415], 
       Hue[0.3074163871231355], 
       Hue[0.48297633116309163`], 
       Hue[0.5032217772411482], 
       Hue[0.5098364872624109], 
       Hue[0.5020829041825803], 
       Hue[0.9733979177627001], 
       Hue[0.03217923558692298], 
       Hue[0.00026456330760138425`], 
       Hue[0.03822466776463629], 
       Hue[0.7192528173210839], 
       Hue[0.7267463319398563], 
       Hue[0.22951435426113886`], 
       Hue[0.19841041602321333`], 
       Hue[0.20615128469307425`], 
       Hue[0.5724953306195166], 
       Hue[0.5865701371072155], 
       Hue[0.5731900593456889], 
       Hue[0.30806992185994525`], 
       Hue[0.3025728674258855], 
       Hue[0.31640731134624556`], 
       Hue[0.4947758849798226], 
       Hue[0.5082351400483068], 
       Hue[0.507647758707737], 
       Hue[0.46799339555560476`], 
       Hue[0.9989244877928809], 
       Hue[0.011093043683422343`], 
       Hue[0.0074424303027391114`], 
       Hue[0.7285958864539577], 
       Hue[0.7161637065940748], 
       Hue[0.21356098952413946`], 
       Hue[0.1971010307070317], 
       Hue[0.581015838546441], 
       Hue[0.5844127780128294], 
       Hue[0.3036080765844652], 
       Hue[0.3058118517359242], 
       Hue[0.5014405758283849], 
       Hue[0.5097783671078973], 
       Hue[0.9811366889897579], 
       Hue[0.04169925990903195], 
       Hue[0.00006088139301863027], 
       Hue[0.7143236295594844], 
       Hue[0.7287990350942779], 
       Hue[0.2001324154715796], 
       Hue[0.20328411726795242`], 
       Hue[0.5689345099517922], 
       Hue[0.5864050139098008], 
       Hue[0.310107386280593], 
       Hue[0.30210220205431704`], 
       Hue[0.5073008821769013], 
       Hue[0.5085506469270239], 
       Hue[0.9927165655601837], 
       Hue[0.0031930341472816703`], 
       Hue[0.7304011764169368], 
       Hue[0.20554104099298062`], 
       Hue[0.19911521302179447`], 
       Hue[0.5846605826147834], 
       Hue[0.5810309001555394], 
       Hue[0.30217092213173646`], 
       Hue[0.5096490675647403], 
       Hue[0.023878374998728635`], 
       Hue[0.0016320114417620601`], 
       Hue[0.7232822688767383], 
       Hue[0.7238775354381142], 
       Hue[0.19734119319625487`], 
       Hue[0.5862694255043903], 
       Hue[0.30632435245869793`], 
       Hue[0.30337405249353744`], 
       Hue[0.508955991297499], 
       Hue[0.5065155200951625], 
       Hue[0.4641389414291167], 
       Hue[0.9996163765329349], 
       Hue[0.005647269957591905], 
       Hue[0.7276052550827381], 
       Hue[0.19694204561245557`], 
       Hue[0.5850178703020079], 
       Hue[0.3041830272786626], 
       Hue[0.5096564413487235], 
       Hue[0.00039958828601804885`], 
       Hue[0.7295148039485877], 
       Hue[0.20123891556231463`], 
       Hue[0.586146309812301], 
       Hue[0.30199236410498087`], 
       Hue[0.5089145054050822], 
       Hue[0.9947795565586137], 
       Hue[0.004719661666282848], 
       Hue[0.7302719578404275], 
       Hue[0.1984068355440257], 
       Hue[0.5839278789206208], 
       Hue[0.30240115706591425`], 
       Hue[0.5097732915303294], 
       Hue[0.0008037404983536889], 
       Hue[0.7213801933052155], 
       Hue[0.7254129699400698], 
       Hue[0.19779440674088125`], 
       Hue[0.586477679987138], 
       Hue[0.3029324825203093], 
       Hue[0.5086222312447762], 
       Hue[0.997886138168534], 
       Hue[0.729370126116609], 
       Hue[0.19739875180034563`], 
       Hue[0.30311953252932555`], 
       Hue[0.5098382877175248], 
       Hue[0.000016375850514616097`], 
       Hue[0.727875637862944], 
       Hue[0.19918964806862957`], 
       Hue[0.5865461157226632], 
       Hue[0.30229589595785256`], 
       Hue[0.0019646526238763506`], 
       Hue[0.7303172536818068], 
       Hue[0.5852744124014346], 
       Hue[0.3020262877004737], 
       Hue[0.5094642231909867], 
       Hue[0.0027472897636919846`], 
       Hue[0.19705023484326734`], 
       Hue[0.5859461331185835], 
       Hue[0.5092364802332315], 
       Hue[0.4621789599449495], 
       Hue[0.9999908071892714], 
       Hue[0.9554103470051183], 
       Hue[0.8227158835260597], 
       Hue[0.45135136123523556`], 
       Hue[0.25383408455290213`], 
       Hue[0.10894458002969554`], 
       Hue[0.017638896543744564`], 
       Hue[0.003746061191312877], 
       Hue[0.05549934827118347], 
       Hue[0.16736197420727], 
       Hue[0.44486983368472827`], 
       Hue[0.5814990908819898], 
       Hue[0.6752113880365309], 
       Hue[0.7260619955374727], 
       Hue[0.7207440829476266], 
       Hue[0.6708661266211597], 
       Hue[0.580501033028453], 
       Hue[0.4777284420901881], 
       Hue[0.3664475319960289], 
       Hue[0.2754911436163423], 
       Hue[0.21920738944553142`], 
       Hue[0.19693960613163025`], 
       Hue[0.2128704467396316], 
       Hue[0.25810192523044806`], 
       Hue[0.4061162119169739], 
       Hue[0.4844986982056843], 
       Hue[0.5446903729677138], 
       Hue[0.5781300746249614], 
       Hue[0.5856364029550446], 
       Hue[0.5667164597996925], 
       Hue[0.5283838073180919], 
       Hue[0.4172946233260462], 
       Hue[0.36280854616674507`], 
       Hue[0.3250266968896073], 
       Hue[0.30502329727443234`], 
       Hue[0.3043313599013711], 
       Hue[0.3219696213860011], 
       Hue[0.35625626475914274`], 
       Hue[0.4384220825633182], 
       Hue[0.47548692546551913`], 
       Hue[0.4991888480559029], 
       Hue[0.5094164748377753], 
       Hue[0.5053530523162522], 
       Hue[0.48900420256714605`], 
       Hue[0.9882997273966143], 
       Hue[0.8984117911538605], 
       Hue[0.34876310969892166`], 
       Hue[0.1752072954384195], 
       Hue[0.05384838353979976], 
       Hue[0.001238671411110559], 
       Hue[0.022369173733794878`], 
       Hue[0.10551588784462423`], 
       Hue[0.5168041463736125], 
       Hue[0.6333387922487168], 
       Hue[0.7077086179827072], 
       Hue[0.7301151361492206], 
       Hue[0.7007048138509191], 
       Hue[0.31765164590453226`], 
       Hue[0.24336596763392349`], 
       Hue[0.2028524025374644], 
       Hue[0.20067844545327743`], 
       Hue[0.23227005722180188`], 
       Hue[0.44671897553966744`], 
       Hue[0.5173566428249443], 
       Hue[0.5644616040211143], 
       Hue[0.585656887413563], 
       Hue[0.5790789297644396], 
       Hue[0.549625516558515], 
       Hue[0.3886839245038264], 
       Hue[0.34194271584029734`], 
       Hue[0.31274585759574447`], 
       Hue[0.3019737791377214], 
       Hue[0.31113278814657486`], 
       Hue[0.3375402413554141], 
       Hue[0.4581834047632361], 
       Hue[0.4888969183975654], 
       Hue[0.5059949664893649], 
       Hue[0.5092860758325621], 
       Hue[0.4985269212743564], 
       Hue[0.4758432258268301], 
       Hue[0.9968814026299977], 
       Hue[0.9295057847653789], 
       Hue[0.07912635275973517], 
       Hue[0.0070481045885099625`], 
       Hue[0.011163089418390726`], 
       Hue[0.6931865293047925], 
       Hue[0.7298091515363099], 
       Hue[0.7120194620012161], 
       Hue[0.25847763172539007`], 
       Hue[0.20973257280383545`], 
       Hue[0.1977125670302054], 
       Hue[0.2217075361333815], 
       Hue[0.5553148912322927], 
       Hue[0.5828446723003333], 
       Hue[0.583120789575437], 
       Hue[0.31832902835393095`], 
       Hue[0.30280976386414693`], 
       Hue[0.30720120216787317`], 
       Hue[0.48255816046477434`], 
       Hue[0.5030105546421659], 
       Hue[0.5098427066180773], 
       Hue[0.5022981137633066], 
       Hue[0.9744347524258661], 
       Hue[0.03330282770310494], 
       Hue[0.00017516631115055414`], 
       Hue[0.03718363020476689], 
       Hue[0.7186858046923251], 
       Hue[0.7270478632991085], 
       Hue[0.23026436627187988`], 
       Hue[0.19858990772751975`], 
       Hue[0.20576495973074102`], 
       Hue[0.5720717775928054], 
       Hue[0.5865750764940711], 
       Hue[0.5735802806674762], 
       Hue[0.3083086770694], 
       Hue[0.30249585101320436`], 
       Hue[0.31606712093873934`], 
       Hue[0.49445533659803], 
       Hue[0.5081300302277536], 
       Hue[0.5077732701661544], 
       Hue[0.46846857495517014`], 
       Hue[0.9991300271644434], 
       Hue[0.01174566946728356], 
       Hue[0.006970929547336413], 
       Hue[0.7283685353780949], 
       Hue[0.7167145442308477], 
       Hue[0.21414827460416594`], 
       Hue[0.19704824569516938`], 
       Hue[0.5807248537809969], 
       Hue[0.5845731877159915], 
       Hue[0.3037437105961115], 
       Hue[0.30563023301458875`], 
       Hue[0.5012032858348269], 
       Hue[0.5097537088254951], 
       Hue[0.9820139630997686], 
       Hue[0.04297430342782105], 
       Hue[0.00011792213267192153`], 
       Hue[0.7136444173203238], 
       Hue[0.7289975066952692], 
       Hue[0.20039368539034577`], 
       Hue[0.20296191466691813`], 
       Hue[0.5684618134682031], 
       Hue[0.5863513817137326], 
       Hue[0.31038249886690045`], 
       Hue[0.30206685970867236`], 
       Hue[0.507169096907712], 
       Hue[0.5086471272675339], 
       Hue[0.9932639287485192], 
       Hue[0.003546707232799262], 
       Hue[0.7303888963728427], 
       Hue[0.20596600810270016`], 
       Hue[0.19892543940865415`], 
       Hue[0.584488556873624], 
       Hue[0.5812866132816868], 
       Hue[0.3022204434504919], 
       Hue[0.5096858233424291], 
       Hue[0.024848903926887378`], 
       Hue[0.0013979520339281737`], 
       Hue[0.7228278835695641], 
       Hue[0.7242802250175319], 
       Hue[0.19743926211206747`], 
       Hue[0.5863323049245519], 
       Hue[0.30652653313576866`], 
       Hue[0.30325601643532085`], 
       Hue[0.5088775483342796], 
       Hue[0.5066694078031689], 
       Hue[0.4646256706184077], 
       Hue[0.9997349606408383], 
       Hue[0.005236448407879957], 
       Hue[0.7273237302131541], 
       Hue[0.19692407113940585`], 
       Hue[0.5851538714081065], 
       Hue[0.30434027333131985`], 
       Hue[0.5096162423181595], 
       Hue[0.0005303920020837682], 
       Hue[0.729661115513212], 
       Hue[0.20154113590531675`], 
       Hue[0.586063204964525], 
       Hue[0.30197806954419804`], 
       Hue[0.5089962479394333], 
       Hue[0.9952424615701849], 
       Hue[0.005147983189013328], 
       Hue[0.7302062262196445], 
       Hue[0.19825093064836288`], 
       Hue[0.5837261141399079], 
       Hue[0.3024721262564731], 
       Hue[0.5097948268985687], 
       Hue[0.0006417663275243846], 
       Hue[0.7208694612961528], 
       Hue[0.7257653344395588], 
       Hue[0.19793312833305524`], 
       Hue[0.5865116782225581], 
       Hue[0.3028348676430779], 
       Hue[0.5085304598927095], 
       Hue[0.9981780824848383], 
       Hue[0.7291968228562069], 
       Hue[0.19731136128242172`], 
       Hue[0.30323357300308523`], 
       Hue[0.5098291057280255], 
       Hue[0.], 
       Hue[0.7281258605723994], 
       Hue[0.19940999879545324`], 
       Hue[0.5865218383192659], 
       Hue[0.3022396416620994], 
       Hue[0.0022438227550333756`], 
       Hue[0.7303581547877092], 
       Hue[0.5851320901875532], 
       Hue[0.30205443937769283`], 
       Hue[0.5095160936253827], 
       Hue[0.002441684430235791], 
       Hue[0.1971077968091568], 
       Hue[0.5860376965674697], 
       Hue[0.50917134770177], 
       Hue[0.46267086489575343`], 
       Hue[0.9999066416272024], 
       Hue[0.1969143301513292], 
       Hue[0.5095241589999915], 
       Hue[0.0008474844192292719], 
       Hue[0.7299144159501334], 
       Hue[0.5858748368938598], 
       Hue[0.3019653323453908], 
       Hue[0.7300345459112496], 
       Hue[0.30263018576806844`], 
       Hue[0.5098264305004734], 
       Hue[0.00037214810347613314`], 
       Hue[0.19824112630039387`], 
       Hue[0.5865579174269794], 
       Hue[0.9986972936407681], 
       Hue[0.7288097123312463], 
       Hue[0.19716248711984577`], 
       Hue[0.5097991498627552], 
       Hue[0.000022229199721057746`], 
       Hue[0.5864512955682013], 
       Hue[0.30214278567179], 
       Hue[0.0028580024327217735`], 
       Hue[0.7304001344379754], 
       Hue[0.30212675113105414`], 
       Hue[0.5096085228148353], 
       Hue[0.001884009728560232], 
       Hue[0.19725326577945265`], 
       Hue[0.58619935583749], 
       Hue[0.9994760047573628], 
       Hue[0.1969687408152447], 
       Hue[0.5096927497272287], 
       Hue[0.00028725508583743453`], 
       Hue[0.5862220365567584], 
       Hue[0.302011932574461], 
       Hue[0.7303243031558699], 
       Hue[0.30233555637254844`], 
       Hue[0.5097479416983489], 
       Hue[0.0009837839584546648], 
       Hue[0.19766586043666273`], 
       Hue[0.5864364440341081], 
       Hue[0.7295299414015992], 
       Hue[0.197494759257395], 
       Hue[0.5098436119368327], 
       Hue[0.00005104596531685379], 
       Hue[0.5865630752083039], 
       Hue[0.302357355372642], 
       Hue[0.7302631036806362], 
       Hue[0.30200346449333215`], 
       Hue[0.1970027735536695], 
       Hue[0.46168582378114603`]}], {}}, {{{}, {}, 
     TagBox[
      {GrayLevel[0.5], AbsoluteThickness[1.6], Opacity[1.], 
       LineBox[CompressedData["
1:eJxFxW0w03EcAPCNdZRrjMr9adxE5SlOUlKpuMhDneHk8nRCWk/InXR1WrdJ
nua6nZTnh5R2jGyuMnHsdDnPo1GzMUtj83RndnRZ9cL39+JzH0r8XWqiHg6H
C/7n/wGJypGu+fAz2xN8LFJkmLv39kcrS8paMV84cED8vhwLgyMStB3PsQR4
yuWpTwGWDlftvZydizFgumHroWcYG74SWc1dWa2DjXT0KD8rLmwXsqTsyePB
GYOe3iVrH2FzHkmKx3fCbXKf/qFT3XA3rdwyUi2ENQdPGzfe/gLrbXBMLO36
YA9dXFtoUz/cz3Af7HUYgq2LVBsNS8OwSiuTjruOwnUL7X3EQhFMJL9ZVijG
4Pwb/KQq22/w+lmOIjlLDKe7CXn7eiZgWZMwb4TyHf5NGyu1f/ADdjxnsJXU
LoH9aijXW8ylcAY51mYmSgY7qcONxMHTsJnxiqFwE03oLOUeKJuBb7q3T+4M
lMOci/FVn9fRGpWFyVzxLMwP9dNn+yrgLH9mJW8OTZkKmKhl/oRPHmewMbc5
OMpqaAMvQmv6CuQp9F9wCSEmnWqrhM2k/Bo9IXrHI3qYZ+o8jGuI4cpNF+C0
V9wC0250h2OOIemOCiYFpDk9IaphifOwKFOAbq7wtlXELMLRXA8SeQv9mFlN
l7xbghuV5FJi0DKcU86Mk15CJ1AX7ZpC0PsFgubgCHQu62pvfjw62ePl6q5M
tA1jj79BPXrrxMPd4rfoycXZ0XoOuiiiNfpCC1rnQL3HFKAlI6wKfRH6Q7b2
mmgczfaKta+dQAe+PsI7L0V/uj/wlT6PLnY+xgpRo1PlZWGUZfThoFuyrjU0
AT9WV6RFT/O9aHGbaAGt1sX1D/qFtZFGp0P/BaO4ekM=
        "]]},
      Annotation[#, "Charting`Private`Tag$75315#1"]& ]}, {}}, 
   LineBox[{{0.5, -1}, {0.5, 1}}]},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImagePadding->All,
  Method->{
   "DefaultBoundaryStyle" -> Automatic, 
    "DefaultGraphicsInteraction" -> {
     "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
      "Effects" -> {
       "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
        "Droplines" -> {
         "freeformCursorMode" -> True, 
          "placement" -> {"x" -> "All", "y" -> "None"}}}}, "DefaultMeshStyle" -> 
    AbsolutePointSize[6], "ScalingFunctions" -> None, 
    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& )}},
  PlotRange->{{0, 1}, {-0.7304003209557905, 1.0000000002055411`}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{3.850893855370734*^9, 3.850894469564039*^9, 
  3.8508945232623997`*^9, 3.85089471925449*^9, 3.850895848698666*^9, 
  3.85089716833412*^9},
 CellLabel->"Out[69]=",ImageCache->GraphicsData["CompressedBitmap", "\<\
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
sqlK1hQvoXo9AxBJj/jyXBj+mvG8HtUb5Vqc4czVafg5nSfaBj4OcPgplOwz
Pp/CM1qW+xdkR2usxMPg8ISWu4jPvqC56NEjlgN1lmwlnUzo60E2iIfGjIp+
fhThcTRbXBsqmccgQnARZeaesXgRJj9s5KCYFqyOmmZSzPmXjpM0iaIaFEKy
iKTvR1aE8oNsPRQVOH5Ay+X6CJ9F6T4d5T6CJgREMymPybXIJM65V2cLSyF3
F/Ldgy5C8phm6giFf6C23QmZxo8W79Qy95/ABt21jB+R1L1XR5WhKiRq8XZk
Qcjc5qPm79CygsimaPXZmyHD3y7Q03ezeeoTSwqZO3UUj83poTMY1bkRyW+C
pr/7qJmbtMxFHE3WqMnr8PccyJEudwubZznR1G1axOkc5bv1qwe4sa+Ir0eY
jUIpsB0z5FJEEiXXGSPOw4fX6qgixPqpSjQvTPbNEY/JUfKvrCZsdWEjmZnI
gZTla9ifMczSMomzgLm/aJl7jeahn7xESluOJ947R85VTCHQCqDNV6CLmemj
yTVDnrsMsonGGZcC6XLIgZqF6rUNCfzg0TmVPI/k8wMBy5dACZRlLvUB5Vpk
7iUeYKR0kZYV/8z2kUtM0MrbTCGegbiLUZUvYH3zRJXD1WBTIDkoPA8Jz0fL
hrJNfbGIGFFyfZgWp3Na5F6g1SpE1R5Q3y/UWZxzWsG1stCMick/IfmZUHUW
+3eNZ2lZajpkh/pMymdAjrj8uayf22hIzfJsnSd7OtNngajZU5D6VHQzp/mo
hT9pWe4UHzV7spa5p2v7K1DV0JSRPNDhIk8ii3xOIHQByfgPMOJkHzpzImQI
RVFxiDEY105Wy3NI28eDNndY5ZO1ouIJoXDLxyL5cahK03xcwRCZ+3sfNzcV
MvztIJ3Et8aNJiUTIhkKk0eyupurD+0iFR8FD0G1ffTj4m+GPHUEZAcZkzOA
naLTCo2+HrS52S4erTOVkagerpn/JaGPJ8I8/LbP1wqTtSx7mI+bO1TLnEkw
ObMmriLGiOTD0aMi8SeB0JkJSH0QmB7sQ+cO1rLigZBNMJrTgJW0iBMa63rQ
5v6qcIiOdCVTMG5hLJL/DrVrnI8rGIy/3bE+bjqt07njYXJ6TVxFjMfLmIMq
g+uPA6GL+yD1GJ3aPrp199Wy5F6QHahlpb2lk4e5kq6fh2tuhEUqsS5ShQB1
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
59PomuRjQj6XPS/PzbNwL3QN+sFZ7J0fhmt0Yqgh11aSHlJJerZK4YKwIq3v
fhvjlAfZqxAnGq7D9Q2KeCGQt0OnLGA69Ys0nTLf7i6twjvCEy68PX/AhXep
FENs1cgDbSbYXMXCwKc8tJLy1Uh0JcIVaHuX2cMJYkm6FKWjFTBMQY/Mai1o
Pb64KTjxS5lNZh0vYkxt0uLsjKkl3sky9Gfg/Vlh66f7ivEmviNLYIouC2EG
2F+MIrqIO9hoOaL7Ylh8KaIvw+882vhMvqk2b3PjlaRj4edpXzEd/5U9uUIo
c+q8EmfPuaIqZW+ykQPSBUC8CHXjEvZZ666lMQem6K0QLkQ4HxTPVZ8Q0G+v
mhK4zCE4iGKl52IYOQM1CC74eyD1DE39mumYhWU6dqHZHB5zgMDijO3Ofqmu
1xO2qkxX6V3kE3N8E3S/3hUdLpwt3LRiprOQ+EwU03TU4jNg0hnquqwUnWXS
nIs058sh96r+0c2BtmRp8kKmIxYV6MjF9nQZNFmo+hNg/sR2zVZgbfKewpyO
vELvTDZrUyV+c2t1DlrPNoSny9kGZ7DsLRYbzkQZnA3uOeUQujWQe5EmfsuU
WZynyd9Y7mi2UPVHuOEktmtRArmbURGtSOWT/Ck6jX36+n6pSQotB6dIEP/L
b5ElxVF3VPBVdO1h+nQwWB7ybZoOXWRYogIL0glAOh5Ix3FTSKLmoU4OWSRr
GWrM1lSJX1DbY/ZDAZTGDecB3zEd+F2CJrj6BAYMc8dC31QUzdFsHxQHcjGP
2MrIg8YAXxzbJi7oAITLWNelsd/bo5wyNBnKpsA3k+xzsWAiZl1FkjLIOwl5
p6CHmspt4ZKhvcBlzA9l2vcHe6hVXOk7DOEQ6JvAa4Wk08mW0cHIeija6ETW
r4FCcsnTHj8zjf4xT6N/tqd6FYCPckOlG8d22VIgEXvgD6XR0Y1H/gNRWQ/i
tnAp0ihw2fXnDO32k+WSobHQtT/8vJ89WjKYi1nKlqYxyJtG3rEsvNrCxaGd
fmFK/ZKmlOWibGPaG2E0ymhPM0mMyBpHeS3n1qLTYM3bA1n3glvHsH6zFcTF
zEITtC0mK9v/ily/yvUEW0yib1e0o13Ym36uyUXNebLTTpnp0iik3w1dwJ5t
wsdN8lbA32apQ8OXmqN1UC4pKNsRvh3Jtjeu5gj38BNu8hwRqgDsJ0souQy3
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\
\>", "ImageResolution" -> \
96.],ExpressionUUID->"317a5d53-7a49-4330-b49b-ccfd793b69d7"]
}, Open  ]]
},
WindowSize->{720., 763.5},
WindowMargins->{{Automatic, 0}, {0, Automatic}},
FrontEndVersion->"13.0 for Linux x86 (64-bit) (December 6, 2021)",
StyleDefinitions->"Default.nb",
ExpressionUUID->"9a8cb51a-b360-472f-bcc8-fac7c68417c1"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{}
*)
(*CellTagsIndex
CellTagsIndex->{}
*)
(*NotebookFileOutline
Notebook[{
Cell[CellGroupData[{
Cell[583, 22, 316, 7, 29, "Input",ExpressionUUID->"43da8242-a768-4fb2-bfd5-98d985cf1448"],
Cell[902, 31, 30972, 617, 112, "Output",ExpressionUUID->"5bde502d-a13f-488f-9ff0-ea89f9e6ea2b"]
}, Open  ]],
Cell[CellGroupData[{
Cell[31911, 653, 1332, 37, 71, "Input",ExpressionUUID->"82aa4030-f925-4563-9700-d8e26c5b3bf6"],
Cell[33246, 692, 1775, 46, 96, "Output",ExpressionUUID->"e78c12a3-d86b-41be-a543-6bd41d770e3b"]
}, Open  ]],
Cell[CellGroupData[{
Cell[35058, 743, 412, 9, 29, "Input",ExpressionUUID->"0d93859e-8a84-4a09-8930-68f5d6729a2d"],
Cell[35473, 754, 731, 17, 33, "Output",ExpressionUUID->"022c3877-0606-4569-bf57-5abbe4735456"]
}, Open  ]],
Cell[CellGroupData[{
Cell[36241, 776, 317, 7, 29, "Input",ExpressionUUID->"992be216-a291-4935-bbc7-ce757a17437e"],
Cell[36561, 785, 878, 21, 55, "Output",ExpressionUUID->"c88cc542-e05d-43b8-82d0-004d43a7f536"]
}, Open  ]],
Cell[CellGroupData[{
Cell[37476, 811, 567, 13, 51, "Input",ExpressionUUID->"ffd41f8a-7a8f-4c58-bb73-dbb5e098938c"],
Cell[38046, 826, 50483, 1036, 487, "Output",ExpressionUUID->"ff6584d1-ee7f-455a-ba26-f865d5a73aad"]
}, Open  ]],
Cell[CellGroupData[{
Cell[88566, 1867, 1151, 31, 113, "Input",ExpressionUUID->"a4f569cc-d829-418d-9ce7-ecafe49bbee7"],
Cell[89720, 1900, 65956, 1525, 229, "Output",ExpressionUUID->"4305931c-774c-4951-9293-3c780d5430c8"]
}, Open  ]],
Cell[CellGroupData[{
Cell[155713, 3430, 1504, 28, 154, "Input",ExpressionUUID->"af537a7b-0aa8-4667-ba33-5d7315313dfa"],
Cell[157220, 3460, 131431, 2626, 68, "Output",ExpressionUUID->"cc69b4fb-fdb1-4ce9-8b18-58705feffe68"]
}, Open  ]],
Cell[CellGroupData[{
Cell[288688, 6091, 1181, 31, 92, "Input",ExpressionUUID->"d1a2aaee-56d0-4ebe-ad80-85733bd4fafa"],
Cell[289872, 6124, 74204, 1660, 229, 56575, 1370, "CachedBoxData", "BoxData", "Output",ExpressionUUID->"317a5d53-7a49-4330-b49b-ccfd793b69d7"]
}, Open  ]]
}
]
*)

